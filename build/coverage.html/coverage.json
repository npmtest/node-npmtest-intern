{"/home/travis/build/npmtest/node-npmtest-intern/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_intern */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-intern/lib.npmtest_intern.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/lib.npmtest_intern.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_intern */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_intern = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_intern = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-intern/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":64},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-intern && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_intern */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_intern","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_intern.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_intern.rollup.js'] =","            local.assetsDict['/assets.npmtest_intern.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_intern.__dirname + '/lib.npmtest_intern.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/main.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/main.js","s":{"1":2,"2":0,"3":0,"4":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":3},"end":{"line":3,"column":22}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":47}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":13},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":34,"column":3}},"2":{"start":{"line":4,"column":1},"end":{"line":33,"column":3}},"3":{"start":{"line":20,"column":3},"end":{"line":20,"column":51}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":22}}},"branchMap":{},"code":["define([","\t'require'","], function (require) {","\treturn {","\t\t/**","\t\t * The arguments Intern was started with, post-processing (e.g.,","\t\t * repeated arguments are converted to arrays).","\t\t */","\t\targs: null,","","\t\t/**","\t\t * The executor for the current test run.","\t\t */","\t\texecutor: null,","","\t\t/**","\t\t * AMD plugin API interface for easy loading of test interfaces.","\t\t */","\t\tload: function (id, parentRequire, callback) {","\t\t\trequire([ './lib/interfaces/' + id ], callback);","\t\t},","","\t\tnormalize: function (interfaceId) {","\t\t\t// The loader should not attempt to normalize values passed to the","\t\t\t// loader plugin as module IDs, since they are not module IDs.","\t\t\treturn interfaceId;","\t\t},","","\t\t/**","\t\t * The planned execution mode. One of 'client', 'runner', or 'custom'.","\t\t */","\t\tmode: null","\t};","});",""],"l":{"1":2,"4":0,"20":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/chai.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/chai.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":19},"end":{"line":1,"column":35}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":8},"end":{"line":9,"column":47}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":13},"end":{"line":26,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":30,"column":3}},"2":{"start":{"line":3,"column":1},"end":{"line":3,"column":33}},"3":{"start":{"line":5,"column":1},"end":{"line":29,"column":3}},"4":{"start":{"line":10,"column":3},"end":{"line":13,"column":4}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":19}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":11}},"7":{"start":{"line":15,"column":3},"end":{"line":17,"column":4}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":59}},"9":{"start":{"line":19,"column":3},"end":{"line":21,"column":4}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":50}},"11":{"start":{"line":23,"column":3},"end":{"line":23,"column":22}},"12":{"start":{"line":27,"column":3},"end":{"line":27,"column":13}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":3},"end":{"line":10,"column":3}},{"start":{"line":10,"column":3},"end":{"line":10,"column":3}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":3},"end":{"line":15,"column":3}},{"start":{"line":15,"column":3},"end":{"line":15,"column":3}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":3},"end":{"line":19,"column":3}},{"start":{"line":19,"column":3},"end":{"line":19,"column":3}}]}},"code":["define([ 'chai' ], function (chai) {","\t// ensure that chai-generated errors always include a stack","\tchai.config.includeStack = true;","","\treturn {","\t\t/**","\t\t * AMD plugin API interface for easy loading of chai assertion interfaces.","\t\t */","\t\tload: function (id, parentRequire, callback) {","\t\t\tif (!id) {","\t\t\t\tcallback(chai);","\t\t\t\treturn;","\t\t\t}","","\t\t\tif (!chai[id]) {","\t\t\t\tthrow new Error('Invalid chai interface \"' + id + '\"');","\t\t\t}","","\t\t\tif (!chai[id].AssertionError) {","\t\t\t\tchai[id].AssertionError = chai.AssertionError;","\t\t\t}","","\t\t\tcallback(chai[id]);","\t\t},","","\t\tnormalize: function (id) {","\t\t\treturn id;","\t\t}","\t};","});",""],"l":{"1":2,"3":0,"5":0,"10":0,"11":0,"12":0,"15":0,"16":0,"19":0,"20":0,"23":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/client.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/client.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":2},"end":{"line":3,"column":14}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":4},"end":{"line":30,"column":40}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":26},"end":{"line":32,"column":38}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":44,"column":1}},"2":{"start":{"line":3,"column":1},"end":{"line":24,"column":6}},"3":{"start":{"line":4,"column":2},"end":{"line":23,"column":27}},"4":{"start":{"line":27,"column":1},"end":{"line":43,"column":4}},"5":{"start":{"line":31,"column":2},"end":{"line":36,"column":5}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"7":{"start":{"line":38,"column":2},"end":{"line":38,"column":31}},"8":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"9":{"start":{"line":41,"column":3},"end":{"line":41,"column":40}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":0},"end":{"line":2,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":0}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":67}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["/* jshint node:true, es3:false */","if (typeof process !== 'undefined' && typeof define === 'undefined') {","\t(function () {","\t\trequire('dojo/loader')((this.__internConfig = {","\t\t\tbaseUrl: process.cwd().replace(/\\\\/g, '/'),","\t\t\tpackages: [","\t\t\t\t{ name: 'intern', location: __dirname.replace(/\\\\/g, '/') }","\t\t\t],","\t\t\tmap: {","\t\t\t\tintern: {","\t\t\t\t\tdojo: 'intern/browser_modules/dojo',","\t\t\t\t\tchai: 'intern/browser_modules/chai/chai',","\t\t\t\t\tdiff: 'intern/browser_modules/diff/diff',","\t\t\t\t\t// benchmark requires lodash and platform","\t\t\t\t\tbenchmark: 'intern/browser_modules/benchmark/benchmark',","\t\t\t\t\tlodash: 'intern/browser_modules/lodash-amd/main',","\t\t\t\t\tplatform: 'intern/browser_modules/platform/platform'","\t\t\t\t},","\t\t\t\t'*': {","\t\t\t\t\t'intern/dojo': 'intern/browser_modules/dojo'","\t\t\t\t}","\t\t\t}","\t\t}), [ 'intern/client' ]);","\t})();","}","else {","\tdefine([","\t\t'./lib/executors/PreExecutor',","\t\t'dojo/has!host-node?./lib/exitHandler'","\t], function (PreExecutor, exitHandler) {","\t\tvar executor = new PreExecutor({","\t\t\tdefaultLoaderOptions: (function () {","\t\t\t\treturn this;","\t\t\t})().__internConfig,","\t\t\texecutorId: 'client'","\t\t});","","\t\tvar promise = executor.run();","","\t\tif (exitHandler) {","\t\t\texitHandler(process, promise, 10000);","\t\t}","\t});","}",""],"l":{"2":1,"3":1,"4":1,"27":0,"31":0,"33":0,"38":0,"40":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/order.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/order.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":3},"end":{"line":4,"column":28}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":47}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":9},"end":{"line":16,"column":21}}},"4":{"name":"(anonymous_4)","line":17,"loc":{"start":{"line":17,"column":23},"end":{"line":17,"column":42}}},"5":{"name":"(anonymous_5)","line":18,"loc":{"start":{"line":18,"column":27},"end":{"line":18,"column":44}}},"6":{"name":"(anonymous_6)","line":26,"loc":{"start":{"line":26,"column":13},"end":{"line":26,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":30,"column":3}},"2":{"start":{"line":5,"column":1},"end":{"line":5,"column":33}},"3":{"start":{"line":7,"column":1},"end":{"line":29,"column":3}},"4":{"start":{"line":16,"column":3},"end":{"line":23,"column":8}},"5":{"start":{"line":17,"column":4},"end":{"line":22,"column":7}},"6":{"start":{"line":18,"column":5},"end":{"line":21,"column":8}},"7":{"start":{"line":19,"column":6},"end":{"line":19,"column":22}},"8":{"start":{"line":20,"column":6},"end":{"line":20,"column":16}},"9":{"start":{"line":27,"column":3},"end":{"line":27,"column":45}}},"branchMap":{},"code":["define([","\t'./lib/util',","\t'dojo/Promise'","], function (util, Promise) {","\tvar queue = util.createQueue(1);","","\treturn {","\t\t/**","\t\t * AMD plugin for in-order loading of non-AMD JavaScript. Use this when you need to test modules that do not","\t\t * have proper dependency management.","\t\t *","\t\t * @example","\t\t * define([ 'intern!object', 'intern/order!jquery.js', 'intern/order!plugin.jquery.js', ... ], ...)","\t\t */","\t\tload: function (id, parentRequire, callback) {","\t\t\tqueue(function () {","\t\t\t\treturn new Promise(function (resolve) {","\t\t\t\t\tparentRequire([ id ], function (value) {","\t\t\t\t\t\tcallback(value);","\t\t\t\t\t\tresolve();","\t\t\t\t\t});","\t\t\t\t});","\t\t\t})();","\t\t},","","\t\tnormalize: function (id, normalize) {","\t\t\treturn normalize(id.replace(/\\.js$/, ''));","\t\t}","\t};","});",""],"l":{"1":1,"5":0,"7":0,"16":0,"17":0,"18":0,"19":0,"20":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/runner.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/runner.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0},"b":{"1":[0,1],"2":[1,1]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":2},"end":{"line":3,"column":14}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":4},"end":{"line":29,"column":40}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":26},"end":{"line":31,"column":38}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":39,"column":1}},"2":{"start":{"line":3,"column":1},"end":{"line":23,"column":6}},"3":{"start":{"line":4,"column":2},"end":{"line":22,"column":27}},"4":{"start":{"line":26,"column":1},"end":{"line":38,"column":4}},"5":{"start":{"line":30,"column":2},"end":{"line":35,"column":5}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":16}},"7":{"start":{"line":37,"column":2},"end":{"line":37,"column":46}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":0},"end":{"line":2,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":0}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":67}}]}},"code":["/* jshint node:true */","if (typeof process !== 'undefined' && typeof define === 'undefined') {","\t(function () {","\t\trequire('dojo/loader')((this.__internConfig = {","\t\t\tbaseUrl: process.cwd().replace(/\\\\/g, '/'),","\t\t\tpackages: [","\t\t\t\t{ name: 'intern', location: __dirname.replace(/\\\\/g, '/') }","\t\t\t],","\t\t\tmap: {","\t\t\t\tintern: {","\t\t\t\t\tdojo: 'intern/browser_modules/dojo',","\t\t\t\t\tbenchmark: 'intern/browser_modules/benchmark/benchmark',","\t\t\t\t\tchai: 'intern/browser_modules/chai/chai',","\t\t\t\t\tdiff: 'intern/browser_modules/diff/diff',","\t\t\t\t\tlodash: 'intern/browser_modules/lodash-amd/main',","\t\t\t\t\tplatform: 'intern/browser_modules/platform/platform'","\t\t\t\t},","\t\t\t\t'*': {","\t\t\t\t\t'intern/dojo': 'intern/browser_modules/dojo'","\t\t\t\t}","\t\t\t}","\t\t}), [ 'intern/runner' ]);","\t})();","}","else {","\tdefine([","\t\t'./lib/executors/PreExecutor',","\t\t'./lib/exitHandler'","\t], function (PreExecutor, exitHandler) {","\t\tvar executor = new PreExecutor({","\t\t\tdefaultLoaderOptions: (function () {","\t\t\t\treturn this;","\t\t\t})().__internConfig,","\t\t\texecutorId: 'runner'","\t\t});","","\t\texitHandler(process, executor.run(), 10000);","\t});","}",""],"l":{"2":1,"3":0,"4":0,"26":1,"30":0,"32":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/bin/intern-client.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/bin/intern-client.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":21}}},"branchMap":{},"code":["//#!/usr/bin/env node","require('../client');",""],"l":{"2":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/bin/intern-runner.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/bin/intern-runner.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":21}}},"branchMap":{},"code":["//#!/usr/bin/env node","require('../runner');",""],"l":{"2":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/BenchmarkTest.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/BenchmarkTest.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":3},"end":{"line":16,"column":2}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":24},"end":{"line":17,"column":36}}},"3":{"name":"createLifecycle","line":38,"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":35}}},"4":{"name":"BenchmarkTest","line":48,"loc":{"start":{"line":48,"column":1},"end":{"line":48,"column":32}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":68},"end":{"line":50,"column":80}},"skip":true},"6":{"name":"(anonymous_6)","line":63,"loc":{"start":{"line":63,"column":17},"end":{"line":63,"column":41}}},"7":{"name":"(anonymous_7)","line":64,"loc":{"start":{"line":64,"column":12},"end":{"line":64,"column":32}}},"8":{"name":"(anonymous_8)","line":80,"loc":{"start":{"line":80,"column":9},"end":{"line":80,"column":21}}},"9":{"name":"(anonymous_9)","line":83,"loc":{"start":{"line":83,"column":9},"end":{"line":83,"column":25}}},"10":{"name":"(anonymous_10)","line":109,"loc":{"start":{"line":109,"column":8},"end":{"line":109,"column":20}}},"11":{"name":"(anonymous_11)","line":118,"loc":{"start":{"line":118,"column":8},"end":{"line":118,"column":20}}},"12":{"name":"(anonymous_12)","line":127,"loc":{"start":{"line":127,"column":10},"end":{"line":127,"column":22}}},"13":{"name":"(anonymous_13)","line":133,"loc":{"start":{"line":133,"column":10},"end":{"line":133,"column":22}}},"14":{"name":"(anonymous_14)","line":139,"loc":{"start":{"line":139,"column":10},"end":{"line":139,"column":22}}},"15":{"name":"report","line":140,"loc":{"start":{"line":140,"column":4},"end":{"line":140,"column":31}}},"16":{"name":"(anonymous_16)","line":143,"loc":{"start":{"line":143,"column":69},"end":{"line":143,"column":81}}},"17":{"name":"(anonymous_17)","line":157,"loc":{"start":{"line":157,"column":23},"end":{"line":157,"column":73}}},"18":{"name":"(anonymous_18)","line":158,"loc":{"start":{"line":158,"column":17},"end":{"line":158,"column":35}}},"19":{"name":"(anonymous_19)","line":165,"loc":{"start":{"line":165,"column":27},"end":{"line":165,"column":39}}},"20":{"name":"(anonymous_20)","line":169,"loc":{"start":{"line":169,"column":27},"end":{"line":169,"column":39}}},"21":{"name":"(anonymous_21)","line":173,"loc":{"start":{"line":173,"column":30},"end":{"line":173,"column":42}}},"22":{"name":"(anonymous_22)","line":177,"loc":{"start":{"line":177,"column":30},"end":{"line":177,"column":42}}},"23":{"name":"(anonymous_23)","line":180,"loc":{"start":{"line":180,"column":15},"end":{"line":180,"column":27}}},"24":{"name":"(anonymous_24)","line":183,"loc":{"start":{"line":183,"column":12},"end":{"line":183,"column":24}}},"25":{"name":"(anonymous_25)","line":191,"loc":{"start":{"line":191,"column":7},"end":{"line":191,"column":24}}},"26":{"name":"(anonymous_26)","line":192,"loc":{"start":{"line":192,"column":43},"end":{"line":192,"column":55}}},"27":{"name":"(anonymous_27)","line":195,"loc":{"start":{"line":195,"column":15},"end":{"line":195,"column":27}}},"28":{"name":"noop","line":203,"loc":{"start":{"line":203,"column":1},"end":{"line":203,"column":17}},"skip":true},"29":{"name":"createDeferred","line":205,"loc":{"start":{"line":205,"column":1},"end":{"line":205,"column":71}}},"30":{"name":"(anonymous_30)","line":211,"loc":{"start":{"line":211,"column":12},"end":{"line":211,"column":24}}},"31":{"name":"(anonymous_31)","line":221,"loc":{"start":{"line":221,"column":11},"end":{"line":221,"column":28}}},"32":{"name":"(anonymous_32)","line":229,"loc":{"start":{"line":229,"column":18},"end":{"line":229,"column":38}}},"33":{"name":"(anonymous_33)","line":231,"loc":{"start":{"line":231,"column":11},"end":{"line":231,"column":23}}},"34":{"name":"(anonymous_34)","line":241,"loc":{"start":{"line":241,"column":13},"end":{"line":241,"column":33}}},"35":{"name":"(anonymous_35)","line":243,"loc":{"start":{"line":243,"column":30},"end":{"line":243,"column":42}}},"36":{"name":"(anonymous_36)","line":252,"loc":{"start":{"line":252,"column":23},"end":{"line":252,"column":72}}},"37":{"name":"(anonymous_37)","line":261,"loc":{"start":{"line":261,"column":22},"end":{"line":261,"column":54}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":274,"column":3}},"2":{"start":{"line":17,"column":1},"end":{"line":46,"column":6}},"3":{"start":{"line":18,"column":2},"end":{"line":36,"column":15}},"4":{"start":{"line":38,"column":2},"end":{"line":44,"column":3}},"5":{"start":{"line":39,"column":3},"end":{"line":43,"column":6}},"6":{"start":{"line":45,"column":2},"end":{"line":45,"column":25}},"7":{"start":{"line":48,"column":1},"end":{"line":103,"column":2}},"8":{"start":{"line":50,"column":2},"end":{"line":50,"column":83}},"9":{"start":{"line":51,"column":2},"end":{"line":51,"column":18}},"10":{"start":{"line":52,"column":2},"end":{"line":56,"column":5}},"11":{"start":{"line":58,"column":2},"end":{"line":89,"column":3}},"12":{"start":{"line":59,"column":3},"end":{"line":59,"column":31}},"13":{"start":{"line":62,"column":3},"end":{"line":69,"column":4}},"14":{"start":{"line":63,"column":4},"end":{"line":68,"column":18}},"15":{"start":{"line":64,"column":5},"end":{"line":67,"column":7}},"16":{"start":{"line":65,"column":6},"end":{"line":65,"column":90}},"17":{"start":{"line":66,"column":6},"end":{"line":66,"column":35}},"18":{"start":{"line":71,"column":3},"end":{"line":77,"column":5}},"19":{"start":{"line":79,"column":3},"end":{"line":86,"column":6}},"20":{"start":{"line":81,"column":5},"end":{"line":81,"column":22}},"21":{"start":{"line":84,"column":5},"end":{"line":84,"column":22}},"22":{"start":{"line":88,"column":3},"end":{"line":88,"column":36}},"23":{"start":{"line":92,"column":2},"end":{"line":92,"column":16}},"24":{"start":{"line":93,"column":2},"end":{"line":101,"column":3}},"25":{"start":{"line":94,"column":3},"end":{"line":100,"column":4}},"26":{"start":{"line":97,"column":4},"end":{"line":97,"column":10}},"27":{"start":{"line":99,"column":4},"end":{"line":99,"column":28}},"28":{"start":{"line":102,"column":2},"end":{"line":102,"column":24}},"29":{"start":{"line":105,"column":1},"end":{"line":200,"column":4}},"30":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"31":{"start":{"line":111,"column":5},"end":{"line":111,"column":33}},"32":{"start":{"line":113,"column":4},"end":{"line":113,"column":16}},"33":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"34":{"start":{"line":120,"column":5},"end":{"line":120,"column":41}},"35":{"start":{"line":122,"column":4},"end":{"line":122,"column":13}},"36":{"start":{"line":128,"column":4},"end":{"line":128,"column":139}},"37":{"start":{"line":134,"column":4},"end":{"line":134,"column":97}},"38":{"start":{"line":140,"column":4},"end":{"line":148,"column":5}},"39":{"start":{"line":141,"column":5},"end":{"line":147,"column":6}},"40":{"start":{"line":142,"column":6},"end":{"line":142,"column":86}},"41":{"start":{"line":143,"column":6},"end":{"line":143,"column":85}},"42":{"start":{"line":146,"column":6},"end":{"line":146,"column":31}},"43":{"start":{"line":150,"column":4},"end":{"line":150,"column":47}},"44":{"start":{"line":152,"column":4},"end":{"line":152,"column":27}},"45":{"start":{"line":154,"column":4},"end":{"line":154,"column":20}},"46":{"start":{"line":155,"column":4},"end":{"line":155,"column":35}},"47":{"start":{"line":157,"column":4},"end":{"line":197,"column":7}},"48":{"start":{"line":158,"column":5},"end":{"line":163,"column":8}},"49":{"start":{"line":159,"column":6},"end":{"line":159,"column":31}},"50":{"start":{"line":160,"column":6},"end":{"line":160,"column":24}},"51":{"start":{"line":162,"column":6},"end":{"line":162,"column":19}},"52":{"start":{"line":165,"column":5},"end":{"line":167,"column":8}},"53":{"start":{"line":166,"column":6},"end":{"line":166,"column":30}},"54":{"start":{"line":169,"column":5},"end":{"line":171,"column":8}},"55":{"start":{"line":170,"column":6},"end":{"line":170,"column":30}},"56":{"start":{"line":173,"column":5},"end":{"line":175,"column":8}},"57":{"start":{"line":174,"column":6},"end":{"line":174,"column":16}},"58":{"start":{"line":177,"column":5},"end":{"line":179,"column":8}},"59":{"start":{"line":178,"column":6},"end":{"line":178,"column":22}},"60":{"start":{"line":182,"column":5},"end":{"line":182,"column":21}},"61":{"start":{"line":184,"column":5},"end":{"line":184,"column":27}},"62":{"start":{"line":186,"column":5},"end":{"line":190,"column":8}},"63":{"start":{"line":192,"column":5},"end":{"line":194,"column":8}},"64":{"start":{"line":193,"column":6},"end":{"line":193,"column":18}},"65":{"start":{"line":196,"column":5},"end":{"line":196,"column":30}},"66":{"start":{"line":203,"column":1},"end":{"line":203,"column":19},"skip":true},"67":{"start":{"line":205,"column":1},"end":{"line":250,"column":2}},"68":{"start":{"line":206,"column":2},"end":{"line":208,"column":3}},"69":{"start":{"line":207,"column":3},"end":{"line":207,"column":31}},"70":{"start":{"line":210,"column":2},"end":{"line":249,"column":4}},"71":{"start":{"line":212,"column":4},"end":{"line":212,"column":30}},"72":{"start":{"line":213,"column":4},"end":{"line":218,"column":5}},"73":{"start":{"line":214,"column":5},"end":{"line":214,"column":24}},"74":{"start":{"line":216,"column":9},"end":{"line":218,"column":5}},"75":{"start":{"line":217,"column":5},"end":{"line":217,"column":54}},"76":{"start":{"line":222,"column":4},"end":{"line":222,"column":28}},"77":{"start":{"line":223,"column":4},"end":{"line":223,"column":22}},"78":{"start":{"line":224,"column":4},"end":{"line":224,"column":23}},"79":{"start":{"line":230,"column":4},"end":{"line":230,"column":20}},"80":{"start":{"line":231,"column":4},"end":{"line":238,"column":6}},"81":{"start":{"line":232,"column":5},"end":{"line":237,"column":6}},"82":{"start":{"line":233,"column":6},"end":{"line":233,"column":45}},"83":{"start":{"line":236,"column":6},"end":{"line":236,"column":25}},"84":{"start":{"line":242,"column":4},"end":{"line":242,"column":20}},"85":{"start":{"line":243,"column":4},"end":{"line":247,"column":7}},"86":{"start":{"line":244,"column":5},"end":{"line":244,"column":55}},"87":{"start":{"line":245,"column":5},"end":{"line":245,"column":20}},"88":{"start":{"line":246,"column":5},"end":{"line":246,"column":24}},"89":{"start":{"line":252,"column":1},"end":{"line":259,"column":3}},"90":{"start":{"line":253,"column":2},"end":{"line":256,"column":5}},"91":{"start":{"line":258,"column":2},"end":{"line":258,"column":22}},"92":{"start":{"line":261,"column":1},"end":{"line":271,"column":3}},"93":{"start":{"line":262,"column":2},"end":{"line":264,"column":3}},"94":{"start":{"line":263,"column":3},"end":{"line":263,"column":22}},"95":{"start":{"line":266,"column":2},"end":{"line":268,"column":5}},"96":{"start":{"line":270,"column":2},"end":{"line":270,"column":22}},"97":{"start":{"line":273,"column":1},"end":{"line":273,"column":22}}},"branchMap":{"1":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":24},"end":{"line":40,"column":32}},{"start":{"line":40,"column":35},"end":{"line":40,"column":42}}]},"2":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":26},"end":{"line":41,"column":32}},{"start":{"line":41,"column":35},"end":{"line":41,"column":44}}]},"3":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":25},"end":{"line":42,"column":33}},{"start":{"line":42,"column":36},"end":{"line":42,"column":43}}]},"4":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":15},"end":{"line":50,"column":21}},{"start":{"line":50,"column":25},"end":{"line":50,"column":36}},{"start":{"line":50,"column":68},"end":{"line":50,"column":82},"skip":true}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"6":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":3},"end":{"line":62,"column":3}},{"start":{"line":62,"column":3},"end":{"line":62,"column":3}}]},"7":{"line":73,"type":"cond-expr","locations":[{"start":{"line":74,"column":5},"end":{"line":74,"column":80}},{"start":{"line":75,"column":5},"end":{"line":75,"column":50}}]},"8":{"line":94,"type":"switch","locations":[{"start":{"line":95,"column":3},"end":{"line":95,"column":15}},{"start":{"line":96,"column":3},"end":{"line":97,"column":10}},{"start":{"line":98,"column":3},"end":{"line":99,"column":28}}]},"9":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"10":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"11":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":22}},{"start":{"line":119,"column":26},"end":{"line":119,"column":46}}]},"12":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":5},"end":{"line":141,"column":5}},{"start":{"line":141,"column":5},"end":{"line":141,"column":5}}]},"13":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"14":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":4},"end":{"line":213,"column":4}},{"start":{"line":213,"column":4},"end":{"line":213,"column":4}}]},"15":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":9},"end":{"line":216,"column":9}},{"start":{"line":216,"column":9},"end":{"line":216,"column":9}}]},"16":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]}},"code":["/**"," * A wrapper around a Benchmark.js Benchmark that maps its API to that used by Test."," */","define([","\t'./Test',","\t'benchmark',","\t'dojo/Promise',","\t'dojo/lang',","\t'dojo/string'","], function (","\tTest,","\tBenchmark,","\tPromise,","\tlang,","\tstring",") {","\tvar createLifecycle = (function () {","\t\tvar template = [","\t\t\t'(function (benchmark) {',","\t\t\t\t'\\tvar queue = benchmark.intern${queueName}EachLoopQueue;',","\t\t\t\t'\\tvar suite;',","\t\t\t\t'\\tif (!queue) {',","\t\t\t\t\t'\\t\\tsuite = benchmark.internTest;',","\t\t\t\t\t'\\t\\tbenchmark.intern${queueName}EachLoopQueue = queue = [];',","\t\t\t\t\t'\\t\\twhile ((suite = suite.parent)) {',","\t\t\t\t\t\t'\\t\\t\\tif (suite.${methodName}EachLoop) {',","\t\t\t\t\t\t\t'\\t\\t\\tqueue.${queueMethod}(suite);',","\t\t\t\t\t\t'\\t\\t\\t}',","\t\t\t\t\t'\\t\\t}',","\t\t\t\t'\\t}',","\t\t\t\t'\\tvar i = queue.length;',","\t\t\t\t'\\twhile((suite = queue[--i])) {',","\t\t\t\t\t'\\t\\tsuite.${methodName}EachLoop();',","\t\t\t\t'\\t}',","\t\t\t'})(this.benchmark || this);\\n'","\t\t].join('\\n');","","\t\tfunction createLifecycle(before) {","\t\t\treturn string.substitute(template, {","\t\t\t\tqueueName: before ? 'Before' : 'After',","\t\t\t\tqueueMethod: before ? 'push' : 'unshift',","\t\t\t\tmethodName: before ? 'before' : 'after'","\t\t\t});","\t\t}","\t\treturn createLifecycle;","\t})();","","\tfunction BenchmarkTest(kwArgs) {","\t\t// `options`, if present, will be a property on the test function","\t\tthis.test = (kwArgs && kwArgs.test) || /* istanbul ignore next */ function () {};","\t\tvar self = this;","\t\tvar options = lang.mixin({}, this.test.options, {","\t\t\tasync: true,","\t\t\tsetup: createLifecycle(true),","\t\t\tteardown: createLifecycle(false)","\t\t});","","\t\tif ('skip' in options) {","\t\t\tthis.skipped = options.skip;","\t\t}","\t\telse {","\t\t\tif (options.defer) {","\t\t\t\tthis.test = (function (testFunction) {","\t\t\t\t\treturn function (deferred) {","\t\t\t\t\t\tvar dfd = createDeferred(this.benchmark, deferred, options.numCallsUntilResolution);","\t\t\t\t\t\ttestFunction.call(this, dfd);","\t\t\t\t\t};","\t\t\t\t})(this.test);","\t\t\t}","","\t\t\tthis.benchmark = new Benchmark(","\t\t\t\tkwArgs.name,","\t\t\t\toptions.defer ?","\t\t\t\t\t'this.benchmark.internTest.test.call(this.benchmark.internTest, deferred);' :","\t\t\t\t\t'this.internTest.test.call(this.internTest);',","\t\t\t\toptions","\t\t\t); ","","\t\t\tObject.defineProperty(this.benchmark, 'name', {","\t\t\t\tget: function () {","\t\t\t\t\treturn self.name;","\t\t\t\t},","\t\t\t\tset: function (name) {","\t\t\t\t\tself.name = name;","\t\t\t\t}","\t\t\t});","","\t\t\tthis.benchmark.internTest = this;","\t\t}","","\t\t// Call the superclass constructor with the set of kwArgs not specific to BenchmarkTest","\t\tvar args = {};","\t\tfor (var key in kwArgs) {","\t\t\tswitch (key) {","\t\t\tcase 'test':","\t\t\tcase 'options':","\t\t\t\tbreak;","\t\t\tdefault:","\t\t\t\targs[key] = kwArgs[key];","\t\t\t}","\t\t}","\t\tTest.call(this, args);","\t}","","\tBenchmarkTest.prototype = Object.create(Test.prototype, {","\t\tconstructor: { value: BenchmarkTest },","","\t\terror: {","\t\t\tget: function () {","\t\t\t\tif (this.benchmark) {","\t\t\t\t\treturn this.benchmark.error;","\t\t\t\t}","\t\t\t\treturn null;","\t\t\t}","\t\t},","","\t\ttimeElapsed: {","\t\t\tget: function () {","\t\t\t\tif (this.benchmark && this.benchmark.times) {","\t\t\t\t\treturn this.benchmark.times.elapsed;","\t\t\t\t}","\t\t\t\treturn 0;","\t\t\t}","\t\t},","","\t\tasync: {","\t\t\tvalue: function () {","\t\t\t\tthrow new Error('Benchmark tests must be marked as asynchronous and use the deferred passed to them rather than call `this.async()`.');","\t\t\t}","\t\t},","","\t\tskip: {","\t\t\tvalue: function () {","\t\t\t\tthrow new Error('Benchmark tests must be marked as skipped rather than call `this.skip()`.');","\t\t\t}","\t\t},","","\t\trun: {","\t\t\tvalue: function () {","\t\t\t\tfunction report(eventName) {","\t\t\t\t\tif (reporterManager) {","\t\t\t\t\t\tvar args = [ eventName, self ].concat(Array.prototype.slice.call(arguments, 1));","\t\t\t\t\t\treturn reporterManager.emit.apply(reporterManager, args).catch(function () {});","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\treturn Promise.resolve();","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\tvar reporterManager = this.reporterManager;","","\t\t\t\tthis.hasPassed = false;","","\t\t\t\tvar self = this;","\t\t\t\tvar benchmark = this.benchmark;","","\t\t\t\treturn new Promise(function (resolve, reject, progress, setCanceler) {","\t\t\t\t\tsetCanceler(function (reason) {","\t\t\t\t\t\tbenchmark.error = reason;","\t\t\t\t\t\tbenchmark.abort();","","\t\t\t\t\t\tthrow reason;","\t\t\t\t\t});","","\t\t\t\t\tbenchmark.on('abort', function () {","\t\t\t\t\t\treject(benchmark.error);","\t\t\t\t\t});","","\t\t\t\t\tbenchmark.on('error', function () {","\t\t\t\t\t\treject(benchmark.error);","\t\t\t\t\t});","","\t\t\t\t\tbenchmark.on('complete', function () {","\t\t\t\t\t\tresolve();","\t\t\t\t\t});","","\t\t\t\t\treport('testStart').then(function () {","\t\t\t\t\t\tbenchmark.run();","\t\t\t\t\t});","\t\t\t\t}).finally(function () {","\t\t\t\t\t// Stop listening for benchmark events once the test is finished","\t\t\t\t\tbenchmark.off();","\t\t\t\t}).then(function () {","\t\t\t\t\tself.hasPassed = true;","","\t\t\t\t\treturn report('testPass', {","\t\t\t\t\t\ttimes: self.benchmark.times,","\t\t\t\t\t\thz: self.benchmark.hz,","\t\t\t\t\t\tstats: self.benchmark.stats","\t\t\t\t\t});","\t\t\t\t}, function (error) {","\t\t\t\t\treturn report('testFail', error).then(function () {","\t\t\t\t\t\tthrow error;","\t\t\t\t\t});","\t\t\t\t}).finally(function () {","\t\t\t\t\treturn report('testEnd');","\t\t\t\t});","\t\t\t}","\t\t}","\t});","","\t/* istanbul ignore next */","\tfunction noop() {}","","\tfunction createDeferred(benchmark, deferred, numCallsUntilResolution) {","\t\tif (!numCallsUntilResolution) {","\t\t\tnumCallsUntilResolution = 1;","\t\t}","","\t\treturn {","\t\t\tresolve: function () {","\t\t\t\t--numCallsUntilResolution;","\t\t\t\tif (numCallsUntilResolution === 0) {","\t\t\t\t\tdeferred.resolve();","\t\t\t\t}","\t\t\t\telse if (numCallsUntilResolution < 0) {","\t\t\t\t\tthrow new Error('resolve called too many times');","\t\t\t\t}","\t\t\t},","","\t\t\treject: function (error) {","\t\t\t\tbenchmark.error = error;","\t\t\t\tbenchmark.abort();","\t\t\t\tdeferred.resolve();","\t\t\t},","","\t\t\tprogress: noop,","","\t\t\trejectOnError: function (callback) {","\t\t\t\tvar self = this;","\t\t\t\treturn function () {","\t\t\t\t\ttry {","\t\t\t\t\t\treturn callback.apply(this, arguments);","\t\t\t\t\t}","\t\t\t\t\tcatch (error) {","\t\t\t\t\t\tself.reject(error);","\t\t\t\t\t}","\t\t\t\t};","\t\t\t},","","\t\t\tcallback: function (callback) {","\t\t\t\tvar self = this;","\t\t\t\treturn self.rejectOnError(function () {","\t\t\t\t\tvar returnValue = callback.apply(this, arguments);","\t\t\t\t\tself.resolve();","\t\t\t\t\treturn returnValue;","\t\t\t\t});","\t\t\t}","\t\t};","\t}","","\tBenchmarkTest.async = function (testFunction, numCallsUntilResolution) {","\t\ttestFunction.options = lang.mixin({}, testFunction.options, {","\t\t\tdefer: true,","\t\t\tnumCallsUntilResolution: numCallsUntilResolution","\t\t});","","\t\treturn testFunction;","\t};","","\tBenchmarkTest.skip = function (testFunction, reason) {","\t\tif (reason == null) {","\t\t\treason = 'skipped';","\t\t}","","\t\ttestFunction.options = lang.mixin({}, testFunction.options, {","\t\t\tskip: reason","\t\t});","","\t\treturn testFunction;","\t};","","\treturn BenchmarkTest;","});",""],"l":{"4":1,"17":0,"18":0,"38":1,"39":0,"45":0,"48":1,"50":0,"51":0,"52":0,"58":0,"59":0,"62":0,"63":0,"64":0,"65":0,"66":0,"71":0,"79":0,"81":0,"84":0,"88":0,"92":0,"93":0,"94":0,"97":0,"99":0,"102":0,"105":0,"110":0,"111":0,"113":0,"119":0,"120":0,"122":0,"128":0,"134":0,"140":1,"141":0,"142":0,"143":0,"146":0,"150":0,"152":0,"154":0,"155":0,"157":0,"158":0,"159":0,"160":0,"162":0,"165":0,"166":0,"169":0,"170":0,"173":0,"174":0,"177":0,"178":0,"182":0,"184":0,"186":0,"192":0,"193":0,"196":0,"203":1,"205":1,"206":0,"207":0,"210":0,"212":0,"213":0,"214":0,"216":0,"217":0,"222":0,"223":0,"224":0,"230":0,"231":0,"232":0,"233":0,"236":0,"242":0,"243":0,"244":0,"245":0,"246":0,"252":0,"253":0,"258":0,"261":0,"262":0,"263":0,"266":0,"270":0,"273":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/ClientSuite.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/ClientSuite.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0},"b":{"1":[0,0,0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":3},"end":{"line":10,"column":71}}},"2":{"name":"ClientSuite","line":11,"loc":{"start":{"line":11,"column":1},"end":{"line":11,"column":24}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":7},"end":{"line":28,"column":19}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":34},"end":{"line":36,"column":52}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":47},"end":{"line":38,"column":59}}},"6":{"name":"receiveEvent","line":43,"loc":{"start":{"line":43,"column":3},"end":{"line":43,"column":31}}},"7":{"name":"forward","line":45,"loc":{"start":{"line":45,"column":4},"end":{"line":45,"column":23}}},"8":{"name":"(anonymous_8)","line":56,"loc":{"start":{"line":56,"column":27},"end":{"line":56,"column":43}}},"9":{"name":"(anonymous_9)","line":70,"loc":{"start":{"line":70,"column":27},"end":{"line":70,"column":50}}},"10":{"name":"(anonymous_10)","line":99,"loc":{"start":{"line":99,"column":19},"end":{"line":99,"column":31}}},"11":{"name":"(anonymous_11)","line":101,"loc":{"start":{"line":101,"column":14},"end":{"line":101,"column":26}}},"12":{"name":"handleError","line":117,"loc":{"start":{"line":117,"column":3},"end":{"line":117,"column":31}}},"13":{"name":"(anonymous_13)","line":119,"loc":{"start":{"line":119,"column":69},"end":{"line":119,"column":81}}},"14":{"name":"(anonymous_14)","line":157,"loc":{"start":{"line":157,"column":11},"end":{"line":157,"column":28}}},"15":{"name":"(anonymous_15)","line":159,"loc":{"start":{"line":159,"column":41},"end":{"line":159,"column":53}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":169,"column":3}},"2":{"start":{"line":11,"column":1},"end":{"line":15,"column":2}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":19}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":31}},"5":{"start":{"line":17,"column":1},"end":{"line":17,"column":30}},"6":{"start":{"line":18,"column":1},"end":{"line":166,"column":4}},"7":{"start":{"line":29,"column":3},"end":{"line":29,"column":19}},"8":{"start":{"line":30,"column":3},"end":{"line":30,"column":46}},"9":{"start":{"line":31,"column":3},"end":{"line":31,"column":28}},"10":{"start":{"line":32,"column":3},"end":{"line":32,"column":28}},"11":{"start":{"line":33,"column":3},"end":{"line":33,"column":44}},"12":{"start":{"line":35,"column":3},"end":{"line":35,"column":71}},"13":{"start":{"line":36,"column":3},"end":{"line":41,"column":6}},"14":{"start":{"line":37,"column":4},"end":{"line":37,"column":20}},"15":{"start":{"line":38,"column":4},"end":{"line":40,"column":7}},"16":{"start":{"line":39,"column":5},"end":{"line":39,"column":18}},"17":{"start":{"line":43,"column":3},"end":{"line":115,"column":4}},"18":{"start":{"line":44,"column":4},"end":{"line":44,"column":25}},"19":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"20":{"start":{"line":46,"column":5},"end":{"line":46,"column":62}},"21":{"start":{"line":49,"column":4},"end":{"line":49,"column":14}},"22":{"start":{"line":50,"column":4},"end":{"line":114,"column":5}},"23":{"start":{"line":52,"column":6},"end":{"line":52,"column":27}},"24":{"start":{"line":55,"column":6},"end":{"line":60,"column":7}},"25":{"start":{"line":56,"column":7},"end":{"line":58,"column":10}},"26":{"start":{"line":57,"column":8},"end":{"line":57,"column":30}},"27":{"start":{"line":59,"column":7},"end":{"line":59,"column":55}},"28":{"start":{"line":61,"column":6},"end":{"line":61,"column":23}},"29":{"start":{"line":64,"column":6},"end":{"line":64,"column":27}},"30":{"start":{"line":65,"column":6},"end":{"line":65,"column":35}},"31":{"start":{"line":69,"column":6},"end":{"line":76,"column":7}},"32":{"start":{"line":70,"column":7},"end":{"line":72,"column":10}},"33":{"start":{"line":71,"column":8},"end":{"line":71,"column":33}},"34":{"start":{"line":75,"column":7},"end":{"line":75,"column":24}},"35":{"start":{"line":77,"column":6},"end":{"line":77,"column":12}},"36":{"start":{"line":80,"column":6},"end":{"line":80,"column":27}},"37":{"start":{"line":81,"column":6},"end":{"line":84,"column":7}},"38":{"start":{"line":82,"column":7},"end":{"line":82,"column":23}},"39":{"start":{"line":83,"column":7},"end":{"line":83,"column":40}},"40":{"start":{"line":85,"column":6},"end":{"line":85,"column":23}},"41":{"start":{"line":88,"column":6},"end":{"line":88,"column":12}},"42":{"start":{"line":91,"column":6},"end":{"line":91,"column":22}},"43":{"start":{"line":92,"column":6},"end":{"line":92,"column":51}},"44":{"start":{"line":93,"column":6},"end":{"line":98,"column":7}},"45":{"start":{"line":97,"column":7},"end":{"line":97,"column":44}},"46":{"start":{"line":99,"column":6},"end":{"line":103,"column":22}},"47":{"start":{"line":100,"column":7},"end":{"line":100,"column":53}},"48":{"start":{"line":102,"column":7},"end":{"line":102,"column":21}},"49":{"start":{"line":104,"column":6},"end":{"line":104,"column":12}},"50":{"start":{"line":108,"column":6},"end":{"line":108,"column":22}},"51":{"start":{"line":109,"column":6},"end":{"line":109,"column":31}},"52":{"start":{"line":110,"column":6},"end":{"line":110,"column":32}},"53":{"start":{"line":113,"column":6},"end":{"line":113,"column":23}},"54":{"start":{"line":117,"column":3},"end":{"line":122,"column":4}},"55":{"start":{"line":118,"column":4},"end":{"line":118,"column":23}},"56":{"start":{"line":119,"column":4},"end":{"line":121,"column":7}},"57":{"start":{"line":120,"column":5},"end":{"line":120,"column":23}},"58":{"start":{"line":124,"column":3},"end":{"line":124,"column":63}},"59":{"start":{"line":126,"column":3},"end":{"line":126,"column":57}},"60":{"start":{"line":127,"column":3},"end":{"line":134,"column":4}},"61":{"start":{"line":130,"column":4},"end":{"line":130,"column":68}},"62":{"start":{"line":133,"column":4},"end":{"line":133,"column":33}},"63":{"start":{"line":136,"column":3},"end":{"line":144,"column":6}},"64":{"start":{"line":150,"column":3},"end":{"line":150,"column":53}},"65":{"start":{"line":151,"column":3},"end":{"line":153,"column":4}},"66":{"start":{"line":152,"column":4},"end":{"line":152,"column":54}},"67":{"start":{"line":155,"column":3},"end":{"line":162,"column":7}},"68":{"start":{"line":158,"column":5},"end":{"line":158,"column":21}},"69":{"start":{"line":159,"column":5},"end":{"line":161,"column":8}},"70":{"start":{"line":160,"column":6},"end":{"line":160,"column":25}},"71":{"start":{"line":164,"column":3},"end":{"line":164,"column":22}},"72":{"start":{"line":168,"column":1},"end":{"line":168,"column":20}}},"branchMap":{"1":{"line":50,"type":"switch","locations":[{"start":{"line":51,"column":5},"end":{"line":61,"column":23}},{"start":{"line":63,"column":5},"end":{"line":77,"column":12}},{"start":{"line":79,"column":5},"end":{"line":85,"column":23}},{"start":{"line":87,"column":5},"end":{"line":88,"column":12}},{"start":{"line":90,"column":5},"end":{"line":104,"column":12}},{"start":{"line":106,"column":5},"end":{"line":110,"column":32}},{"start":{"line":112,"column":5},"end":{"line":113,"column":23}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"4":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":6}},{"start":{"line":81,"column":6},"end":{"line":81,"column":6}}]},"5":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":6}},{"start":{"line":93,"column":6},"end":{"line":93,"column":6}}]},"6":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":3},"end":{"line":127,"column":3}},{"start":{"line":127,"column":3},"end":{"line":127,"column":3}}]},"7":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":3},"end":{"line":151,"column":3}},{"start":{"line":151,"column":3},"end":{"line":151,"column":3}}]},"8":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":7},"end":{"line":151,"column":19}},{"start":{"line":151,"column":23},"end":{"line":151,"column":41}}]}},"code":["/* jshint node:true */","define([","\t'dojo/lang',","\t'dojo/Promise',","\t'dojo/node!url',","\t'dojo/node!path',","\t'dojo/aspect',","\t'dojo/io-query',","\t'./Suite'","], function (lang, Promise, urlUtil, pathUtil, aspect, ioQuery, Suite) {","\tfunction ClientSuite() {","\t\tthis.config = {};","","\t\tSuite.apply(this, arguments);","\t}","","\tvar _super = Suite.prototype;","\tClientSuite.prototype = lang.mixin(Object.create(_super), /** @lends module:intern/lib/ClientSuite# */ {","\t\tconstructor: ClientSuite,","\t\tname: 'unit tests',","\t\ttimeout: Infinity,","\t\targs: null,","\t\tconfig: null,","\t\tproxy: null,","","\t\t// TODO: Change this from using Selenium-provided sessionId to self-generated constant identifier so that","\t\t// sessions can be safely reset in the middle of a test run","\t\trun: function () {","\t\t\tvar self = this;","\t\t\tvar reporterManager = this.reporterManager;","\t\t\tvar config = this.config;","\t\t\tvar remote = this.remote;","\t\t\tvar sessionId = remote.session.sessionId;","","\t\t\tvar handle = this.proxy.subscribeToSession(sessionId, receiveEvent);","\t\t\tvar dfd = new Promise.Deferred(function (reason) {","\t\t\t\thandle.remove();","\t\t\t\treturn remote.setHeartbeatInterval(0).then(function () {","\t\t\t\t\tthrow reason;","\t\t\t\t});","\t\t\t});","","\t\t\tfunction receiveEvent(name) {","\t\t\t\tvar args = arguments;","\t\t\t\tfunction forward() {","\t\t\t\t\treturn reporterManager.emit.apply(reporterManager, args);","\t\t\t\t}","","\t\t\t\tvar suite;","\t\t\t\tswitch (name) {","\t\t\t\t\tcase 'suiteStart':","\t\t\t\t\t\tsuite = arguments[1];","\t\t\t\t\t\t// The suite sent by the server is the root suite for the client-side unit tests; add its tests","\t\t\t\t\t\t// to the runner-side client suite","\t\t\t\t\t\tif (!suite.hasParent) {","\t\t\t\t\t\t\tsuite.tests.forEach(function (test) {","\t\t\t\t\t\t\t\tself.tests.push(test);","\t\t\t\t\t\t\t});","\t\t\t\t\t\t\treturn reporterManager.emit('suiteStart', self);","\t\t\t\t\t\t}","\t\t\t\t\t\treturn forward();","","\t\t\t\t\tcase 'suiteEnd':","\t\t\t\t\t\tsuite = arguments[1];","\t\t\t\t\t\tself.skipped = suite.skipped;","","\t\t\t\t\t\t// The suite sent by the server is the root suite for the client-side unit tests; update the","\t\t\t\t\t\t// existing test objects with the new ones from the server that reflect all the test results","\t\t\t\t\t\tif (!suite.hasParent) {","\t\t\t\t\t\t\tsuite.tests.forEach(function (test, index) {","\t\t\t\t\t\t\t\tself.tests[index] = test;","\t\t\t\t\t\t\t});","\t\t\t\t\t\t}","\t\t\t\t\t\telse {","\t\t\t\t\t\t\treturn forward();","\t\t\t\t\t\t}","\t\t\t\t\t\tbreak;","","\t\t\t\t\tcase 'suiteError':","\t\t\t\t\t\tsuite = arguments[1];","\t\t\t\t\t\tif (!suite.hasParent) {","\t\t\t\t\t\t\thandle.remove();","\t\t\t\t\t\t\treturn handleError(arguments[2]);","\t\t\t\t\t\t}","\t\t\t\t\t\treturn forward();","","\t\t\t\t\tcase 'runStart':","\t\t\t\t\t\tbreak;","","\t\t\t\t\tcase 'runEnd':","\t\t\t\t\t\thandle.remove();","\t\t\t\t\t\tvar promise = remote.setHeartbeatInterval(0);","\t\t\t\t\t\tif (config.excludeInstrumentation !== true) {","\t\t\t\t\t\t\t// get about:blank to always collect code coverage data from the page in case it is","\t\t\t\t\t\t\t// navigated away later by some other process; this happens during self-testing when","\t\t\t\t\t\t\t// Leadfoot takes over","\t\t\t\t\t\t\tpromise = promise.get('about:blank');","\t\t\t\t\t\t}","\t\t\t\t\t\tpromise.then(function () {","\t\t\t\t\t\t\treturn reporterManager.emit('suiteEnd', self);","\t\t\t\t\t\t}).then(function () {","\t\t\t\t\t\t\tdfd.resolve();","\t\t\t\t\t\t}, handleError);","\t\t\t\t\t\tbreak;","","\t\t\t\t\tcase 'fatalError':","\t\t\t\t\t\t// A fatalError in a suite is only fatal to the suite, so it's still basically a suiteError","\t\t\t\t\t\thandle.remove();","\t\t\t\t\t\tvar error = arguments[1];","\t\t\t\t\t\treturn handleError(error);","","\t\t\t\t\tdefault:","\t\t\t\t\t\treturn forward();","\t\t\t\t}","\t\t\t}","","\t\t\tfunction handleError(error) {","\t\t\t\tself.error = error;","\t\t\t\treturn self.reporterManager.emit('suiteError', self, error).then(function () {","\t\t\t\t\tdfd.reject(error);","\t\t\t\t});","\t\t\t}","","\t\t\tvar proxyBasePath = urlUtil.parse(config.proxyUrl).pathname;","","\t\t\tvar clientReporter = this.config.runnerClientReporter;","\t\t\tif (typeof clientReporter === 'object') {","\t\t\t\t// Need to mixin the properties of `clientReporter` to a new object before stringify because","\t\t\t\t// stringify only serialises an object’s own properties","\t\t\t\tclientReporter = JSON.stringify(lang.mixin({}, clientReporter));","\t\t\t}","\t\t\telse {","\t\t\t\tclientReporter = 'WebDriver';","\t\t\t}","","\t\t\tvar options = lang.mixin({}, this.args, {","\t\t\t\t// the proxy always serves the baseUrl from the loader configuration as the root of the proxy,","\t\t\t\t// so ensure that baseUrl is always set to that root on the client","\t\t\t\tbasePath: proxyBasePath,","\t\t\t\tinitialBaseUrl: proxyBasePath + pathUtil.relative(config.basePath, process.cwd()),","\t\t\t\treporters: clientReporter,","\t\t\t\trootSuiteName: self.id,","\t\t\t\tsessionId: sessionId","\t\t\t});","","\t\t\t// Intern runs unit tests on the remote Selenium server by navigating to the client runner HTML page. No","\t\t\t// real commands are issued after the call to remote.get() below until all unit tests are complete, so","\t\t\t// we need to make sure that we periodically send no-ops through the channel to ensure the remote server","\t\t\t// does not treat the session as having timed out","\t\t\tvar timeout = config.capabilities['idle-timeout'];","\t\t\tif (timeout >= 1 && timeout < Infinity) {","\t\t\t\tremote.setHeartbeatInterval((timeout - 1) * 1000);","\t\t\t}","","\t\t\tremote","\t\t\t\t.get(config.proxyUrl + '__intern/client.html?' + ioQuery.objectToQuery(options))","\t\t\t\t.catch(function (error) {","\t\t\t\t\thandle.remove();","\t\t\t\t\tremote.setHeartbeatInterval(0).then(function () {","\t\t\t\t\t\thandleError(error);","\t\t\t\t\t});","\t\t\t\t});","","\t\t\treturn dfd.promise;","\t\t}","\t});","","\treturn ClientSuite;","});",""],"l":{"2":1,"11":1,"12":0,"14":0,"17":0,"18":0,"29":0,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"43":1,"44":0,"45":1,"46":0,"49":0,"50":0,"52":0,"55":0,"56":0,"57":0,"59":0,"61":0,"64":0,"65":0,"69":0,"70":0,"71":0,"75":0,"77":0,"80":0,"81":0,"82":0,"83":0,"85":0,"88":0,"91":0,"92":0,"93":0,"97":0,"99":0,"100":0,"102":0,"104":0,"108":0,"109":0,"110":0,"113":0,"117":1,"118":0,"119":0,"120":0,"124":0,"126":0,"127":0,"130":0,"133":0,"136":0,"150":0,"151":0,"152":0,"155":0,"158":0,"159":0,"160":0,"164":0,"168":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/EnvironmentType.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/EnvironmentType.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":23}}},"2":{"name":"EnvironmentType","line":2,"loc":{"start":{"line":2,"column":1},"end":{"line":2,"column":34}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":3}},"2":{"start":{"line":2,"column":1},"end":{"line":6,"column":2}},"3":{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},"4":{"start":{"line":4,"column":3},"end":{"line":4,"column":23}},"5":{"start":{"line":8,"column":1},"end":{"line":24,"column":3}},"6":{"start":{"line":15,"column":3},"end":{"line":15,"column":18}},"7":{"start":{"line":17,"column":3},"end":{"line":17,"column":49}},"8":{"start":{"line":18,"column":3},"end":{"line":18,"column":44}},"9":{"start":{"line":19,"column":3},"end":{"line":19,"column":57}},"10":{"start":{"line":20,"column":3},"end":{"line":20,"column":60}},"11":{"start":{"line":22,"column":3},"end":{"line":22,"column":26}},"12":{"start":{"line":26,"column":1},"end":{"line":26,"column":24}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":14},"end":{"line":17,"column":30}},{"start":{"line":17,"column":34},"end":{"line":17,"column":47}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":3},"end":{"line":18,"column":15}},{"start":{"line":18,"column":19},"end":{"line":18,"column":43}}]},"3":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":23},"end":{"line":19,"column":36}},{"start":{"line":19,"column":40},"end":{"line":19,"column":54}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":3},"end":{"line":20,"column":23}},{"start":{"line":20,"column":27},"end":{"line":20,"column":59}}]}},"code":["define([], function () {","\tfunction EnvironmentType(kwArgs) {","\t\tfor (var k in kwArgs) {","\t\t\tthis[k] = kwArgs[k];","\t\t}","\t}","","\tEnvironmentType.prototype = {","\t\tconstructor: EnvironmentType,","\t\tbrowserName: undefined,","\t\tversion: undefined,","\t\tplatform: undefined,","\t\tplatformVersion: undefined,","\t\ttoString: function () {","\t\t\tvar parts = [];","","\t\t\tparts.push(this.browserName || 'Any browser');","\t\t\tthis.version && parts.push(this.version);","\t\t\tparts.push('on ' + (this.platform || 'any platform'));","\t\t\tthis.platformVersion && parts.push(this.platformVersion);","","\t\t\treturn parts.join(' ');","\t\t}","\t};","","\treturn EnvironmentType;","});",""],"l":{"1":1,"2":1,"3":0,"4":0,"8":0,"15":0,"17":0,"18":0,"19":0,"20":0,"22":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/exitHandler.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/exitHandler.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":23}}},"2":{"name":"(anonymous_2)","line":2,"loc":{"start":{"line":2,"column":8},"end":{"line":2,"column":42}}},"3":{"name":"(anonymous_3)","line":5,"loc":{"start":{"line":5,"column":24},"end":{"line":5,"column":36}}},"4":{"name":"(anonymous_4)","line":7,"loc":{"start":{"line":7,"column":10},"end":{"line":7,"column":22}}},"5":{"name":"(anonymous_5)","line":23,"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":38}}},"6":{"name":"(anonymous_6)","line":24,"loc":{"start":{"line":24,"column":24},"end":{"line":24,"column":36}}},"7":{"name":"(anonymous_7)","line":28,"loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":14}}},"8":{"name":"(anonymous_8)","line":29,"loc":{"start":{"line":29,"column":24},"end":{"line":29,"column":36}}},"9":{"name":"(anonymous_9)","line":33,"loc":{"start":{"line":33,"column":11},"end":{"line":33,"column":23}}},"10":{"name":"(anonymous_10)","line":34,"loc":{"start":{"line":34,"column":24},"end":{"line":34,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":42,"column":3}},"2":{"start":{"line":2,"column":1},"end":{"line":41,"column":3}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":24}},"4":{"start":{"line":5,"column":2},"end":{"line":21,"column":8}},"5":{"start":{"line":6,"column":3},"end":{"line":6,"column":21}},"6":{"start":{"line":7,"column":3},"end":{"line":20,"column":5}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":21}},"8":{"start":{"line":10,"column":4},"end":{"line":13,"column":5}},"9":{"start":{"line":11,"column":5},"end":{"line":11,"column":62}},"10":{"start":{"line":12,"column":5},"end":{"line":12,"column":21}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":17}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":46}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":32}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":100}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":24}},"16":{"start":{"line":23,"column":2},"end":{"line":40,"column":5}},"17":{"start":{"line":24,"column":3},"end":{"line":26,"column":6}},"18":{"start":{"line":25,"column":4},"end":{"line":25,"column":54}},"19":{"start":{"line":29,"column":3},"end":{"line":31,"column":6}},"20":{"start":{"line":30,"column":4},"end":{"line":30,"column":20}},"21":{"start":{"line":34,"column":3},"end":{"line":38,"column":15}},"22":{"start":{"line":35,"column":4},"end":{"line":36,"column":43}},"23":{"start":{"line":37,"column":4},"end":{"line":37,"column":19}},"24":{"start":{"line":39,"column":3},"end":{"line":39,"column":15}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"2":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":47},"end":{"line":25,"column":48}},{"start":{"line":25,"column":51},"end":{"line":25,"column":52}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":17},"end":{"line":25,"column":26}},{"start":{"line":25,"column":30},"end":{"line":25,"column":44}}]}},"code":["define([], function () {","\treturn function (process, task, timeout) {","\t\tvar cancelled = false;","","\t\tprocess.on('SIGINT', (function () {","\t\t\tvar hurry = false;","\t\t\treturn function () {","\t\t\t\tcancelled = true;","","\t\t\t\tif (hurry) {","\t\t\t\t\tconsole.warn('\\nShutting down immediately. You monster');","\t\t\t\t\tprocess.exit(1);","\t\t\t\t}","","\t\t\t\thurry = true;","\t\t\t\tvar reason = new Error('SIGINT received');","\t\t\t\treason.name = 'CancelError';","\t\t\t\tconsole.warn('\\nShutting down gracefully; please wait or hit CTRL+C again to quit immediately');","\t\t\t\ttask.cancel(reason);","\t\t\t};","\t\t})());","","\t\ttask.then(function (numFailedTests) {","\t\t\tprocess.once('exit', function () {","\t\t\t\tprocess.exit(cancelled || numFailedTests ? 1 : 0);","\t\t\t});","\t\t},","\t\tfunction () {","\t\t\tprocess.once('exit', function () {","\t\t\t\tprocess.exit(2);","\t\t\t});","\t\t})","\t\t.finally(function () {","\t\t\tvar ref = setTimeout(function () {","\t\t\t\tconsole.warn('Node.js hang detected; make sure to close all sockets, timers, and ' +","\t\t\t\t\t'servers you opened during testing!');","\t\t\t\tprocess.exit();","\t\t\t}, timeout);","\t\t\tref.unref();","\t\t});","\t};","});",""],"l":{"1":1,"2":0,"3":0,"5":0,"6":0,"7":0,"8":0,"10":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"23":0,"24":0,"25":0,"29":0,"30":0,"34":0,"35":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/parseArgs.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/parseArgs.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":23}}},"2":{"name":"parseArguments","line":2,"loc":{"start":{"line":2,"column":1},"end":{"line":2,"column":42}}},"3":{"name":"(anonymous_3)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":33}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":19},"end":{"line":43,"column":38}}},"5":{"name":"(anonymous_5)","line":45,"loc":{"start":{"line":45,"column":59},"end":{"line":45,"column":77}}},"6":{"name":"(anonymous_6)","line":49,"loc":{"start":{"line":49,"column":19},"end":{"line":49,"column":36}}},"7":{"name":"(anonymous_7)","line":50,"loc":{"start":{"line":50,"column":62},"end":{"line":50,"column":80}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":61,"column":3}},"2":{"start":{"line":2,"column":1},"end":{"line":40,"column":2}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":16}},"4":{"start":{"line":4,"column":2},"end":{"line":37,"column":5}},"5":{"start":{"line":5,"column":3},"end":{"line":5,"column":24}},"6":{"start":{"line":7,"column":3},"end":{"line":7,"column":40}},"7":{"start":{"line":8,"column":3},"end":{"line":8,"column":13}},"8":{"start":{"line":11,"column":3},"end":{"line":24,"column":4}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":17}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":27}},"11":{"start":{"line":18,"column":4},"end":{"line":23,"column":5}},"12":{"start":{"line":19,"column":5},"end":{"line":19,"column":31}},"13":{"start":{"line":21,"column":9},"end":{"line":23,"column":5}},"14":{"start":{"line":22,"column":5},"end":{"line":22,"column":28}},"15":{"start":{"line":27,"column":3},"end":{"line":36,"column":4}},"16":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"17":{"start":{"line":29,"column":5},"end":{"line":29,"column":31}},"18":{"start":{"line":32,"column":4},"end":{"line":32,"column":26}},"19":{"start":{"line":35,"column":4},"end":{"line":35,"column":22}},"20":{"start":{"line":39,"column":2},"end":{"line":39,"column":14}},"21":{"start":{"line":42,"column":1},"end":{"line":60,"column":3}},"22":{"start":{"line":45,"column":3},"end":{"line":47,"column":6}},"23":{"start":{"line":46,"column":4},"end":{"line":46,"column":18}},"24":{"start":{"line":50,"column":3},"end":{"line":58,"column":6}},"25":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"26":{"start":{"line":54,"column":5},"end":{"line":54,"column":19}},"27":{"start":{"line":57,"column":4},"end":{"line":57,"column":38}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":3},"end":{"line":11,"column":3}},{"start":{"line":11,"column":3},"end":{"line":11,"column":3}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":9},"end":{"line":21,"column":9}},{"start":{"line":21,"column":9},"end":{"line":21,"column":9}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":3},"end":{"line":27,"column":3}},{"start":{"line":27,"column":3},"end":{"line":27,"column":3}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"6":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":25},"end":{"line":45,"column":32}},{"start":{"line":45,"column":36},"end":{"line":45,"column":57}}]},"7":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]}},"code":["define([], function () {","\tfunction parseArguments(rawArgs, decode) {","\t\tvar args = {};","\t\trawArgs.forEach(function (arg) {","\t\t\targ = arg.split('=');","","\t\t\tvar key = arg[0].replace(/^--?/, '');","\t\t\tvar value;","","\t\t\t// Support boolean flags","\t\t\tif (arg.length < 2) {","\t\t\t\tvalue = true;","\t\t\t}","\t\t\telse {","\t\t\t\tvalue = decode(arg[1]);","","\t\t\t\t// Support JSON-encoded properties for reporter configuration","\t\t\t\tif (value.charAt(0) === '{') {","\t\t\t\t\tvalue = JSON.parse(value);","\t\t\t\t}","\t\t\t\telse if (value.slice(0, 2) === '\\\\{') {","\t\t\t\t\tvalue = value.slice(1);","\t\t\t\t}","\t\t\t}","","\t\t\t// Support multiple arguments with the same name","\t\t\tif (key in args) {","\t\t\t\tif (!Array.isArray(args[key])) {","\t\t\t\t\targs[key] = [ args[key] ];","\t\t\t\t}","","\t\t\t\targs[key].push(value);","\t\t\t}","\t\t\telse {","\t\t\t\targs[key] = value;","\t\t\t}","\t\t});","","\t\treturn args;","\t}","","\treturn {","\t\tfromCommandLine: function (rawArgs) {","\t\t\t/* globals process */","\t\t\treturn parseArguments(rawArgs || process.argv.slice(2), function (string) {","\t\t\t\treturn string;","\t\t\t});","\t\t},","\t\tfromQueryString: function (query) {","\t\t\treturn parseArguments(query.replace(/^\\?/, '').split('&'), function (string) {","\t\t\t\t// Boolean properties should not be coerced into strings, but will be if they are passed to","\t\t\t\t// decodeURIComponent","\t\t\t\tif (typeof string === 'boolean') {","\t\t\t\t\treturn string;","\t\t\t\t}","","\t\t\t\treturn decodeURIComponent(string);","\t\t\t});","\t\t}","\t};","});",""],"l":{"1":1,"2":1,"3":0,"4":0,"5":0,"7":0,"8":0,"11":0,"12":0,"15":0,"18":0,"19":0,"21":0,"22":0,"27":0,"28":0,"29":0,"32":0,"35":0,"39":0,"42":0,"45":0,"46":0,"50":0,"53":0,"54":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/ProxiedSession.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/ProxiedSession.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":3},"end":{"line":5,"column":37}}},"2":{"name":"getCoverageData","line":7,"loc":{"start":{"line":7,"column":1},"end":{"line":7,"column":44}},"skip":true},"3":{"name":"(anonymous_3)","line":8,"loc":{"start":{"line":8,"column":22},"end":{"line":8,"column":34}},"skip":true},"4":{"name":"ProxiedSession","line":23,"loc":{"start":{"line":23,"column":1},"end":{"line":23,"column":27}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":7},"end":{"line":71,"column":19}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":41},"end":{"line":85,"column":56}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":24},"end":{"line":93,"column":53}}},"8":{"name":"(anonymous_8)","line":96,"loc":{"start":{"line":96,"column":13},"end":{"line":96,"column":37}}},"9":{"name":"(anonymous_9)","line":101,"loc":{"start":{"line":101,"column":15},"end":{"line":101,"column":27}}},"10":{"name":"(anonymous_10)","line":115,"loc":{"start":{"line":115,"column":8},"end":{"line":115,"column":20}}},"11":{"name":"(anonymous_11)","line":119,"loc":{"start":{"line":119,"column":10},"end":{"line":119,"column":22}}},"12":{"name":"(anonymous_12)","line":121,"loc":{"start":{"line":121,"column":75},"end":{"line":121,"column":99}}},"13":{"name":"(anonymous_13)","line":127,"loc":{"start":{"line":127,"column":13},"end":{"line":127,"column":25}}},"14":{"name":"(anonymous_14)","line":141,"loc":{"start":{"line":141,"column":24},"end":{"line":141,"column":41}}},"15":{"name":"sendHeartbeat","line":149,"loc":{"start":{"line":149,"column":5},"end":{"line":149,"column":30}}},"16":{"name":"(anonymous_16)","line":155,"loc":{"start":{"line":155,"column":14},"end":{"line":155,"column":26}}},"17":{"name":"(anonymous_17)","line":161,"loc":{"start":{"line":161,"column":31},"end":{"line":161,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":174,"column":3}},"2":{"start":{"line":7,"column":1},"end":{"line":10,"column":2},"skip":true},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":72},"skip":true},"4":{"start":{"line":8,"column":36},"end":{"line":8,"column":48},"skip":true},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":54},"skip":true},"6":{"start":{"line":23,"column":1},"end":{"line":25,"column":2}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":33}},"8":{"start":{"line":27,"column":1},"end":{"line":27,"column":32}},"9":{"start":{"line":28,"column":1},"end":{"line":171,"column":4}},"10":{"start":{"line":72,"column":3},"end":{"line":72,"column":19}},"11":{"start":{"line":73,"column":3},"end":{"line":73,"column":55}},"12":{"start":{"line":76,"column":3},"end":{"line":78,"column":4}},"13":{"start":{"line":77,"column":4},"end":{"line":77,"column":70}},"14":{"start":{"line":80,"column":3},"end":{"line":104,"column":4}},"15":{"start":{"line":81,"column":4},"end":{"line":81,"column":16}},"16":{"start":{"line":84,"column":4},"end":{"line":91,"column":5}},"17":{"start":{"line":85,"column":5},"end":{"line":87,"column":8}},"18":{"start":{"line":86,"column":6},"end":{"line":86,"column":37}},"19":{"start":{"line":90,"column":5},"end":{"line":90,"column":37}},"20":{"start":{"line":93,"column":4},"end":{"line":103,"column":7}},"21":{"start":{"line":94,"column":5},"end":{"line":100,"column":6}},"22":{"start":{"line":95,"column":6},"end":{"line":99,"column":10}},"23":{"start":{"line":97,"column":8},"end":{"line":98,"column":88}},"24":{"start":{"line":102,"column":5},"end":{"line":102,"column":41}},"25":{"start":{"line":106,"column":3},"end":{"line":106,"column":39}},"26":{"start":{"line":116,"column":3},"end":{"line":116,"column":19}},"27":{"start":{"line":117,"column":3},"end":{"line":129,"column":7}},"28":{"start":{"line":120,"column":5},"end":{"line":125,"column":6}},"29":{"start":{"line":121,"column":6},"end":{"line":124,"column":9}},"30":{"start":{"line":122,"column":7},"end":{"line":123,"column":88}},"31":{"start":{"line":128,"column":5},"end":{"line":128,"column":35}},"32":{"start":{"line":142,"column":3},"end":{"line":142,"column":75}},"33":{"start":{"line":144,"column":3},"end":{"line":167,"column":4}},"34":{"start":{"line":148,"column":4},"end":{"line":148,"column":20}},"35":{"start":{"line":149,"column":4},"end":{"line":166,"column":9}},"36":{"start":{"line":150,"column":5},"end":{"line":150,"column":19}},"37":{"start":{"line":151,"column":5},"end":{"line":151,"column":27}},"38":{"start":{"line":152,"column":5},"end":{"line":152,"column":32}},"39":{"start":{"line":154,"column":5},"end":{"line":159,"column":7}},"40":{"start":{"line":156,"column":7},"end":{"line":156,"column":24}},"41":{"start":{"line":157,"column":7},"end":{"line":157,"column":31}},"42":{"start":{"line":161,"column":5},"end":{"line":165,"column":8}},"43":{"start":{"line":162,"column":6},"end":{"line":164,"column":7}},"44":{"start":{"line":163,"column":7},"end":{"line":163,"column":79}},"45":{"start":{"line":169,"column":3},"end":{"line":169,"column":28}},"46":{"start":{"line":173,"column":1},"end":{"line":173,"column":23}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":9},"end":{"line":9,"column":21},"skip":true},{"start":{"line":9,"column":25},"end":{"line":9,"column":53},"skip":true}]},"2":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":3},"end":{"line":76,"column":3}},{"start":{"line":76,"column":3},"end":{"line":76,"column":3}}]},"3":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":3},"end":{"line":80,"column":3}},{"start":{"line":80,"column":3},"end":{"line":80,"column":3}}]},"4":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"5":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":5},"end":{"line":94,"column":5}},{"start":{"line":94,"column":5},"end":{"line":94,"column":5}}]},"6":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":15},"end":{"line":97,"column":27}},{"start":{"line":98,"column":8},"end":{"line":98,"column":87}}]},"7":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":5},"end":{"line":120,"column":5}},{"start":{"line":120,"column":5},"end":{"line":120,"column":5}}]},"8":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":14},"end":{"line":122,"column":26}},{"start":{"line":123,"column":8},"end":{"line":123,"column":87}}]},"9":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":3},"end":{"line":142,"column":32}},{"start":{"line":142,"column":36},"end":{"line":142,"column":74}}]},"10":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":3},"end":{"line":144,"column":3}},{"start":{"line":144,"column":3},"end":{"line":144,"column":3}}]},"11":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":6}},{"start":{"line":162,"column":6},"end":{"line":162,"column":6}}]}},"code":["define([","\t'dojo/lang',","\t'dojo/Promise',","\t'dojo/node!leadfoot/Session'","], function (lang, Promise, Session) {","\t/* istanbul ignore next: client-side code */","\tfunction getCoverageData(coverageVariable) {","\t\tvar coverageData = (function () { return this; })()[coverageVariable];","\t\treturn coverageData && JSON.stringify(coverageData);","\t}","","\t/**","\t * A ProxiedSession object represents a WebDriver session that interacts with the Intern instrumenting proxy. It","\t * collects code instrumentation data from pages and converts local filesystem paths into URLs for use with","\t * {@link module:leadfoot/Session#get}.","\t *","\t * @constructor module:intern/lib/ProxiedSession","\t * @extends module:leadfoot/Session","\t * @param {string} sessionId The ID of the session, as provided by the remote.","\t * @param {module:leadfoot/Server} server The server that the session belongs to.","\t * @param {Object} capabilities A map of bugs and features that the remote environment exposes.","\t */","\tfunction ProxiedSession() {","\t\tSession.apply(this, arguments);","\t}","","\tvar _super = Session.prototype;","\tProxiedSession.prototype = lang.mixin(Object.create(_super), /** @lends module:intern/lib/ProxiedSession# */ {","\t\tconstructor: ProxiedSession,","","\t\t/**","\t\t * Indicate whether coverage data should be requested before performing a request.","\t\t *","\t\t * @type {boolean}","\t\t */","\t\tcoverageEnabled: false,","","\t\t/**","\t\t * The name of the global variable used to store coverage data.","\t\t *","\t\t * @type {string}","\t\t */","\t\tcoverageVariable: '',","","\t\t_heartbeatIntervalHandle: null,","","\t\t/**","\t\t * The number of characters that need to be truncated from the front of file paths to get a working path-part","\t\t * for a URL.","\t\t *","\t\t * @type {number}","\t\t */","\t\tproxyBasePathLength: 0,","","\t\t/**","\t\t * The base URL of the proxy server in use.","\t\t *","\t\t * @type {string}","\t\t */","\t\tproxyUrl: '',","","\t\treporterManager: null,","","\t\t/**","\t\t * Navigates the browser to a new URL like {@link module:leadfoot/Session#get}, but retrieves any code coverage","\t\t * data recorded by the browser prior to navigation.","\t\t *","\t\t * @param {string} url","\t\t * @returns {Promise.<void>}","\t\t */","\t\tget: function () {","\t\t\tvar self = this;","\t\t\tvar args = Array.prototype.slice.call(arguments, 0);","","\t\t\t// At least two letters are required in the scheme to avoid Windows paths being misinterpreted as URLs","\t\t\tif (!/^[A-Za-z][A-Za-z0-9+.-]+:/.test(args[0])) {","\t\t\t\targs[0] = this.proxyUrl + args[0].slice(this.proxyBasePathLength);","\t\t\t}","","\t\t\tif (this.coverageEnabled) {","\t\t\t\tvar promise;","","\t\t\t\t// At least Safari will not inject user scripts for non http/https URLs, so we can't get coverage data.","\t\t\t\tif (this.capabilities.brokenExecuteForNonHttpUrl) {","\t\t\t\t\tpromise = this.getCurrentUrl().then(function (url) {","\t\t\t\t\t\treturn (/^https?:/i).test(url);","\t\t\t\t\t});","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tpromise = Promise.resolve(true);","\t\t\t\t}","","\t\t\t\treturn promise.then(function (shouldGetCoverage) {","\t\t\t\t\tif (shouldGetCoverage) {","\t\t\t\t\t\treturn self.execute(getCoverageData, [ self.coverageVariable ])","\t\t\t\t\t\t\t.then(function (coverageData) {","\t\t\t\t\t\t\t\treturn coverageData &&","\t\t\t\t\t\t\t\tself.reporterManager.emit('coverage', self.sessionId, JSON.parse(coverageData));","\t\t\t\t\t\t\t});","\t\t\t\t\t}","\t\t\t\t}).finally(function () {","\t\t\t\t\treturn _super.get.apply(self, args);","\t\t\t\t});","\t\t\t}","","\t\t\treturn _super.get.apply(self, args);","\t\t},","","\t\t/**","\t\t * Quits the browser like {@link module:leadfoot/Session#quit}, but retrieves any code coverage data recorded","\t\t * by the browser prior to quitting.","\t\t *","\t\t * @returns {Promise.<void>}","\t\t */","\t\tquit: function () {","\t\t\tvar self = this;","\t\t\treturn this","\t\t\t\t.setHeartbeatInterval(0)","\t\t\t\t.then(function () {","\t\t\t\t\tif (self.coverageEnabled) {","\t\t\t\t\t\treturn self.execute(getCoverageData, [ self.coverageVariable ]).then(function (coverageData) {","\t\t\t\t\t\t\treturn coverageData &&","\t\t\t\t\t\t\t\tself.reporterManager.emit('coverage', self.sessionId, JSON.parse(coverageData));","\t\t\t\t\t\t});","\t\t\t\t\t}","\t\t\t\t})","\t\t\t\t.finally(function () {","\t\t\t\t\treturn _super.quit.call(self);","\t\t\t\t});","\t\t},","","\t\t/**","\t\t * Sets up a timer to send no-op commands to the remote server on an interval to prevent long-running unit tests","\t\t * from causing the session to time out.","\t\t *","\t\t * @param {number} delay","\t\t * Amount of time to wait between heartbeats. Setting the delay to 0 will disable heartbeats.","\t\t *","\t\t * @returns {Promise.<void>}","\t\t */","\t\tsetHeartbeatInterval: function (delay) {","\t\t\tthis._heartbeatIntervalHandle && this._heartbeatIntervalHandle.remove();","","\t\t\tif (delay) {","\t\t\t\t// A heartbeat command is sent immediately when the interval is set because it is unknown how long ago","\t\t\t\t// the last command was sent and it simplifies the implementation by requiring only one call to","\t\t\t\t// `setTimeout`","\t\t\t\tvar self = this;","\t\t\t\t(function sendHeartbeat() {","\t\t\t\t\tvar timeoutId;","\t\t\t\t\tvar cancelled = false;","\t\t\t\t\tvar startTime = Date.now();","","\t\t\t\t\tself._heartbeatIntervalHandle = {","\t\t\t\t\t\tremove: function () {","\t\t\t\t\t\t\tcancelled = true;","\t\t\t\t\t\t\tclearTimeout(timeoutId);","\t\t\t\t\t\t}","\t\t\t\t\t};","","\t\t\t\t\tself.getCurrentUrl().then(function () {","\t\t\t\t\t\tif (!cancelled) {","\t\t\t\t\t\t\ttimeoutId = setTimeout(sendHeartbeat, delay - (Date.now() - startTime));","\t\t\t\t\t\t}","\t\t\t\t\t});","\t\t\t\t})();","\t\t\t}","","\t\t\treturn Promise.resolve();","\t\t}","\t});","","\treturn ProxiedSession;","});",""],"l":{"1":1,"7":1,"8":1,"9":1,"23":1,"24":0,"27":0,"28":0,"72":0,"73":0,"76":0,"77":0,"80":0,"81":0,"84":0,"85":0,"86":0,"90":0,"93":0,"94":0,"95":0,"97":0,"102":0,"106":0,"116":0,"117":0,"120":0,"121":0,"122":0,"128":0,"142":0,"144":0,"148":0,"149":0,"150":0,"151":0,"152":0,"154":0,"156":0,"157":0,"161":0,"162":0,"163":0,"169":0,"173":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/Proxy.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/Proxy.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":82}}},"2":{"name":"Proxy","line":15,"loc":{"start":{"line":15,"column":1},"end":{"line":15,"column":24}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":36}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":41}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":23},"end":{"line":53,"column":40}}},"6":{"name":"(anonymous_6)","line":58,"loc":{"start":{"line":58,"column":22},"end":{"line":58,"column":34}}},"7":{"name":"(anonymous_7)","line":60,"loc":{"start":{"line":60,"column":42},"end":{"line":60,"column":67}}},"8":{"name":"(anonymous_8)","line":64,"loc":{"start":{"line":64,"column":59},"end":{"line":64,"column":78}}},"9":{"name":"(anonymous_9)","line":68,"loc":{"start":{"line":68,"column":37},"end":{"line":68,"column":56}}},"10":{"name":"(anonymous_10)","line":73,"loc":{"start":{"line":73,"column":34},"end":{"line":73,"column":46}}},"11":{"name":"(anonymous_11)","line":76,"loc":{"start":{"line":76,"column":10},"end":{"line":76,"column":22}}},"12":{"name":"(anonymous_12)","line":98,"loc":{"start":{"line":98,"column":15},"end":{"line":98,"column":69}}},"13":{"name":"send","line":99,"loc":{"start":{"line":99,"column":3},"end":{"line":99,"column":36}}},"14":{"name":"(anonymous_14)","line":138,"loc":{"start":{"line":138,"column":22},"end":{"line":138,"column":46}}},"15":{"name":"(anonymous_15)","line":155,"loc":{"start":{"line":155,"column":37},"end":{"line":155,"column":60}}},"16":{"name":"(anonymous_16)","line":198,"loc":{"start":{"line":198,"column":22},"end":{"line":198,"column":41}}},"17":{"name":"(anonymous_17)","line":206,"loc":{"start":{"line":206,"column":43},"end":{"line":206,"column":61}}},"18":{"name":"(anonymous_18)","line":223,"loc":{"start":{"line":223,"column":64},"end":{"line":223,"column":84}}},"19":{"name":"(anonymous_19)","line":233,"loc":{"start":{"line":233,"column":18},"end":{"line":233,"column":47}}},"20":{"name":"(anonymous_20)","line":244,"loc":{"start":{"line":244,"column":12},"end":{"line":244,"column":32}}},"21":{"name":"(anonymous_21)","line":252,"loc":{"start":{"line":252,"column":9},"end":{"line":252,"column":21}}},"22":{"name":"(anonymous_22)","line":253,"loc":{"start":{"line":253,"column":22},"end":{"line":253,"column":41}}},"23":{"name":"(anonymous_23)","line":261,"loc":{"start":{"line":261,"column":34},"end":{"line":261,"column":46}}},"24":{"name":"(anonymous_24)","line":268,"loc":{"start":{"line":268,"column":28},"end":{"line":268,"column":46}}},"25":{"name":"(anonymous_25)","line":275,"loc":{"start":{"line":275,"column":24},"end":{"line":275,"column":36}}},"26":{"name":"(anonymous_26)","line":285,"loc":{"start":{"line":285,"column":8},"end":{"line":285,"column":20}}},"27":{"name":"(anonymous_27)","line":286,"loc":{"start":{"line":286,"column":22},"end":{"line":286,"column":41}}},"28":{"name":"(anonymous_28)","line":298,"loc":{"start":{"line":298,"column":22},"end":{"line":298,"column":53}}},"29":{"name":"(anonymous_29)","line":302,"loc":{"start":{"line":302,"column":12},"end":{"line":302,"column":24}}},"30":{"name":"(anonymous_30)","line":303,"loc":{"start":{"line":303,"column":19},"end":{"line":303,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":311,"column":3}},"2":{"start":{"line":15,"column":1},"end":{"line":17,"column":2}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":23}},"4":{"start":{"line":19,"column":1},"end":{"line":308,"column":3}},"5":{"start":{"line":26,"column":3},"end":{"line":26,"column":43}},"6":{"start":{"line":27,"column":3},"end":{"line":29,"column":4}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":89}},"8":{"start":{"line":31,"column":3},"end":{"line":31,"column":18}},"9":{"start":{"line":35,"column":3},"end":{"line":95,"column":4}},"10":{"start":{"line":36,"column":4},"end":{"line":44,"column":5}},"11":{"start":{"line":37,"column":5},"end":{"line":37,"column":44}},"12":{"start":{"line":39,"column":9},"end":{"line":44,"column":5}},"13":{"start":{"line":40,"column":5},"end":{"line":40,"column":65}},"14":{"start":{"line":43,"column":5},"end":{"line":43,"column":41}},"15":{"start":{"line":46,"column":8},"end":{"line":95,"column":4}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":53}},"17":{"start":{"line":49,"column":8},"end":{"line":95,"column":4}},"18":{"start":{"line":50,"column":4},"end":{"line":50,"column":32}},"19":{"start":{"line":52,"column":4},"end":{"line":52,"column":18}},"20":{"start":{"line":53,"column":4},"end":{"line":55,"column":7}},"21":{"start":{"line":54,"column":5},"end":{"line":54,"column":19}},"22":{"start":{"line":57,"column":4},"end":{"line":57,"column":20}},"23":{"start":{"line":58,"column":4},"end":{"line":90,"column":7}},"24":{"start":{"line":59,"column":5},"end":{"line":89,"column":6}},"25":{"start":{"line":60,"column":6},"end":{"line":62,"column":9}},"26":{"start":{"line":61,"column":7},"end":{"line":61,"column":40}},"27":{"start":{"line":64,"column":6},"end":{"line":66,"column":10}},"28":{"start":{"line":65,"column":7},"end":{"line":65,"column":47}},"29":{"start":{"line":68,"column":6},"end":{"line":70,"column":9}},"30":{"start":{"line":69,"column":7},"end":{"line":69,"column":77}},"31":{"start":{"line":72,"column":6},"end":{"line":84,"column":7}},"32":{"start":{"line":73,"column":7},"end":{"line":79,"column":10}},"33":{"start":{"line":74,"column":8},"end":{"line":74,"column":34}},"34":{"start":{"line":75,"column":8},"end":{"line":75,"column":23}},"35":{"start":{"line":77,"column":8},"end":{"line":77,"column":34}},"36":{"start":{"line":78,"column":8},"end":{"line":78,"column":23}},"37":{"start":{"line":82,"column":7},"end":{"line":82,"column":33}},"38":{"start":{"line":83,"column":7},"end":{"line":83,"column":22}},"39":{"start":{"line":87,"column":6},"end":{"line":87,"column":32}},"40":{"start":{"line":88,"column":6},"end":{"line":88,"column":21}},"41":{"start":{"line":93,"column":4},"end":{"line":93,"column":30}},"42":{"start":{"line":94,"column":4},"end":{"line":94,"column":19}},"43":{"start":{"line":99,"column":3},"end":{"line":105,"column":4}},"44":{"start":{"line":100,"column":4},"end":{"line":103,"column":7}},"45":{"start":{"line":104,"column":4},"end":{"line":104,"column":23}},"46":{"start":{"line":107,"column":3},"end":{"line":107,"column":49}},"47":{"start":{"line":108,"column":3},"end":{"line":108,"column":17}},"48":{"start":{"line":109,"column":3},"end":{"line":109,"column":19}},"49":{"start":{"line":111,"column":3},"end":{"line":117,"column":4}},"50":{"start":{"line":112,"column":4},"end":{"line":112,"column":85}},"51":{"start":{"line":113,"column":4},"end":{"line":113,"column":23}},"52":{"start":{"line":116,"column":4},"end":{"line":116,"column":54}},"53":{"start":{"line":119,"column":3},"end":{"line":119,"column":45}},"54":{"start":{"line":121,"column":3},"end":{"line":123,"column":4}},"55":{"start":{"line":122,"column":4},"end":{"line":122,"column":30}},"56":{"start":{"line":127,"column":3},"end":{"line":135,"column":4}},"57":{"start":{"line":134,"column":4},"end":{"line":134,"column":23}},"58":{"start":{"line":137,"column":3},"end":{"line":137,"column":93}},"59":{"start":{"line":138,"column":3},"end":{"line":195,"column":6}},"60":{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},"61":{"start":{"line":141,"column":5},"end":{"line":141,"column":12}},"62":{"start":{"line":144,"column":4},"end":{"line":147,"column":5}},"63":{"start":{"line":145,"column":5},"end":{"line":145,"column":29}},"64":{"start":{"line":146,"column":5},"end":{"line":146,"column":12}},"65":{"start":{"line":149,"column":4},"end":{"line":194,"column":5}},"66":{"start":{"line":150,"column":5},"end":{"line":150,"column":39}},"67":{"start":{"line":151,"column":5},"end":{"line":180,"column":6}},"68":{"start":{"line":152,"column":6},"end":{"line":152,"column":57}},"69":{"start":{"line":155,"column":6},"end":{"line":179,"column":9}},"70":{"start":{"line":157,"column":7},"end":{"line":159,"column":8}},"71":{"start":{"line":158,"column":8},"end":{"line":158,"column":15}},"72":{"start":{"line":161,"column":7},"end":{"line":164,"column":8}},"73":{"start":{"line":162,"column":8},"end":{"line":162,"column":32}},"74":{"start":{"line":163,"column":8},"end":{"line":163,"column":15}},"75":{"start":{"line":168,"column":7},"end":{"line":172,"column":9}},"76":{"start":{"line":173,"column":7},"end":{"line":177,"column":9}},"77":{"start":{"line":178,"column":7},"end":{"line":178,"column":31}},"78":{"start":{"line":183,"column":5},"end":{"line":186,"column":8}},"79":{"start":{"line":188,"column":5},"end":{"line":193,"column":6}},"80":{"start":{"line":189,"column":6},"end":{"line":189,"column":21}},"81":{"start":{"line":192,"column":6},"end":{"line":192,"column":52}},"82":{"start":{"line":199,"column":3},"end":{"line":199,"column":53}},"83":{"start":{"line":201,"column":3},"end":{"line":204,"column":4}},"84":{"start":{"line":202,"column":4},"end":{"line":203,"column":43}},"85":{"start":{"line":206,"column":3},"end":{"line":209,"column":6}},"86":{"start":{"line":207,"column":4},"end":{"line":207,"column":29}},"87":{"start":{"line":208,"column":4},"end":{"line":208,"column":17}},"88":{"start":{"line":211,"column":3},"end":{"line":214,"column":4}},"89":{"start":{"line":212,"column":4},"end":{"line":212,"column":46}},"90":{"start":{"line":213,"column":4},"end":{"line":213,"column":36}},"91":{"start":{"line":216,"column":3},"end":{"line":216,"column":32}},"92":{"start":{"line":218,"column":3},"end":{"line":228,"column":59}},"93":{"start":{"line":219,"column":4},"end":{"line":219,"column":44}},"94":{"start":{"line":220,"column":4},"end":{"line":220,"column":47}},"95":{"start":{"line":222,"column":4},"end":{"line":226,"column":5}},"96":{"start":{"line":223,"column":5},"end":{"line":225,"column":10}},"97":{"start":{"line":224,"column":6},"end":{"line":224,"column":51}},"98":{"start":{"line":230,"column":3},"end":{"line":230,"column":42}},"99":{"start":{"line":234,"column":3},"end":{"line":234,"column":50}},"100":{"start":{"line":235,"column":3},"end":{"line":235,"column":41}},"101":{"start":{"line":236,"column":3},"end":{"line":236,"column":70}},"102":{"start":{"line":237,"column":3},"end":{"line":240,"column":6}},"103":{"start":{"line":241,"column":3},"end":{"line":241,"column":32}},"104":{"start":{"line":245,"column":3},"end":{"line":247,"column":6}},"105":{"start":{"line":248,"column":3},"end":{"line":249,"column":39}},"106":{"start":{"line":253,"column":3},"end":{"line":282,"column":17}},"107":{"start":{"line":254,"column":4},"end":{"line":254,"column":78}},"108":{"start":{"line":255,"column":4},"end":{"line":255,"column":24}},"109":{"start":{"line":256,"column":4},"end":{"line":256,"column":25}},"110":{"start":{"line":258,"column":4},"end":{"line":258,"column":21}},"111":{"start":{"line":261,"column":4},"end":{"line":266,"column":7}},"112":{"start":{"line":262,"column":5},"end":{"line":262,"column":16}},"113":{"start":{"line":263,"column":5},"end":{"line":265,"column":6}},"114":{"start":{"line":264,"column":6},"end":{"line":264,"column":23}},"115":{"start":{"line":268,"column":4},"end":{"line":279,"column":7}},"116":{"start":{"line":269,"column":5},"end":{"line":269,"column":26}},"117":{"start":{"line":273,"column":5},"end":{"line":273,"column":29}},"118":{"start":{"line":275,"column":5},"end":{"line":278,"column":8}},"119":{"start":{"line":276,"column":6},"end":{"line":276,"column":42}},"120":{"start":{"line":277,"column":6},"end":{"line":277,"column":47}},"121":{"start":{"line":281,"column":4},"end":{"line":281,"column":45}},"122":{"start":{"line":286,"column":3},"end":{"line":295,"column":17}},"123":{"start":{"line":287,"column":4},"end":{"line":292,"column":5}},"124":{"start":{"line":288,"column":5},"end":{"line":288,"column":32}},"125":{"start":{"line":291,"column":5},"end":{"line":291,"column":15}},"126":{"start":{"line":294,"column":4},"end":{"line":294,"column":41}},"127":{"start":{"line":299,"column":3},"end":{"line":299,"column":57}},"128":{"start":{"line":300,"column":3},"end":{"line":300,"column":28}},"129":{"start":{"line":301,"column":3},"end":{"line":306,"column":5}},"130":{"start":{"line":303,"column":5},"end":{"line":303,"column":34}},"131":{"start":{"line":304,"column":5},"end":{"line":304,"column":45}},"132":{"start":{"line":310,"column":1},"end":{"line":310,"column":14}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":3},"end":{"line":27,"column":3}},{"start":{"line":27,"column":3},"end":{"line":27,"column":3}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":3},"end":{"line":35,"column":3}},{"start":{"line":35,"column":3},"end":{"line":35,"column":3}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":9},"end":{"line":39,"column":9}},{"start":{"line":39,"column":9},"end":{"line":39,"column":9}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":6},"end":{"line":72,"column":6}},{"start":{"line":72,"column":6},"end":{"line":72,"column":6}}]},"8":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":3},"end":{"line":111,"column":3}},{"start":{"line":111,"column":3},"end":{"line":111,"column":3}}]},"9":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":3},"end":{"line":121,"column":3}},{"start":{"line":121,"column":3},"end":{"line":121,"column":3}}]},"10":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":3},"end":{"line":127,"column":3}},{"start":{"line":127,"column":3},"end":{"line":127,"column":3}}]},"11":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":47}},{"start":{"line":130,"column":5},"end":{"line":130,"column":39}},{"start":{"line":131,"column":5},"end":{"line":131,"column":50}}]},"12":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":21},"end":{"line":137,"column":62}},{"start":{"line":137,"column":66},"end":{"line":137,"column":92}}]},"13":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"14":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"15":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"16":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":5},"end":{"line":151,"column":5}},{"start":{"line":151,"column":5},"end":{"line":151,"column":5}}]},"17":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":9},"end":{"line":151,"column":35}},{"start":{"line":151,"column":39},"end":{"line":151,"column":81}}]},"18":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":7},"end":{"line":157,"column":7}},{"start":{"line":157,"column":7},"end":{"line":157,"column":7}}]},"19":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":7},"end":{"line":161,"column":7}},{"start":{"line":161,"column":7},"end":{"line":161,"column":7}}]},"20":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":5},"end":{"line":188,"column":5}},{"start":{"line":188,"column":5},"end":{"line":188,"column":5}}]},"21":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":3},"end":{"line":201,"column":3}},{"start":{"line":201,"column":3},"end":{"line":201,"column":3}}]},"22":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":3},"end":{"line":211,"column":3}},{"start":{"line":211,"column":3},"end":{"line":211,"column":3}}]},"23":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"24":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":6},"end":{"line":277,"column":18}},{"start":{"line":277,"column":22},"end":{"line":277,"column":46}}]},"25":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]}},"code":["define([","\t'require',","\t'dojo/lang',","\t'dojo/Promise',","\t'dojo/node!http',","\t'dojo/node!path',","\t'dojo/node!fs',","\t'dojo/node!mimetype',","\t'dojo/node!url',","\t'dojo/aspect',","\t'./util'","], function (require, lang, Promise, http, path, fs, mimetype, url, aspect, util) {","\t/* jshint node:true */","","\tfunction Proxy(config) {","\t\tthis.config = config;","\t}","","\tProxy.prototype = {","\t\tconstructor: Proxy,","","\t\t_codeCache: null,","\t\t_sessions: null,","","\t\t_getSession: function (sessionId) {","\t\t\tvar session = this._sessions[sessionId];","\t\t\tif (!session) {","\t\t\t\tsession = this._sessions[sessionId] = { lastSequence: -1, queue: {}, listeners: [] };","\t\t\t}","","\t\t\treturn session;","\t\t},","","\t\t_handler: function (request, response) {","\t\t\tif (request.method === 'GET') {","\t\t\t\tif (/\\/__resolveSuites__\\?/.test(request.url)) {","\t\t\t\t\tthis._resolveSuites(request, response);","\t\t\t\t}","\t\t\t\telse if (/\\.js(?:$|\\?)/.test(request.url)) {","\t\t\t\t\tthis._handleFile(request, response, this.config.instrument);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tthis._handleFile(request, response);","\t\t\t\t}","\t\t\t}","\t\t\telse if (request.method === 'HEAD') {","\t\t\t\tthis._handleFile(request, response, false, true);","\t\t\t}","\t\t\telse if (request.method === 'POST') {","\t\t\t\trequest.setEncoding('utf8');","","\t\t\t\tvar data = '';","\t\t\t\trequest.on('data', function (chunk) {","\t\t\t\t\tdata += chunk;","\t\t\t\t});","","\t\t\t\tvar self = this;","\t\t\t\trequest.on('end', function () {","\t\t\t\t\ttry {","\t\t\t\t\t\tvar messages = JSON.parse(data).map(function (messageString) {","\t\t\t\t\t\t\treturn JSON.parse(messageString);","\t\t\t\t\t\t});","","\t\t\t\t\t\tvar runnerReporterPromise = Promise.all(messages.map(function (message) {","\t\t\t\t\t\t\treturn self._publishInSequence(message);","\t\t\t\t\t\t}));","","\t\t\t\t\t\tvar shouldWait = messages.some(function (message) {","\t\t\t\t\t\t\treturn util.getShouldWait(self.config.waitForRunner, message.payload);","\t\t\t\t\t\t});","","\t\t\t\t\t\tif (shouldWait) {","\t\t\t\t\t\t\trunnerReporterPromise.then(function () {","\t\t\t\t\t\t\t\tresponse.statusCode = 204;","\t\t\t\t\t\t\t\tresponse.end();","\t\t\t\t\t\t\t}, function () {","\t\t\t\t\t\t\t\tresponse.statusCode = 500;","\t\t\t\t\t\t\t\tresponse.end();","\t\t\t\t\t\t\t});","\t\t\t\t\t\t}","\t\t\t\t\t\telse {","\t\t\t\t\t\t\tresponse.statusCode = 204;","\t\t\t\t\t\t\tresponse.end();","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tcatch (error) {","\t\t\t\t\t\tresponse.statusCode = 500;","\t\t\t\t\t\tresponse.end();","\t\t\t\t\t}","\t\t\t\t});","\t\t\t}","\t\t\telse {","\t\t\t\tresponse.statusCode = 501;","\t\t\t\tresponse.end();","\t\t\t}","\t\t},","","\t\t_handleFile: function (request, response, instrument, omitContent) {","\t\t\tfunction send(contentType, data) {","\t\t\t\tresponse.writeHead(200, {","\t\t\t\t\t'Content-Type': contentType,","\t\t\t\t\t'Content-Length': Buffer.byteLength(data)","\t\t\t\t});","\t\t\t\tresponse.end(data);","\t\t\t}","","\t\t\tvar file = /^\\/+([^?]*)/.exec(request.url)[1];","\t\t\tvar wholePath;","\t\t\tvar self = this;","","\t\t\tif (/^__intern\\//.test(file)) {","\t\t\t\twholePath = path.join(require.toUrl('intern/'), file.replace(/^__intern\\//, ''));","\t\t\t\tinstrument = false;","\t\t\t}","\t\t\telse {","\t\t\t\twholePath = path.join(this.config.basePath, file);","\t\t\t}","","\t\t\twholePath = util.normalizePath(wholePath);","","\t\t\tif (wholePath.charAt(wholePath.length - 1) === '/') {","\t\t\t\twholePath += 'index.html';","\t\t\t}","","\t\t\t// if the string passed to `excludeInstrumentation` changes here, it must also change in","\t\t\t// `lib/executors/Executor.js`","\t\t\tif (","\t\t\t\tthis.config.excludeInstrumentation === true ||","\t\t\t\t(","\t\t\t\t\tthis.config.excludeInstrumentation &&","\t\t\t\t\tthis.config.excludeInstrumentation.test(file)","\t\t\t\t)","\t\t\t) {","\t\t\t\tinstrument = false;","\t\t\t}","","\t\t\tvar contentType = mimetype.lookup(path.basename(wholePath)) || 'application/octet-stream';","\t\t\tfs.stat(wholePath, function (error, stats) {","\t\t\t\t// The proxy server was stopped before this file was served","\t\t\t\tif (!self.server) {","\t\t\t\t\treturn;","\t\t\t\t}","","\t\t\t\tif (error) {","\t\t\t\t\tself._send404(response);","\t\t\t\t\treturn;","\t\t\t\t}","","\t\t\t\tif (instrument) {","\t\t\t\t\tvar mtime = stats.mtime.getTime();","\t\t\t\t\tif (self._codeCache[wholePath] && self._codeCache[wholePath].mtime === mtime) {","\t\t\t\t\t\tsend(contentType, self._codeCache[wholePath].data);","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\tfs.readFile(wholePath, 'utf8', function (error, data) {","\t\t\t\t\t\t\t// The proxy server was stopped in the middle of the file read","\t\t\t\t\t\t\tif (!self.server) {","\t\t\t\t\t\t\t\treturn;","\t\t\t\t\t\t\t}","","\t\t\t\t\t\t\tif (error) {","\t\t\t\t\t\t\t\tself._send404(response);","\t\t\t\t\t\t\t\treturn;","\t\t\t\t\t\t\t}","","\t\t\t\t\t\t\t// providing `wholePath` to the instrumenter instead of a partial filename is necessary because","\t\t\t\t\t\t\t// lcov.info requires full path names as per the lcov spec","\t\t\t\t\t\t\tdata = util.instrument(","\t\t\t\t\t\t\t\tdata.toString('utf-8'),","\t\t\t\t\t\t\t\twholePath,","\t\t\t\t\t\t\t\tself.config.instrumenterOptions","\t\t\t\t\t\t\t);","\t\t\t\t\t\t\tself._codeCache[wholePath] = {","\t\t\t\t\t\t\t\t// strictly speaking mtime could reflect a previous version, assume those race conditions are rare","\t\t\t\t\t\t\t\tmtime: mtime,","\t\t\t\t\t\t\t\tdata: data","\t\t\t\t\t\t\t};","\t\t\t\t\t\t\tsend(contentType, data);","\t\t\t\t\t\t});","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tresponse.writeHead(200, {","\t\t\t\t\t\t'Content-Type': contentType,","\t\t\t\t\t\t'Content-Length': stats.size","\t\t\t\t\t});","","\t\t\t\t\tif (omitContent) {","\t\t\t\t\t\tresponse.end();","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\tfs.createReadStream(wholePath).pipe(response);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t});","\t\t},","","\t\t_publishInSequence: function (message) {","\t\t\tvar session = this._getSession(message.sessionId);","","\t\t\tif (message.sequence <= session.lastSequence) {","\t\t\t\tthrow new Error('Repeated sequence for session ' + message.sessionId + ': ' + session.lastSequence +","\t\t\t\t\t' last ' + message.sequence + ' cur');","\t\t\t}","","\t\t\tmessage.resolver = new Promise.Deferred(function (reason) {","\t\t\t\tmessage.cancelled = true;","\t\t\t\tthrow reason;","\t\t\t});","","\t\t\tif (message.sequence > session.lastSequence + 1) {","\t\t\t\tsession.queue[message.sequence] = message;","\t\t\t\treturn message.resolver.promise;","\t\t\t}","","\t\t\tvar triggerMessage = message;","","\t\t\tdo {","\t\t\t\tsession.lastSequence = message.sequence;","\t\t\t\tdelete session.queue[session.lastSequence];","","\t\t\t\tif (!message.cancelled) {","\t\t\t\t\tmessage.resolver.resolve(Promise.all(session.listeners.map(function (listener) {","\t\t\t\t\t\treturn listener.apply(null, message.payload);","\t\t\t\t\t})));","\t\t\t\t}","\t\t\t}","\t\t\twhile ((message = session.queue[message.sequence + 1]));","","\t\t\treturn triggerMessage.resolver.promise;","\t\t},","","\t\t_resolveSuites: function (request, response) {","\t\t\tvar query = url.parse(request.url, true).query;","\t\t\tvar suites = JSON.parse(query.suites);","\t\t\tvar resolvedSuites = JSON.stringify(util.resolveModuleIds(suites));","\t\t\tresponse.writeHead(200, {","\t\t\t\t'Content-Type': 'application/json',","\t\t\t\t'Content-Length': resolvedSuites.length","\t\t\t});","\t\t\tresponse.end(resolvedSuites);","\t\t},","","\t\t_send404: function (response) {","\t\t\tresponse.writeHead(404, {","\t\t\t\t'Content-Type': 'text/html;charset=utf-8'","\t\t\t});","\t\t\tresponse.end('<!DOCTYPE html><title>404 Not Found</title><h1>404 Not Found</h1><!-- ' +","\t\t\t\tnew Array(512).join('.') + ' -->');","\t\t},","","\t\tstart: function () {","\t\t\treturn new Promise(function (resolve) {","\t\t\t\tvar server = this.server = http.createServer(lang.bind(this, '_handler'));","\t\t\t\tthis._sessions = {};","\t\t\t\tthis._codeCache = {};","","\t\t\t\tvar sockets = [];","","\t\t\t\t// If sockets are not manually destroyed then Node.js will keep itself running until they all expire","\t\t\t\taspect.after(server, 'close', function () {","\t\t\t\t\tvar socket;","\t\t\t\t\twhile ((socket = sockets.pop())) {","\t\t\t\t\t\tsocket.destroy();","\t\t\t\t\t}","\t\t\t\t});","","\t\t\t\tserver.on('connection', function (socket) {","\t\t\t\t\tsockets.push(socket);","","\t\t\t\t\t// Disabling Nagle improves server performance on low-latency connections, which are more common","\t\t\t\t\t// during testing than high-latency connections","\t\t\t\t\tsocket.setNoDelay(true);","","\t\t\t\t\tsocket.on('close', function () {","\t\t\t\t\t\tvar index = sockets.indexOf(socket);","\t\t\t\t\t\tindex !== -1 && sockets.splice(index, 1);","\t\t\t\t\t});","\t\t\t\t});","","\t\t\t\tserver.listen(this.config.port, resolve);","\t\t\t}.bind(this));","\t\t},","","\t\tstop: function () {","\t\t\treturn new Promise(function (resolve) {","\t\t\t\tif (this.server) {","\t\t\t\t\tthis.server.close(resolve);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tresolve();","\t\t\t\t}","","\t\t\t\tthis.server = this._codeCache = null;","\t\t\t}.bind(this));","\t\t},","","\t\tsubscribeToSession: function (sessionId, listener) {","\t\t\tvar listeners = this._getSession(sessionId).listeners;","\t\t\tlisteners.push(listener);","\t\t\treturn {","\t\t\t\tremove: function () {","\t\t\t\t\tthis.remove = function () {};","\t\t\t\t\tlang.pullFromArray(listeners, listener);","\t\t\t\t}","\t\t\t};","\t\t}","\t};","","\treturn Proxy;","});",""],"l":{"1":1,"15":1,"16":0,"19":0,"26":0,"27":0,"28":0,"31":0,"35":0,"36":0,"37":0,"39":0,"40":0,"43":0,"46":0,"47":0,"49":0,"50":0,"52":0,"53":0,"54":0,"57":0,"58":0,"59":0,"60":0,"61":0,"64":0,"65":0,"68":0,"69":0,"72":0,"73":0,"74":0,"75":0,"77":0,"78":0,"82":0,"83":0,"87":0,"88":0,"93":0,"94":0,"99":1,"100":0,"104":0,"107":0,"108":0,"109":0,"111":0,"112":0,"113":0,"116":0,"119":0,"121":0,"122":0,"127":0,"134":0,"137":0,"138":0,"140":0,"141":0,"144":0,"145":0,"146":0,"149":0,"150":0,"151":0,"152":0,"155":0,"157":0,"158":0,"161":0,"162":0,"163":0,"168":0,"173":0,"178":0,"183":0,"188":0,"189":0,"192":0,"199":0,"201":0,"202":0,"206":0,"207":0,"208":0,"211":0,"212":0,"213":0,"216":0,"218":0,"219":0,"220":0,"222":0,"223":0,"224":0,"230":0,"234":0,"235":0,"236":0,"237":0,"241":0,"245":0,"248":0,"253":0,"254":0,"255":0,"256":0,"258":0,"261":0,"262":0,"263":0,"264":0,"268":0,"269":0,"273":0,"275":0,"276":0,"277":0,"281":0,"286":0,"287":0,"288":0,"291":0,"294":0,"299":0,"300":0,"301":0,"303":0,"304":0,"310":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/ReporterManager.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/ReporterManager.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":73}}},"2":{"name":"noop","line":10,"loc":{"start":{"line":10,"column":1},"end":{"line":10,"column":17}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":23},"end":{"line":15,"column":35}}},"4":{"name":"LegacyReporter","line":32,"loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":39}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":53},"end":{"line":47,"column":79}}},"6":{"name":"(anonymous_6)","line":55,"loc":{"start":{"line":55,"column":36},"end":{"line":55,"column":56}}},"7":{"name":"(anonymous_7)","line":56,"loc":{"start":{"line":56,"column":12},"end":{"line":56,"column":24}}},"8":{"name":"ReporterManager","line":92,"loc":{"start":{"line":92,"column":1},"end":{"line":92,"column":28}}},"9":{"name":"defineLazyProperty","line":97,"loc":{"start":{"line":97,"column":1},"end":{"line":97,"column":55}}},"10":{"name":"(anonymous_10)","line":99,"loc":{"start":{"line":99,"column":8},"end":{"line":99,"column":20}}},"11":{"name":"(anonymous_11)","line":123,"loc":{"start":{"line":123,"column":7},"end":{"line":123,"column":35}}},"12":{"name":"mkdir","line":124,"loc":{"start":{"line":124,"column":3},"end":{"line":124,"column":27}}},"13":{"name":"isDirectory","line":125,"loc":{"start":{"line":125,"column":4},"end":{"line":125,"column":35}}},"14":{"name":"(anonymous_14)","line":134,"loc":{"start":{"line":134,"column":39},"end":{"line":134,"column":68}}},"15":{"name":"(anonymous_15)","line":166,"loc":{"start":{"line":166,"column":43},"end":{"line":166,"column":55}}},"16":{"name":"(anonymous_16)","line":175,"loc":{"start":{"line":175,"column":15},"end":{"line":175,"column":31}}},"17":{"name":"(anonymous_17)","line":201,"loc":{"start":{"line":201,"column":42},"end":{"line":201,"column":54}}},"18":{"name":"(anonymous_18)","line":205,"loc":{"start":{"line":205,"column":14},"end":{"line":205,"column":51}}},"19":{"name":"(anonymous_19)","line":209,"loc":{"start":{"line":209,"column":12},"end":{"line":209,"column":49}}},"20":{"name":"(anonymous_20)","line":225,"loc":{"start":{"line":225,"column":12},"end":{"line":225,"column":24}}},"21":{"name":"(anonymous_21)","line":233,"loc":{"start":{"line":233,"column":9},"end":{"line":233,"column":21}}},"22":{"name":"(anonymous_22)","line":234,"loc":{"start":{"line":234,"column":27},"end":{"line":234,"column":47}}},"23":{"name":"(anonymous_23)","line":246,"loc":{"start":{"line":246,"column":8},"end":{"line":246,"column":24}}},"24":{"name":"(anonymous_24)","line":256,"loc":{"start":{"line":256,"column":42},"end":{"line":256,"column":62}}},"25":{"name":"(anonymous_25)","line":276,"loc":{"start":{"line":276,"column":32},"end":{"line":276,"column":49}}},"26":{"name":"(anonymous_26)","line":296,"loc":{"start":{"line":296,"column":6},"end":{"line":296,"column":37}}},"27":{"name":"(anonymous_27)","line":304,"loc":{"start":{"line":304,"column":12},"end":{"line":304,"column":24}}},"28":{"name":"(anonymous_28)","line":305,"loc":{"start":{"line":305,"column":19},"end":{"line":305,"column":31}}},"29":{"name":"(anonymous_29)","line":312,"loc":{"start":{"line":312,"column":15},"end":{"line":312,"column":27}}},"30":{"name":"(anonymous_30)","line":332,"loc":{"start":{"line":332,"column":13},"end":{"line":332,"column":28}}},"31":{"name":"(anonymous_31)","line":339,"loc":{"start":{"line":339,"column":7},"end":{"line":339,"column":19}}},"32":{"name":"emitEarlyEvents","line":342,"loc":{"start":{"line":342,"column":3},"end":{"line":342,"column":30}}},"33":{"name":"(anonymous_33)","line":343,"loc":{"start":{"line":343,"column":52},"end":{"line":343,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":357,"column":3}},"2":{"start":{"line":10,"column":1},"end":{"line":10,"column":19}},"3":{"start":{"line":15,"column":1},"end":{"line":64,"column":6}},"4":{"start":{"line":17,"column":2},"end":{"line":27,"column":4}},"5":{"start":{"line":32,"column":2},"end":{"line":61,"column":3}},"6":{"start":{"line":33,"column":3},"end":{"line":33,"column":16}},"7":{"start":{"line":34,"column":3},"end":{"line":34,"column":17}},"8":{"start":{"line":38,"column":3},"end":{"line":60,"column":4}},"9":{"start":{"line":39,"column":4},"end":{"line":39,"column":36}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":21}},"11":{"start":{"line":42,"column":4},"end":{"line":53,"column":5}},"12":{"start":{"line":43,"column":5},"end":{"line":43,"column":41}},"13":{"start":{"line":46,"column":9},"end":{"line":53,"column":5}},"14":{"start":{"line":47,"column":5},"end":{"line":49,"column":8}},"15":{"start":{"line":48,"column":6},"end":{"line":48,"column":39}},"16":{"start":{"line":52,"column":5},"end":{"line":52,"column":14}},"17":{"start":{"line":55,"column":4},"end":{"line":59,"column":18}},"18":{"start":{"line":56,"column":5},"end":{"line":58,"column":7}},"19":{"start":{"line":57,"column":6},"end":{"line":57,"column":52}},"20":{"start":{"line":63,"column":2},"end":{"line":63,"column":24}},"21":{"start":{"line":92,"column":1},"end":{"line":95,"column":2}},"22":{"start":{"line":93,"column":2},"end":{"line":93,"column":25}},"23":{"start":{"line":94,"column":2},"end":{"line":94,"column":23}},"24":{"start":{"line":97,"column":1},"end":{"line":111,"column":2}},"25":{"start":{"line":98,"column":2},"end":{"line":110,"column":5}},"26":{"start":{"line":100,"column":4},"end":{"line":100,"column":46}},"27":{"start":{"line":101,"column":4},"end":{"line":105,"column":7}},"28":{"start":{"line":106,"column":4},"end":{"line":106,"column":17}},"29":{"start":{"line":113,"column":1},"end":{"line":354,"column":3}},"30":{"start":{"line":124,"column":3},"end":{"line":141,"column":4}},"31":{"start":{"line":125,"column":4},"end":{"line":132,"column":5}},"32":{"start":{"line":126,"column":5},"end":{"line":131,"column":6}},"33":{"start":{"line":127,"column":6},"end":{"line":127,"column":49}},"34":{"start":{"line":130,"column":6},"end":{"line":130,"column":19}},"35":{"start":{"line":134,"column":4},"end":{"line":140,"column":11}},"36":{"start":{"line":135,"column":5},"end":{"line":135,"column":52}},"37":{"start":{"line":136,"column":5},"end":{"line":138,"column":6}},"38":{"start":{"line":137,"column":6},"end":{"line":137,"column":32}},"39":{"start":{"line":139,"column":5},"end":{"line":139,"column":24}},"40":{"start":{"line":143,"column":3},"end":{"line":143,"column":16}},"41":{"start":{"line":145,"column":3},"end":{"line":219,"column":4}},"42":{"start":{"line":146,"column":4},"end":{"line":146,"column":44}},"43":{"start":{"line":149,"column":4},"end":{"line":149,"column":35}},"44":{"start":{"line":150,"column":4},"end":{"line":150,"column":40}},"45":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"46":{"start":{"line":154,"column":5},"end":{"line":154,"column":86}},"47":{"start":{"line":157,"column":4},"end":{"line":216,"column":5}},"48":{"start":{"line":159,"column":5},"end":{"line":198,"column":6}},"49":{"start":{"line":160,"column":6},"end":{"line":162,"column":7}},"50":{"start":{"line":161,"column":7},"end":{"line":161,"column":48}},"51":{"start":{"line":166,"column":6},"end":{"line":168,"column":9}},"52":{"start":{"line":167,"column":7},"end":{"line":167,"column":52}},"53":{"start":{"line":173,"column":6},"end":{"line":173,"column":16}},"54":{"start":{"line":174,"column":6},"end":{"line":190,"column":7}},"55":{"start":{"line":175,"column":7},"end":{"line":186,"column":9}},"56":{"start":{"line":176,"column":8},"end":{"line":176,"column":17}},"57":{"start":{"line":177,"column":8},"end":{"line":183,"column":9}},"58":{"start":{"line":178,"column":9},"end":{"line":178,"column":47}},"59":{"start":{"line":179,"column":9},"end":{"line":179,"column":74}},"60":{"start":{"line":182,"column":9},"end":{"line":182,"column":26}},"61":{"start":{"line":185,"column":8},"end":{"line":185,"column":64}},"62":{"start":{"line":189,"column":7},"end":{"line":189,"column":57}},"63":{"start":{"line":192,"column":6},"end":{"line":197,"column":9}},"64":{"start":{"line":200,"column":9},"end":{"line":216,"column":5}},"65":{"start":{"line":201,"column":5},"end":{"line":215,"column":8}},"66":{"start":{"line":202,"column":6},"end":{"line":202,"column":50}},"67":{"start":{"line":204,"column":6},"end":{"line":214,"column":8}},"68":{"start":{"line":206,"column":8},"end":{"line":206,"column":60}},"69":{"start":{"line":207,"column":8},"end":{"line":207,"column":19}},"70":{"start":{"line":210,"column":8},"end":{"line":210,"column":60}},"71":{"start":{"line":211,"column":8},"end":{"line":211,"column":43}},"72":{"start":{"line":212,"column":8},"end":{"line":212,"column":19}},"73":{"start":{"line":218,"column":4},"end":{"line":218,"column":36}},"74":{"start":{"line":221,"column":3},"end":{"line":221,"column":35}},"75":{"start":{"line":222,"column":3},"end":{"line":222,"column":28}},"76":{"start":{"line":224,"column":3},"end":{"line":230,"column":5}},"77":{"start":{"line":226,"column":5},"end":{"line":226,"column":24}},"78":{"start":{"line":227,"column":5},"end":{"line":227,"column":45}},"79":{"start":{"line":228,"column":5},"end":{"line":228,"column":51}},"80":{"start":{"line":234,"column":3},"end":{"line":236,"column":6}},"81":{"start":{"line":235,"column":4},"end":{"line":235,"column":43}},"82":{"start":{"line":237,"column":3},"end":{"line":237,"column":24}},"83":{"start":{"line":247,"column":3},"end":{"line":250,"column":4}},"84":{"start":{"line":248,"column":4},"end":{"line":248,"column":69}},"85":{"start":{"line":249,"column":4},"end":{"line":249,"column":29}},"86":{"start":{"line":252,"column":3},"end":{"line":252,"column":19}},"87":{"start":{"line":253,"column":3},"end":{"line":253,"column":27}},"88":{"start":{"line":254,"column":3},"end":{"line":254,"column":53}},"89":{"start":{"line":256,"column":3},"end":{"line":293,"column":24}},"90":{"start":{"line":257,"column":4},"end":{"line":257,"column":34}},"91":{"start":{"line":258,"column":4},"end":{"line":258,"column":24}},"92":{"start":{"line":260,"column":4},"end":{"line":263,"column":5}},"93":{"start":{"line":261,"column":5},"end":{"line":261,"column":33}},"94":{"start":{"line":262,"column":5},"end":{"line":262,"column":24}},"95":{"start":{"line":265,"column":4},"end":{"line":292,"column":5}},"96":{"start":{"line":269,"column":5},"end":{"line":271,"column":6}},"97":{"start":{"line":270,"column":6},"end":{"line":270,"column":30}},"98":{"start":{"line":273,"column":5},"end":{"line":291,"column":6}},"99":{"start":{"line":274,"column":6},"end":{"line":274,"column":54}},"100":{"start":{"line":275,"column":6},"end":{"line":282,"column":7}},"101":{"start":{"line":276,"column":7},"end":{"line":278,"column":10}},"102":{"start":{"line":277,"column":8},"end":{"line":277,"column":59}},"103":{"start":{"line":281,"column":7},"end":{"line":281,"column":21}},"104":{"start":{"line":285,"column":6},"end":{"line":290,"column":7}},"105":{"start":{"line":286,"column":7},"end":{"line":286,"column":58}},"106":{"start":{"line":289,"column":7},"end":{"line":289,"column":36}},"107":{"start":{"line":297,"column":3},"end":{"line":297,"column":21}},"108":{"start":{"line":298,"column":3},"end":{"line":298,"column":34}},"109":{"start":{"line":300,"column":3},"end":{"line":300,"column":35}},"110":{"start":{"line":301,"column":3},"end":{"line":301,"column":28}},"111":{"start":{"line":303,"column":3},"end":{"line":309,"column":5}},"112":{"start":{"line":305,"column":5},"end":{"line":305,"column":34}},"113":{"start":{"line":306,"column":5},"end":{"line":306,"column":45}},"114":{"start":{"line":307,"column":5},"end":{"line":307,"column":33}},"115":{"start":{"line":313,"column":3},"end":{"line":315,"column":4}},"116":{"start":{"line":314,"column":4},"end":{"line":314,"column":19}},"117":{"start":{"line":317,"column":3},"end":{"line":317,"column":24}},"118":{"start":{"line":319,"column":3},"end":{"line":334,"column":6}},"119":{"start":{"line":333,"column":4},"end":{"line":333,"column":28}},"120":{"start":{"line":336,"column":3},"end":{"line":336,"column":22}},"121":{"start":{"line":340,"column":3},"end":{"line":340,"column":19}},"122":{"start":{"line":342,"column":3},"end":{"line":348,"column":4}},"123":{"start":{"line":343,"column":4},"end":{"line":345,"column":8}},"124":{"start":{"line":344,"column":5},"end":{"line":344,"column":41}},"125":{"start":{"line":346,"column":4},"end":{"line":346,"column":42}},"126":{"start":{"line":347,"column":4},"end":{"line":347,"column":36}},"127":{"start":{"line":350,"column":3},"end":{"line":352,"column":27}},"128":{"start":{"line":356,"column":1},"end":{"line":356,"column":24}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":9},"end":{"line":46,"column":9}},{"start":{"line":46,"column":9},"end":{"line":46,"column":9}}]},"3":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":5},"end":{"line":136,"column":5}},{"start":{"line":136,"column":5},"end":{"line":136,"column":5}}]},"4":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":3},"end":{"line":145,"column":3}},{"start":{"line":145,"column":3},"end":{"line":145,"column":3}}]},"5":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"6":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"7":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":5},"end":{"line":159,"column":5}},{"start":{"line":159,"column":5},"end":{"line":159,"column":5}}]},"8":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":6},"end":{"line":160,"column":6}},{"start":{"line":160,"column":6},"end":{"line":160,"column":6}}]},"9":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":6},"end":{"line":174,"column":6}},{"start":{"line":174,"column":6},"end":{"line":174,"column":6}}]},"10":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":177,"column":8}},{"start":{"line":177,"column":8},"end":{"line":177,"column":8}}]},"11":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":12},"end":{"line":177,"column":36}},{"start":{"line":177,"column":40},"end":{"line":177,"column":65}}]},"12":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":9},"end":{"line":200,"column":9}},{"start":{"line":200,"column":9},"end":{"line":200,"column":9}}]},"13":{"line":228,"type":"binary-expr","locations":[{"start":{"line":228,"column":12},"end":{"line":228,"column":28}},{"start":{"line":228,"column":32},"end":{"line":228,"column":50}}]},"14":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":20}},{"start":{"line":235,"column":24},"end":{"line":235,"column":42}}]},"15":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":3},"end":{"line":247,"column":3}},{"start":{"line":247,"column":3},"end":{"line":247,"column":3}}]},"16":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":260,"column":4}},{"start":{"line":260,"column":4},"end":{"line":260,"column":4}}]},"17":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":8},"end":{"line":260,"column":17}},{"start":{"line":260,"column":21},"end":{"line":260,"column":37}}]},"18":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":265,"column":4}},{"start":{"line":265,"column":4},"end":{"line":265,"column":4}}]},"19":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":5},"end":{"line":269,"column":5}},{"start":{"line":269,"column":5},"end":{"line":269,"column":5}}]},"20":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":9},"end":{"line":269,"column":30}},{"start":{"line":269,"column":34},"end":{"line":269,"column":41}}]},"21":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":6},"end":{"line":275,"column":6}},{"start":{"line":275,"column":6},"end":{"line":275,"column":6}}]},"22":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":10},"end":{"line":275,"column":16}},{"start":{"line":275,"column":20},"end":{"line":275,"column":31}},{"start":{"line":275,"column":35},"end":{"line":275,"column":59}}]},"23":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":6},"end":{"line":285,"column":6}},{"start":{"line":285,"column":6},"end":{"line":285,"column":6}}]},"24":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":3},"end":{"line":313,"column":3}},{"start":{"line":313,"column":3},"end":{"line":313,"column":3}}]}},"code":["define([","\t'dojo/has',","\t'dojo/has!host-node?dojo/node!fs',","\t'dojo/has!host-node?dojo/node!path',","\t'dojo/has!host-node?dojo/node!istanbul/lib/report/common/defaults',","\t'dojo/lang',","\t'dojo/aspect',","\t'dojo/Promise'","], function (has, fs, pathUtil, istanbulDefaults, lang, aspect, Promise) {","\tfunction noop() {}","","\t/**","\t * A Reporter that wraps a legacy reporter definition object.","\t */","\tvar LegacyReporter = (function () {","\t\t// topics that don't directly map to reporter events","\t\tvar TOPIC_TO_EVENT = {","\t\t\t'/test/new': 'newTest',","\t\t\t'/suite/new': 'newSuite',","\t\t\t'/client/end': 'runEnd',","\t\t\t'/error': 'fatalError',","\t\t\t'/runner/end': 'runEnd',","\t\t\t'/runner/start': 'runStart',","\t\t\t'/tunnel/stop': 'tunnelEnd',","\t\t\tstart: 'run',","\t\t\tstop: 'destroy'","\t\t};","","\t\t/**","\t\t * Converts a legacy Intern 2 reporter to an Intern 3 reporter instance.","\t\t */","\t\tfunction LegacyReporter(reporterMap) {","\t\t\tvar callback;","\t\t\tvar eventName;","","\t\t\t// add all of the properties on the reporterMap that look like topics or map to a known","\t\t\t// reporter method (e.g., start)","\t\t\tfor (var topicId in reporterMap) {","\t\t\t\tcallback = reporterMap[topicId];","\t\t\t\teventName = null;","","\t\t\t\tif (topicId in TOPIC_TO_EVENT) {","\t\t\t\t\teventName = TOPIC_TO_EVENT[topicId];","\t\t\t\t}","\t\t\t\t// programmatically transform legacy topic ID to event name","\t\t\t\telse if (topicId.charAt(0) === '/') {","\t\t\t\t\teventName = topicId.slice(1).replace(/\\/(\\w)/g, function (_, firstLetter) {","\t\t\t\t\t\treturn firstLetter.toUpperCase();","\t\t\t\t\t});","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcontinue;","\t\t\t\t}","","\t\t\t\taspect.before(this, eventName, (function (callback) {","\t\t\t\t\treturn function () {","\t\t\t\t\t\treturn callback.apply(reporterMap, arguments);","\t\t\t\t\t};","\t\t\t\t})(callback));","\t\t\t}","\t\t}","","\t\treturn LegacyReporter;","\t})();","","\t/**","\t * A class that manages a set of reporters","\t *","\t * Standard events:","\t *     coverage","\t *     fatalError","\t *     newSuite","\t *     newTest","\t *     proxyEnd","\t *     proxyStart","\t *     runEnd","\t *     runStart","\t *     start","\t *     stop","\t *     suiteEnd","\t *     suiteError","\t *     suiteStart","\t *     testEnd","\t *     testPass","\t *     testSkip","\t *     testStart","\t *     tunnelDownloadProgress","\t *     tunnelEnd","\t *     tunnelStart","\t *     tunnelStatus","\t */","\tfunction ReporterManager() {","\t\tthis._earlyEvents = [];","\t\tthis._reporters = [];","\t}","","\tfunction defineLazyProperty(object, property, getter) {","\t\tObject.defineProperty(object, property, {","\t\t\tget: function () {","\t\t\t\tvar value = getter.apply(this, arguments);","\t\t\t\tObject.defineProperty(object, property, {","\t\t\t\t\tvalue: value,","\t\t\t\t\tconfigurable: true,","\t\t\t\t\tenumerable: true","\t\t\t\t});","\t\t\t\treturn value;","\t\t\t},","\t\t\tconfigurable: true,","\t\t\tenumerable: true","\t\t});","\t}","","\tReporterManager.prototype = {","\t\tconstructor: ReporterManager,","\t\t_earlyEvents: null,","\t\t_reporters: null,","","\t\t/**","\t\t * Add a reporter to the list of managed reporters.","\t\t *","\t\t * @param {string} name event name to emit","\t\t */","\t\tadd: function (Reporter, config) {","\t\t\tfunction mkdir(dirname) {","\t\t\t\tfunction isDirectory(pathname) {","\t\t\t\t\ttry {","\t\t\t\t\t\treturn fs.statSync(pathname).isDirectory();","\t\t\t\t\t}","\t\t\t\t\tcatch (error) {","\t\t\t\t\t\treturn false;","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\tdirname.split(pathUtil.sep).reduce(function (currentPath, part) {","\t\t\t\t\tcurrentPath = pathUtil.join(currentPath, part);","\t\t\t\t\tif (!isDirectory(currentPath)) {","\t\t\t\t\t\tfs.mkdirSync(currentPath);","\t\t\t\t\t}","\t\t\t\t\treturn currentPath;","\t\t\t\t}, '');","\t\t\t}","","\t\t\tvar reporter;","","\t\t\tif (typeof Reporter === 'object') {","\t\t\t\treporter = new LegacyReporter(Reporter);","\t\t\t}","\t\t\telse {","\t\t\t\tconfig = Object.create(config);","\t\t\t\tconfig.console = this._getConsole();","","\t\t\t\t// https://github.com/gotwarlost/istanbul/issues/358","\t\t\t\tif ('watermarks' in config) {","\t\t\t\t\tconfig.watermarks = lang.mixin(istanbulDefaults.watermarks(), config.watermarks);","\t\t\t\t}","","\t\t\t\tif (has('host-node')) {","\t\t\t\t\t/* jshint node:true */","\t\t\t\t\tif (config.filename) {","\t\t\t\t\t\tif (pathUtil.dirname(config.filename) !== '.') {","\t\t\t\t\t\t\tmkdir(pathUtil.dirname(config.filename));","\t\t\t\t\t\t}","","\t\t\t\t\t\t// Lazily create the writable stream so we do not open an extra fd for reporters that use","\t\t\t\t\t\t// `filename` directly and never touch `config.output`","\t\t\t\t\t\tdefineLazyProperty(config, 'output', function () {","\t\t\t\t\t\t\treturn fs.createWriteStream(config.filename);","\t\t\t\t\t\t});","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\t// See theintern/intern#454; all \\r must be replaced by \\x1b[1G (cursor move to column 1)","\t\t\t\t\t\t// on Windows due to a libuv bug","\t\t\t\t\t\tvar write;","\t\t\t\t\t\tif (process.platform === 'win32') {","\t\t\t\t\t\t\twrite = function (data) {","\t\t\t\t\t\t\t\tvar args;","\t\t\t\t\t\t\t\tif (typeof data === 'string' && data.indexOf('\\r') !== -1) {","\t\t\t\t\t\t\t\t\tdata = data.replace(/\\r/g, '\\x1b[1G');","\t\t\t\t\t\t\t\t\targs = [ data ].concat(Array.prototype.slice.call(arguments, 1));","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\telse {","\t\t\t\t\t\t\t\t\targs = arguments;","\t\t\t\t\t\t\t\t}","","\t\t\t\t\t\t\t\treturn process.stdout.write.apply(process.stdout, args);","\t\t\t\t\t\t\t};","\t\t\t\t\t\t}","\t\t\t\t\t\telse {","\t\t\t\t\t\t\twrite = process.stdout.write.bind(process.stdout);","\t\t\t\t\t\t}","","\t\t\t\t\t\tconfig.output = lang.delegate(process.stdout, {","\t\t\t\t\t\t\twrite: write,","\t\t\t\t\t\t\t// Allow reporters to call `end` regardless of whether or not they are outputting to file,","\t\t\t\t\t\t\t// without an error for stdout (which cannot be closed)","\t\t\t\t\t\t\tend: write","\t\t\t\t\t\t});","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse if (has('host-browser')) {","\t\t\t\t\tdefineLazyProperty(config, 'output', function () {","\t\t\t\t\t\tvar element = document.createElement('pre');","","\t\t\t\t\t\treturn {","\t\t\t\t\t\t\twrite: function (chunk, encoding, callback) {","\t\t\t\t\t\t\t\telement.appendChild(document.createTextNode(chunk));","\t\t\t\t\t\t\t\tcallback();","\t\t\t\t\t\t\t},","\t\t\t\t\t\t\tend: function (chunk, encoding, callback) {","\t\t\t\t\t\t\t\telement.appendChild(document.createTextNode(chunk));","\t\t\t\t\t\t\t\tdocument.body.appendChild(element);","\t\t\t\t\t\t\t\tcallback();","\t\t\t\t\t\t\t}","\t\t\t\t\t\t};","\t\t\t\t\t});","\t\t\t\t}","","\t\t\t\treporter = new Reporter(config);","\t\t\t}","","\t\t\tvar reporters = this._reporters;","\t\t\treporters.push(reporter);","","\t\t\treturn {","\t\t\t\tremove: function () {","\t\t\t\t\tthis.remove = noop;","\t\t\t\t\tlang.pullFromArray(reporters, reporter);","\t\t\t\t\treturn reporter.destroy && reporter.destroy();","\t\t\t\t}","\t\t\t};","\t\t},","","\t\tempty: function () {","\t\t\tthis._reporters.forEach(function (reporter) {","\t\t\t\treporter.destroy && reporter.destroy();","\t\t\t});","\t\t\tthis._reporters = [];","\t\t},","","\t\t/**","\t\t * Emit an event to all registered reporters that can respond to it.","\t\t *","\t\t * @param {string} name event name to emit","\t\t * @returns {Promise.<void>}","\t\t */","\t\temit: function (name) {","\t\t\tif (!this._reporters.length) {","\t\t\t\tthis._earlyEvents.push(Array.prototype.slice.call(arguments, 0));","\t\t\t\treturn Promise.resolve();","\t\t\t}","","\t\t\tvar self = this;","\t\t\tvar allArgs = arguments;","\t\t\tvar args = Array.prototype.slice.call(allArgs, 1);","","\t\t\treturn Promise.all(this._reporters.map(function (reporter) {","\t\t\t\tvar listener = reporter[name];","\t\t\t\tvar sendArgs = args;","","\t\t\t\tif (!listener && reporter.$others) {","\t\t\t\t\tlistener = reporter.$others;","\t\t\t\t\tsendArgs = allArgs;","\t\t\t\t}","","\t\t\t\tif (listener) {","\t\t\t\t\t// In the case that a fatal error occurs and there are no reporters around that care,","\t\t\t\t\t// the pre-executor will make a hail mary pass to try to get the information out by sending it to","\t\t\t\t\t// the early error reporter if the error does not have a `reported` property","\t\t\t\t\tif (name === 'fatalError' && args[0]) {","\t\t\t\t\t\targs[0].reported = true;","\t\t\t\t\t}","","\t\t\t\t\ttry {","\t\t\t\t\t\tvar result = listener.apply(reporter, sendArgs);","\t\t\t\t\t\tif (result && result.then && name !== 'reporterError') {","\t\t\t\t\t\t\treturn result.then(null, function (error) {","\t\t\t\t\t\t\t\treturn self.emit('reporterError', reporter, error);","\t\t\t\t\t\t\t});","\t\t\t\t\t\t}","\t\t\t\t\t\telse {","\t\t\t\t\t\t\treturn result;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tcatch (error) {","\t\t\t\t\t\tif (name !== 'reporterError') {","\t\t\t\t\t\t\treturn self.emit('reporterError', reporter, error);","\t\t\t\t\t\t}","\t\t\t\t\t\telse {","\t\t\t\t\t\t\treturn Promise.reject(error);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t})).then(noop, noop);","\t\t},","","\t\ton: function (eventName, listener) {","\t\t\tvar reporter = {};","\t\t\treporter[eventName] = listener;","","\t\t\tvar reporters = this._reporters;","\t\t\treporters.push(reporter);","","\t\t\treturn {","\t\t\t\tremove: function () {","\t\t\t\t\tthis.remove = function () {};","\t\t\t\t\tlang.pullFromArray(reporters, reporter);","\t\t\t\t\treporters = reporter = null;","\t\t\t\t}","\t\t\t};","\t\t},","","\t\t_getConsole: function () {","\t\t\tif (typeof console !== 'undefined') {","\t\t\t\treturn console;","\t\t\t}","","\t\t\tvar fakeConsole = {};","","\t\t\t[","\t\t\t\t'assert',","\t\t\t\t'count',","\t\t\t\t'dir',","\t\t\t\t'error',","\t\t\t\t'exception',","\t\t\t\t'info',","\t\t\t\t'log',","\t\t\t\t'table',","\t\t\t\t'time',","\t\t\t\t'timeEnd',","\t\t\t\t'trace',","\t\t\t\t'warn'","\t\t\t].forEach(function (key) {","\t\t\t\tfakeConsole[key] = noop;","\t\t\t});","","\t\t\treturn fakeConsole;","\t\t},","","\t\trun: function () {","\t\t\tvar self = this;","","\t\t\tfunction emitEarlyEvents() {","\t\t\t\tvar promise = Promise.all(self._earlyEvents.map(function (event) {","\t\t\t\t\treturn self.emit.apply(self, event);","\t\t\t\t}));","\t\t\t\tself._earlyEvents.splice(0, Infinity);","\t\t\t\treturn promise.then(noop, noop);","\t\t\t}","","\t\t\treturn this","\t\t\t\t.emit('run')","\t\t\t\t.then(emitEarlyEvents);","\t\t}","\t};","","\treturn ReporterManager;","});",""],"l":{"1":1,"10":1,"15":0,"17":0,"32":1,"33":0,"34":0,"38":0,"39":0,"40":0,"42":0,"43":0,"46":0,"47":0,"48":0,"52":0,"55":0,"56":0,"57":0,"63":0,"92":1,"93":0,"94":0,"97":1,"98":0,"100":0,"101":0,"106":0,"113":0,"124":1,"125":1,"126":0,"127":0,"130":0,"134":0,"135":0,"136":0,"137":0,"139":0,"143":0,"145":0,"146":0,"149":0,"150":0,"153":0,"154":0,"157":0,"159":0,"160":0,"161":0,"166":0,"167":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"182":0,"185":0,"189":0,"192":0,"200":0,"201":0,"202":0,"204":0,"206":0,"207":0,"210":0,"211":0,"212":0,"218":0,"221":0,"222":0,"224":0,"226":0,"227":0,"228":0,"234":0,"235":0,"237":0,"247":0,"248":0,"249":0,"252":0,"253":0,"254":0,"256":0,"257":0,"258":0,"260":0,"261":0,"262":0,"265":0,"269":0,"270":0,"273":0,"274":0,"275":0,"276":0,"277":0,"281":0,"285":0,"286":0,"289":0,"297":0,"298":0,"300":0,"301":0,"303":0,"305":0,"306":0,"307":0,"313":0,"314":0,"317":0,"319":0,"333":0,"336":0,"340":0,"342":1,"343":0,"344":0,"346":0,"347":0,"350":0,"356":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/resolveEnvironments.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/resolveEnvironments.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":3},"end":{"line":4,"column":36}}},"2":{"name":"ascendingNumbers","line":8,"loc":{"start":{"line":8,"column":1},"end":{"line":8,"column":33}}},"3":{"name":"expandVersionRange","line":15,"loc":{"start":{"line":15,"column":1},"end":{"line":15,"column":61}}},"4":{"name":"(anonymous_4)","line":21,"loc":{"start":{"line":21,"column":34},"end":{"line":21,"column":53}}},"5":{"name":"resolveVersionAlias","line":38,"loc":{"start":{"line":38,"column":1},"end":{"line":38,"column":58}}},"6":{"name":"(anonymous_6)","line":44,"loc":{"start":{"line":44,"column":22},"end":{"line":44,"column":39}}},"7":{"name":"splitVersions","line":75,"loc":{"start":{"line":75,"column":1},"end":{"line":75,"column":34}}},"8":{"name":"(anonymous_8)","line":81,"loc":{"start":{"line":81,"column":22},"end":{"line":81,"column":41}}},"9":{"name":"getVersions","line":93,"loc":{"start":{"line":93,"column":1},"end":{"line":93,"column":46}}},"10":{"name":"(anonymous_10)","line":96,"loc":{"start":{"line":96,"column":19},"end":{"line":96,"column":51}}},"11":{"name":"(anonymous_11)","line":98,"loc":{"start":{"line":98,"column":43},"end":{"line":98,"column":58}}},"12":{"name":"(anonymous_12)","line":100,"loc":{"start":{"line":100,"column":11},"end":{"line":100,"column":26}}},"13":{"name":"(anonymous_13)","line":103,"loc":{"start":{"line":103,"column":13},"end":{"line":103,"column":36}}},"14":{"name":"(anonymous_14)","line":107,"loc":{"start":{"line":107,"column":35},"end":{"line":107,"column":54}}},"15":{"name":"resolveVersions","line":120,"loc":{"start":{"line":120,"column":1},"end":{"line":120,"column":50}}},"16":{"name":"(anonymous_16)","line":127,"loc":{"start":{"line":127,"column":42},"end":{"line":127,"column":61}}},"17":{"name":"createPermutations","line":151,"loc":{"start":{"line":151,"column":1},"end":{"line":151,"column":44}}},"18":{"name":"(anonymous_18)","line":158,"loc":{"start":{"line":158,"column":21},"end":{"line":158,"column":39}}},"19":{"name":"(anonymous_19)","line":159,"loc":{"start":{"line":159,"column":37},"end":{"line":159,"column":66}}},"20":{"name":"(anonymous_20)","line":163,"loc":{"start":{"line":163,"column":36},"end":{"line":163,"column":53}}},"21":{"name":"(anonymous_21)","line":164,"loc":{"start":{"line":164,"column":30},"end":{"line":164,"column":53}}},"22":{"name":"(anonymous_22)","line":169,"loc":{"start":{"line":169,"column":15},"end":{"line":169,"column":59}}},"23":{"name":"(anonymous_23)","line":175,"loc":{"start":{"line":175,"column":26},"end":{"line":175,"column":49}}},"24":{"name":"(anonymous_24)","line":181,"loc":{"start":{"line":181,"column":12},"end":{"line":181,"column":59}}},"25":{"name":"resolveEnvironments","line":194,"loc":{"start":{"line":194,"column":1},"end":{"line":194,"column":69}}},"26":{"name":"(anonymous_26)","line":198,"loc":{"start":{"line":198,"column":23},"end":{"line":198,"column":46}}},"27":{"name":"(anonymous_27)","line":203,"loc":{"start":{"line":203,"column":50},"end":{"line":203,"column":73}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":209,"column":3}},"2":{"start":{"line":8,"column":1},"end":{"line":10,"column":2}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":15}},"4":{"start":{"line":15,"column":1},"end":{"line":24,"column":2}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":22}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":24}},"7":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"8":{"start":{"line":19,"column":3},"end":{"line":19,"column":83}},"9":{"start":{"line":21,"column":2},"end":{"line":23,"column":5}},"10":{"start":{"line":22,"column":3},"end":{"line":22,"column":46}},"11":{"start":{"line":38,"column":1},"end":{"line":68,"column":2}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":34}},"13":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"14":{"start":{"line":41,"column":3},"end":{"line":41,"column":61}},"15":{"start":{"line":44,"column":2},"end":{"line":46,"column":5}},"16":{"start":{"line":45,"column":3},"end":{"line":45,"column":23}},"17":{"start":{"line":48,"column":2},"end":{"line":53,"column":3}},"18":{"start":{"line":52,"column":3},"end":{"line":52,"column":61}},"19":{"start":{"line":55,"column":2},"end":{"line":67,"column":3}},"20":{"start":{"line":56,"column":3},"end":{"line":56,"column":60}},"21":{"start":{"line":57,"column":3},"end":{"line":61,"column":4}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":89}},"23":{"start":{"line":59,"column":4},"end":{"line":59,"column":81}},"24":{"start":{"line":60,"column":4},"end":{"line":60,"column":29}},"25":{"start":{"line":63,"column":3},"end":{"line":63,"column":67}},"26":{"start":{"line":66,"column":3},"end":{"line":66,"column":28}},"27":{"start":{"line":75,"column":1},"end":{"line":84,"column":2}},"28":{"start":{"line":76,"column":2},"end":{"line":76,"column":34}},"29":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"30":{"start":{"line":78,"column":3},"end":{"line":78,"column":45}},"31":{"start":{"line":81,"column":2},"end":{"line":83,"column":5}},"32":{"start":{"line":82,"column":3},"end":{"line":82,"column":25}},"33":{"start":{"line":93,"column":1},"end":{"line":110,"column":2}},"34":{"start":{"line":94,"column":2},"end":{"line":94,"column":20}},"35":{"start":{"line":96,"column":2},"end":{"line":105,"column":5}},"36":{"start":{"line":98,"column":3},"end":{"line":102,"column":6}},"37":{"start":{"line":99,"column":4},"end":{"line":99,"column":29}},"38":{"start":{"line":101,"column":4},"end":{"line":101,"column":91}},"39":{"start":{"line":104,"column":3},"end":{"line":104,"column":40}},"40":{"start":{"line":107,"column":2},"end":{"line":109,"column":28}},"41":{"start":{"line":108,"column":3},"end":{"line":108,"column":26}},"42":{"start":{"line":120,"column":1},"end":{"line":141,"column":2}},"43":{"start":{"line":121,"column":2},"end":{"line":121,"column":37}},"44":{"start":{"line":122,"column":2},"end":{"line":122,"column":30}},"45":{"start":{"line":124,"column":2},"end":{"line":138,"column":3}},"46":{"start":{"line":125,"column":3},"end":{"line":125,"column":63}},"47":{"start":{"line":127,"column":3},"end":{"line":129,"column":6}},"48":{"start":{"line":128,"column":4},"end":{"line":128,"column":59}},"49":{"start":{"line":131,"column":3},"end":{"line":137,"column":4}},"50":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"51":{"start":{"line":133,"column":5},"end":{"line":133,"column":85}},"52":{"start":{"line":136,"column":4},"end":{"line":136,"column":79}},"53":{"start":{"line":140,"column":2},"end":{"line":140,"column":18}},"54":{"start":{"line":151,"column":1},"end":{"line":184,"column":2}},"55":{"start":{"line":153,"column":2},"end":{"line":155,"column":3}},"56":{"start":{"line":154,"column":3},"end":{"line":154,"column":35}},"57":{"start":{"line":158,"column":2},"end":{"line":183,"column":9}},"58":{"start":{"line":159,"column":3},"end":{"line":180,"column":32}},"59":{"start":{"line":160,"column":4},"end":{"line":178,"column":5}},"60":{"start":{"line":163,"column":5},"end":{"line":171,"column":12}},"61":{"start":{"line":164,"column":6},"end":{"line":168,"column":9}},"62":{"start":{"line":165,"column":7},"end":{"line":165,"column":47}},"63":{"start":{"line":166,"column":7},"end":{"line":166,"column":26}},"64":{"start":{"line":167,"column":7},"end":{"line":167,"column":20}},"65":{"start":{"line":170,"column":6},"end":{"line":170,"column":53}},"66":{"start":{"line":175,"column":5},"end":{"line":177,"column":8}},"67":{"start":{"line":176,"column":6},"end":{"line":176,"column":37}},"68":{"start":{"line":179,"column":4},"end":{"line":179,"column":24}},"69":{"start":{"line":182,"column":3},"end":{"line":182,"column":53}},"70":{"start":{"line":194,"column":1},"end":{"line":206,"column":2}},"71":{"start":{"line":195,"column":2},"end":{"line":195,"column":64}},"72":{"start":{"line":198,"column":2},"end":{"line":200,"column":5}},"73":{"start":{"line":199,"column":3},"end":{"line":199,"column":65}},"74":{"start":{"line":203,"column":2},"end":{"line":205,"column":5}},"75":{"start":{"line":204,"column":3},"end":{"line":204,"column":43}},"76":{"start":{"line":208,"column":1},"end":{"line":208,"column":28}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":44}},{"start":{"line":18,"column":48},"end":{"line":18,"column":87}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":10},"end":{"line":22,"column":25}},{"start":{"line":22,"column":29},"end":{"line":22,"column":45}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"6":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":23}},{"start":{"line":49,"column":28},"end":{"line":49,"column":50}},{"start":{"line":49,"column":54},"end":{"line":49,"column":70}},{"start":{"line":50,"column":4},"end":{"line":50,"column":23}},{"start":{"line":50,"column":27},"end":{"line":50,"column":69}}]},"7":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":33},"end":{"line":50,"column":42}},{"start":{"line":50,"column":46},"end":{"line":50,"column":68}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"9":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":38},"end":{"line":56,"column":55}},{"start":{"line":56,"column":58},"end":{"line":56,"column":59}}]},"10":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":3},"end":{"line":57,"column":3}},{"start":{"line":57,"column":3},"end":{"line":57,"column":3}}]},"11":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":49},"end":{"line":59,"column":56}},{"start":{"line":59,"column":59},"end":{"line":59,"column":64}}]},"12":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"13":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":12},"end":{"line":101,"column":39}},{"start":{"line":101,"column":44},"end":{"line":101,"column":90}}]},"14":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":14},"end":{"line":122,"column":23}},{"start":{"line":122,"column":27},"end":{"line":122,"column":29}}]},"15":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"16":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":6},"end":{"line":124,"column":14}},{"start":{"line":124,"column":18},"end":{"line":124,"column":33}}]},"17":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":3},"end":{"line":131,"column":3}},{"start":{"line":131,"column":3},"end":{"line":131,"column":3}}]},"18":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"19":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":2},"end":{"line":153,"column":2}},{"start":{"line":153,"column":2},"end":{"line":153,"column":2}}]},"20":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":6},"end":{"line":153,"column":14}},{"start":{"line":153,"column":18},"end":{"line":153,"column":38}}]},"21":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]}},"code":["define([","\t'dojo/lang',","\t'./EnvironmentType'","], function (lang, EnvironmentType) {","\t/**","\t * A comparator for sorting numbers in ascending order","\t */","\tfunction ascendingNumbers(a, b) {","\t\treturn a - b;","\t}","","\t/**","\t * Expands a range of versions using available environments","\t */","\tfunction expandVersionRange(left, right, availableVersions) {","\t\tleft = Number(left);","\t\tright = Number(right);","\t\tif (availableVersions.indexOf(left) === -1 || availableVersions.indexOf(right) === -1) {","\t\t\tthrow new Error('The version range ' + left + '..' + right + ' is unavailable');","\t\t}","\t\treturn availableVersions.filter(function (version) {","\t\t\treturn version >= left && version <= right;","\t\t});","\t}","","\t/**","\t * Resolves a version alias from a list of available versions.","\t *","\t * Assumes availableVersions is sorted in ascending order. Acceptable versions are:","\t *","\t *   - {number}","\t *   - '{number}'","\t *   - 'latest'","\t *   - 'latest-{number}'","\t *","\t * @returns {number}","\t */","\tfunction resolveVersionAlias(version, availableVersions) {","\t\tvar pieces = version.split('-');","\t\tif (pieces.length > 2) {","\t\t\tthrow new Error('Invalid alias syntax \"' + version + '\"');","\t\t}","\t\t\t","\t\tpieces = pieces.map(function (piece) {","\t\t\treturn piece.trim();","\t\t});","","\t\tif (","\t\t\t(pieces.length === 2 && (pieces[0] !== 'latest' || isNaN(pieces[1]))) ||","\t\t\t(pieces.length === 1 && isNaN(pieces[0] && pieces[0] !== 'latest'))","\t\t) {","\t\t\tthrow new Error('invalid alias syntax \"' + version + '\"');","\t\t}","","\t\tif (pieces[0] === 'latest') {","\t\t\tvar offset = pieces.length === 2 ? Number(pieces[1]) : 0;","\t\t\tif (offset > availableVersions.length) {","\t\t\t\tvar message = 'Can\\'t get ' + version + '; ' + availableVersions.length + ' version';","\t\t\t\tmessage += (availableVersions.length !== 1 ? 's are' : ' is') + ' available';","\t\t\t\tthrow new Error(message);","\t\t\t}","","\t\t\treturn availableVersions[availableVersions.length - 1 - offset];","\t\t}","\t\telse {","\t\t\treturn Number(pieces[0]);","\t\t}","\t}","","\t/**","\t * Splits a version into one or two version strings using the '..' delimiter","\t *","\t * @returns {string[]}","\t */","\tfunction splitVersions(versions) {","\t\tversions = versions.split('..');","\t\tif (versions.length > 2) {","\t\t\tthrow new Error('Invalid version syntax');","\t\t}","\t\t\t","\t\treturn versions.map(function (version) {","\t\t\treturn version.trim();","\t\t});","\t}","","\t/**","\t * Get a list of versions from a list of available environments filtered by the current environment.","\t *","\t * @param {Object} environment the environment for which versions should match","\t * @param {Object[]} available a list of available environments","\t * @returns {number[]} a list of version numbers from available filtered by the current environment","\t */","\tfunction getVersions(environment, available) {","\t\tvar versions = {};","","\t\tavailable.filter(function (availableEnvironment) {","\t\t\t// Return true if there are no mismatching keys","\t\t\treturn !Object.keys(environment).filter(function (key) {","\t\t\t\treturn key !== 'version';","\t\t\t}).some(function (key) {","\t\t\t\treturn (key in availableEnvironment) && availableEnvironment[key] !== environment[key];","\t\t\t});","\t\t}).forEach(function (environment) {","\t\t\tversions[environment.version] = true;","\t\t});","\t\t\t","\t\treturn Object.keys(versions).map(function (version) {","\t\t\treturn Number(version);","\t\t}).sort(ascendingNumbers);","\t}","","\t/**","\t * Resolves version aliases (e.g. latest, latest - 1) and version ranges (e.g. 36 .. latest or latest - 3 .. latest)","\t * using the environment list returned by tunnel#getEnvironments().","\t *","\t * @param {Object} environment an object with an optional version property","\t * @param {Object[]} available a list of enviornment available on the target service","\t * @returns {Object} the environment with resolved version aliases","\t */","\tfunction resolveVersions(environment, available) {","\t\tvar versions = environment.version;","\t\tavailable = available || [];","\t\t","\t\tif (versions && isNaN(versions)) {","\t\t\tvar availableVersions = getVersions(environment, available);","\t\t\t","\t\t\tversions = splitVersions(versions).map(function (version) {","\t\t\t\treturn resolveVersionAlias(version, availableVersions);","\t\t\t});","","\t\t\tif (versions.length === 2) {","\t\t\t\tif (versions[0] > versions[1]) {","\t\t\t\t\tthrow new Error('Invalid range [' + versions + '], must be in ascending order');","\t\t\t\t}","\t\t\t","\t\t\t\tversions = expandVersionRange(versions[0], versions[1], availableVersions);","\t\t\t}","\t\t}","","\t\treturn versions;","\t}","","\t/**","\t * Builds permutations of an object by flattening properties holding array values into a collection of objects","\t * representing all combinations of objects for all arrays in the object.","\t *","\t * @param base {Object} a base set of properties applied to each source","\t * @param sources {Array.<Object>} a list of sources to flatten","\t * @return {Object[]} a flattened collection of sources","\t */","\tfunction createPermutations(base, sources) {","\t\t// If no expansion sources were given, the set of permutations consists of just the base","\t\tif (!sources || sources.length === 0) {","\t\t\treturn [ lang.mixin({}, base) ];","\t\t}","","\t\t// Expand the permutation set for each source","\t\treturn sources.map(function (source) {","\t\t\treturn Object.keys(source).reduce(function (permutations, key) {","\t\t\t\tif (Array.isArray(source[key])) {","\t\t\t\t\t// For array values, create a copy of the permutation set for each array item, then use the","\t\t\t\t\t// combination of these copies as the new value of `permutations`","\t\t\t\t\tpermutations = source[key].map(function (value) {","\t\t\t\t\t\treturn permutations.map(function (permutation) {","\t\t\t\t\t\t\tvar clone = lang.mixin({}, permutation);","\t\t\t\t\t\t\tclone[key] = value;","\t\t\t\t\t\t\treturn clone;","\t\t\t\t\t\t});","\t\t\t\t\t}).reduce(function (newPermutations, keyPermutations) {","\t\t\t\t\t\treturn newPermutations.concat(keyPermutations);","\t\t\t\t\t}, []);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\t// For simple values, add the value to all current permutations","\t\t\t\t\tpermutations.forEach(function (permutation) {","\t\t\t\t\t\tpermutation[key] = source[key];","\t\t\t\t\t});","\t\t\t\t}","\t\t\t\treturn permutations;","\t\t\t}, [ lang.mixin({}, base) ]);","\t\t}).reduce(function (newPermutations, sourcePermutations) {","\t\t\treturn newPermutations.concat(sourcePermutations);","\t\t}, []);","\t}","","\t/**","\t * Resolves a collection of Intern test environments to a list of service environments","\t *","\t * @param {Object} capabilities a base set of capabilities for all environments","\t * @param {Object[]} environments a list of user-requested enviromnents","\t * @param {Object[]?} available a list of available environments","\t * @returns {EnvironmentType} a list of flattened service environments","\t */","\tfunction resolveEnvironments(capabilities, environments, available) {","\t\tenvironments = createPermutations(capabilities, environments);","","\t\t// Expand any version ranges or aliases in the environments.","\t\tenvironments.forEach(function (environment) {","\t\t\tenvironment.version = resolveVersions(environment, available);","\t\t});","","\t\t// Perform a second round of permuting to handle any expanded version ranges","\t\treturn createPermutations({}, environments).map(function (environment) {","\t\t\treturn new EnvironmentType(environment);","\t\t});","\t}","\t","\treturn resolveEnvironments;","});",""],"l":{"1":1,"8":1,"9":0,"15":1,"16":0,"17":0,"18":0,"19":0,"21":0,"22":0,"38":1,"39":0,"40":0,"41":0,"44":0,"45":0,"48":0,"52":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"63":0,"66":0,"75":1,"76":0,"77":0,"78":0,"81":0,"82":0,"93":1,"94":0,"96":0,"98":0,"99":0,"101":0,"104":0,"107":0,"108":0,"120":1,"121":0,"122":0,"124":0,"125":0,"127":0,"128":0,"131":0,"132":0,"133":0,"136":0,"140":0,"151":1,"153":0,"154":0,"158":0,"159":0,"160":0,"163":0,"164":0,"165":0,"166":0,"167":0,"170":0,"175":0,"176":0,"179":0,"182":0,"194":1,"195":0,"198":0,"199":0,"203":0,"204":0,"208":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/sendData.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/sendData.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":3},"end":{"line":5,"column":40}}},"2":{"name":"sendRequest","line":7,"loc":{"start":{"line":7,"column":1},"end":{"line":7,"column":27}}},"3":{"name":"send","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":18}}},"4":{"name":"sendNextBlock","line":14,"loc":{"start":{"line":14,"column":3},"end":{"line":14,"column":28}}},"5":{"name":"(anonymous_5)","line":25,"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":24}}},"6":{"name":"(anonymous_6)","line":35,"loc":{"start":{"line":35,"column":31},"end":{"line":35,"column":58}}},"7":{"name":"(anonymous_7)","line":36,"loc":{"start":{"line":36,"column":32},"end":{"line":36,"column":44}}},"8":{"name":"(anonymous_8)","line":39,"loc":{"start":{"line":39,"column":13},"end":{"line":39,"column":30}}},"9":{"name":"(anonymous_9)","line":51,"loc":{"start":{"line":51,"column":40},"end":{"line":51,"column":52}}},"10":{"name":"(anonymous_10)","line":69,"loc":{"start":{"line":69,"column":23},"end":{"line":69,"column":35}}},"11":{"name":"(anonymous_11)","line":73,"loc":{"start":{"line":73,"column":23},"end":{"line":73,"column":44}}},"12":{"name":"(anonymous_12)","line":77,"loc":{"start":{"line":77,"column":26},"end":{"line":77,"column":50}}},"13":{"name":"(anonymous_13)","line":81,"loc":{"start":{"line":81,"column":16},"end":{"line":81,"column":48}}},"14":{"name":"(anonymous_14)","line":82,"loc":{"start":{"line":82,"column":18},"end":{"line":82,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":102,"column":3}},"2":{"start":{"line":7,"column":1},"end":{"line":61,"column":2}},"3":{"start":{"line":10,"column":2},"end":{"line":46,"column":3}},"4":{"start":{"line":14,"column":3},"end":{"line":30,"column":4}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":37}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":31}},"7":{"start":{"line":17,"column":4},"end":{"line":20,"column":5}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":32}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":34}},"10":{"start":{"line":22,"column":4},"end":{"line":29,"column":7}},"11":{"start":{"line":26,"column":5},"end":{"line":28,"column":6}},"12":{"start":{"line":27,"column":6},"end":{"line":27,"column":29}},"13":{"start":{"line":32,"column":3},"end":{"line":32,"column":32}},"14":{"start":{"line":33,"column":3},"end":{"line":33,"column":22}},"15":{"start":{"line":35,"column":3},"end":{"line":43,"column":6}},"16":{"start":{"line":36,"column":4},"end":{"line":42,"column":7}},"17":{"start":{"line":37,"column":5},"end":{"line":37,"column":26}},"18":{"start":{"line":38,"column":5},"end":{"line":38,"column":15}},"19":{"start":{"line":40,"column":5},"end":{"line":40,"column":26}},"20":{"start":{"line":41,"column":5},"end":{"line":41,"column":19}},"21":{"start":{"line":45,"column":3},"end":{"line":45,"column":24}},"22":{"start":{"line":48,"column":2},"end":{"line":60,"column":3}},"23":{"start":{"line":49,"column":3},"end":{"line":55,"column":4}},"24":{"start":{"line":51,"column":4},"end":{"line":54,"column":7}},"25":{"start":{"line":52,"column":5},"end":{"line":52,"column":27}},"26":{"start":{"line":53,"column":5},"end":{"line":53,"column":19}},"27":{"start":{"line":56,"column":3},"end":{"line":56,"column":25}},"28":{"start":{"line":59,"column":3},"end":{"line":59,"column":17}},"29":{"start":{"line":63,"column":1},"end":{"line":63,"column":19}},"30":{"start":{"line":64,"column":1},"end":{"line":64,"column":25}},"31":{"start":{"line":65,"column":1},"end":{"line":65,"column":24}},"32":{"start":{"line":66,"column":1},"end":{"line":66,"column":20}},"33":{"start":{"line":67,"column":1},"end":{"line":67,"column":18}},"34":{"start":{"line":69,"column":1},"end":{"line":71,"column":3}},"35":{"start":{"line":70,"column":2},"end":{"line":70,"column":18}},"36":{"start":{"line":73,"column":1},"end":{"line":75,"column":3}},"37":{"start":{"line":74,"column":2},"end":{"line":74,"column":23}},"38":{"start":{"line":77,"column":1},"end":{"line":79,"column":3}},"39":{"start":{"line":78,"column":2},"end":{"line":78,"column":29}},"40":{"start":{"line":81,"column":1},"end":{"line":101,"column":3}},"41":{"start":{"line":82,"column":2},"end":{"line":85,"column":5}},"42":{"start":{"line":83,"column":3},"end":{"line":84,"column":73}},"43":{"start":{"line":87,"column":2},"end":{"line":93,"column":6}},"44":{"start":{"line":98,"column":2},"end":{"line":98,"column":13}},"45":{"start":{"line":100,"column":2},"end":{"line":100,"column":26}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":11},"end":{"line":17,"column":30}},{"start":{"line":17,"column":34},"end":{"line":17,"column":73}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":5},"end":{"line":26,"column":5}},{"start":{"line":26,"column":5},"end":{"line":26,"column":5}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"4":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":19}},{"start":{"line":48,"column":23},"end":{"line":48,"column":37}}]},"5":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":3},"end":{"line":49,"column":3}},{"start":{"line":49,"column":3},"end":{"line":49,"column":3}}]},"6":{"line":83,"type":"cond-expr","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":65}},{"start":{"line":84,"column":68},"end":{"line":84,"column":72}}]}},"code":["define([","\t'dojo/request',","\t'dojo/Promise',","\t'exports'","], function (request, Promise, exports) {","\t// Send a message, or schedule it to be sent. Return a promise that resolves when the message has been sent.","\tfunction sendRequest(url) {","\t\t// Send all buffered messages and empty the buffer. Note that the posted data will always be an array of","\t\t// objects.","\t\tfunction send() {","\t\t\t// Some testing services have problems handling large message POSTs, so limit the maximum size of","\t\t\t// each POST body to maxPostSize bytes. Always send at least one message, even if it's more than","\t\t\t// maxPostSize bytes.","\t\t\tfunction sendNextBlock() {","\t\t\t\tvar block = [ messages.shift() ];","\t\t\t\tvar size = block[0].length;","\t\t\t\twhile (messages.length > 0 && size + messages[0].length < maxPostSize) {","\t\t\t\t\tsize += messages[0].length;","\t\t\t\t\tblock.push(messages.shift());","\t\t\t\t}","","\t\t\t\treturn request.post(url, {","\t\t\t\t\theaders: { 'Content-Type': 'application/json' },","\t\t\t\t\tdata: JSON.stringify(block)","\t\t\t\t}).then(function () {","\t\t\t\t\tif (messages.length > 0) {","\t\t\t\t\t\treturn sendNextBlock();","\t\t\t\t\t}","\t\t\t\t});","\t\t\t}","","\t\t\tvar messages = messageBuffer;","\t\t\tmessageBuffer = [];","","\t\t\tactiveRequest = new Promise(function (resolve, reject) {","\t\t\t\treturn sendNextBlock().then(function () {","\t\t\t\t\tactiveRequest = null;","\t\t\t\t\tresolve();","\t\t\t\t}).catch(function (error) {","\t\t\t\t\tactiveRequest = null;","\t\t\t\t\treject(error);","\t\t\t\t});","\t\t\t});","","\t\t\treturn activeRequest;","\t\t}","","\t\tif (activeRequest || pendingRequest) {","\t\t\tif (!pendingRequest) {","\t\t\t\t// Schedule another request after the active one completes","\t\t\t\tpendingRequest = activeRequest.then(function () {","\t\t\t\t\tpendingRequest = null;","\t\t\t\t\treturn send();","\t\t\t\t});","\t\t\t}","\t\t\treturn pendingRequest;","\t\t}","\t\telse {","\t\t\treturn send();","\t\t}","\t}","","\tvar activeRequest;","\tvar maxPostSize = 50000;","\tvar messageBuffer = [];","\tvar pendingRequest;","\tvar sequence = 0;","","\texports.getSequence = function () {","\t\treturn sequence;","\t};","","\texports.setSequence = function (_sequence) {","\t\tsequence = _sequence;","\t};","","\texports.setMaxPostSize = function (_maxPostSize) {","\t\tmaxPostSize = _maxPostSize;","\t};","","\texports.send = function (url, data, sessionId) {","\t\tdata = data.map(function (item) {","\t\t\treturn item instanceof Error ?","\t\t\t\t{ name: item.name, message: item.message, stack: item.stack } : item;","\t\t});","","\t\tmessageBuffer.push(JSON.stringify({","\t\t\tsequence: sequence,","\t\t\t// Although sessionId may be passed as part of the payload, it is passed in the message object as well to","\t\t\t// allow the conduit to be fully separate and encapsulated from the rest of the code","\t\t\tsessionId: sessionId,","\t\t\tpayload: data","\t\t}));","","\t\t// The sequence must not be incremented until after the data is successfully serialised, since an error","\t\t// during serialisation might occur, which would mean the request is never sent, which would mean the","\t\t// dispatcher on the server-side will stall because the sequence numbering will be wrong","\t\tsequence++;","","\t\treturn sendRequest(url);","\t};","});",""],"l":{"1":1,"7":1,"10":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"22":0,"26":0,"27":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"40":0,"41":0,"45":0,"48":0,"49":0,"51":0,"52":0,"53":0,"56":0,"59":0,"63":0,"64":0,"65":0,"66":0,"67":0,"69":0,"70":0,"73":0,"74":0,"77":0,"78":0,"81":0,"82":0,"83":0,"87":0,"98":0,"100":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/Suite.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/Suite.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":1,"168":0,"169":0,"170":1,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":3},"end":{"line":5,"column":34}}},"2":{"name":"Suite","line":6,"loc":{"start":{"line":6,"column":1},"end":{"line":6,"column":24}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":10},"end":{"line":45,"column":13}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":10},"end":{"line":49,"column":18}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":10},"end":{"line":56,"column":13}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":10},"end":{"line":60,"column":18}}},"7":{"name":"(anonymous_7)","line":67,"loc":{"start":{"line":67,"column":8},"end":{"line":67,"column":11}}},"8":{"name":"(anonymous_8)","line":81,"loc":{"start":{"line":81,"column":14},"end":{"line":81,"column":17}}},"9":{"name":"(anonymous_9)","line":93,"loc":{"start":{"line":93,"column":12},"end":{"line":93,"column":15}}},"10":{"name":"(anonymous_10)","line":97,"loc":{"start":{"line":97,"column":12},"end":{"line":97,"column":20}}},"11":{"name":"(anonymous_11)","line":108,"loc":{"start":{"line":108,"column":21},"end":{"line":108,"column":24}}},"12":{"name":"(anonymous_12)","line":112,"loc":{"start":{"line":112,"column":21},"end":{"line":112,"column":29}}},"13":{"name":"(anonymous_13)","line":123,"loc":{"start":{"line":123,"column":15},"end":{"line":123,"column":18}}},"14":{"name":"(anonymous_14)","line":133,"loc":{"start":{"line":133,"column":15},"end":{"line":133,"column":23}}},"15":{"name":"(anonymous_15)","line":141,"loc":{"start":{"line":141,"column":14},"end":{"line":141,"column":17}}},"16":{"name":"reduce","line":142,"loc":{"start":{"line":142,"column":3},"end":{"line":142,"column":35}}},"17":{"name":"(anonymous_17)","line":152,"loc":{"start":{"line":152,"column":20},"end":{"line":152,"column":23}}},"18":{"name":"reduce","line":153,"loc":{"start":{"line":153,"column":3},"end":{"line":153,"column":41}}},"19":{"name":"(anonymous_19)","line":165,"loc":{"start":{"line":165,"column":21},"end":{"line":165,"column":24}}},"20":{"name":"reduce","line":166,"loc":{"start":{"line":166,"column":3},"end":{"line":166,"column":42}}},"21":{"name":"(anonymous_21)","line":178,"loc":{"start":{"line":178,"column":15},"end":{"line":178,"column":18}}},"22":{"name":"(anonymous_22)","line":182,"loc":{"start":{"line":182,"column":13},"end":{"line":182,"column":16}}},"23":{"name":"(anonymous_23)","line":194,"loc":{"start":{"line":194,"column":13},"end":{"line":194,"column":21}}},"24":{"name":"(anonymous_24)","line":213,"loc":{"start":{"line":213,"column":7},"end":{"line":213,"column":19}}},"25":{"name":"runLifecycleMethod","line":218,"loc":{"start":{"line":218,"column":3},"end":{"line":218,"column":50}}},"26":{"name":"(anonymous_26)","line":219,"loc":{"start":{"line":219,"column":23},"end":{"line":219,"column":42}}},"27":{"name":"(anonymous_27)","line":225,"loc":{"start":{"line":225,"column":19},"end":{"line":225,"column":39}}},"28":{"name":"(anonymous_28)","line":230,"loc":{"start":{"line":230,"column":20},"end":{"line":230,"column":32}}},"29":{"name":"(anonymous_29)","line":243,"loc":{"start":{"line":243,"column":30},"end":{"line":243,"column":42}}},"30":{"name":"(anonymous_30)","line":247,"loc":{"start":{"line":247,"column":27},"end":{"line":247,"column":39}}},"31":{"name":"(anonymous_31)","line":255,"loc":{"start":{"line":255,"column":8},"end":{"line":255,"column":25}}},"32":{"name":"(anonymous_32)","line":258,"loc":{"start":{"line":258,"column":8},"end":{"line":258,"column":25}}},"33":{"name":"(anonymous_33)","line":268,"loc":{"start":{"line":268,"column":13},"end":{"line":268,"column":30}}},"34":{"name":"end","line":278,"loc":{"start":{"line":278,"column":3},"end":{"line":278,"column":18}}},"35":{"name":"report","line":283,"loc":{"start":{"line":283,"column":3},"end":{"line":283,"column":30}}},"36":{"name":"reportSuiteError","line":293,"loc":{"start":{"line":293,"column":3},"end":{"line":293,"column":36}}},"37":{"name":"(anonymous_37)","line":295,"loc":{"start":{"line":295,"column":44},"end":{"line":295,"column":56}}},"38":{"name":"runTestLifecycle","line":300,"loc":{"start":{"line":300,"column":3},"end":{"line":300,"column":41}}},"39":{"name":"(anonymous_39)","line":314,"loc":{"start":{"line":314,"column":23},"end":{"line":314,"column":73}}},"40":{"name":"(anonymous_40)","line":318,"loc":{"start":{"line":318,"column":17},"end":{"line":318,"column":35}}},"41":{"name":"(anonymous_41)","line":323,"loc":{"start":{"line":323,"column":30},"end":{"line":323,"column":42}}},"42":{"name":"handleError","line":330,"loc":{"start":{"line":330,"column":5},"end":{"line":330,"column":33}}},"43":{"name":"next","line":340,"loc":{"start":{"line":340,"column":5},"end":{"line":340,"column":21}}},"44":{"name":"runWithCatch","line":348,"loc":{"start":{"line":348,"column":6},"end":{"line":348,"column":30}}},"45":{"name":"runTests","line":359,"loc":{"start":{"line":359,"column":3},"end":{"line":359,"column":23}}},"46":{"name":"(anonymous_46)","line":363,"loc":{"start":{"line":363,"column":23},"end":{"line":363,"column":73}}},"47":{"name":"(anonymous_47)","line":367,"loc":{"start":{"line":367,"column":17},"end":{"line":367,"column":35}}},"48":{"name":"(anonymous_48)","line":372,"loc":{"start":{"line":372,"column":30},"end":{"line":372,"column":42}}},"49":{"name":"next","line":379,"loc":{"start":{"line":379,"column":5},"end":{"line":379,"column":21}}},"50":{"name":"reportAndContinue","line":387,"loc":{"start":{"line":387,"column":6},"end":{"line":387,"column":40}}},"51":{"name":"runWithCatch","line":395,"loc":{"start":{"line":395,"column":6},"end":{"line":395,"column":30}}},"52":{"name":"(anonymous_52)","line":429,"loc":{"start":{"line":429,"column":17},"end":{"line":429,"column":29}}},"53":{"name":"(anonymous_53)","line":432,"loc":{"start":{"line":432,"column":15},"end":{"line":432,"column":32}}},"54":{"name":"(anonymous_54)","line":438,"loc":{"start":{"line":438,"column":19},"end":{"line":438,"column":31}}},"55":{"name":"skipRestOfSuite","line":439,"loc":{"start":{"line":439,"column":7},"end":{"line":439,"column":34}}},"56":{"name":"setup","line":461,"loc":{"start":{"line":461,"column":3},"end":{"line":461,"column":20}}},"57":{"name":"start","line":465,"loc":{"start":{"line":465,"column":3},"end":{"line":465,"column":20}}},"58":{"name":"(anonymous_58)","line":466,"loc":{"start":{"line":466,"column":37},"end":{"line":466,"column":49}}},"59":{"name":"teardown","line":471,"loc":{"start":{"line":471,"column":3},"end":{"line":471,"column":23}}},"60":{"name":"(anonymous_60)","line":480,"loc":{"start":{"line":480,"column":11},"end":{"line":480,"column":23}}},"61":{"name":"(anonymous_61)","line":489,"loc":{"start":{"line":489,"column":12},"end":{"line":489,"column":24}}},"62":{"name":"(anonymous_62)","line":497,"loc":{"start":{"line":497,"column":9},"end":{"line":497,"column":21}}},"63":{"name":"(anonymous_63)","line":508,"loc":{"start":{"line":508,"column":8},"end":{"line":508,"column":27}}},"64":{"name":"(anonymous_64)","line":514,"loc":{"start":{"line":514,"column":10},"end":{"line":514,"column":22}}},"65":{"name":"(anonymous_65)","line":521,"loc":{"start":{"line":521,"column":26},"end":{"line":521,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":543,"column":3}},"2":{"start":{"line":6,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":18}},"4":{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},"5":{"start":{"line":9,"column":3},"end":{"line":9,"column":23}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":70}},"7":{"start":{"line":17,"column":1},"end":{"line":17,"column":28}},"8":{"start":{"line":19,"column":1},"end":{"line":540,"column":3}},"9":{"start":{"line":46,"column":3},"end":{"line":46,"column":58}},"10":{"start":{"line":50,"column":3},"end":{"line":50,"column":22}},"11":{"start":{"line":57,"column":3},"end":{"line":57,"column":66}},"12":{"start":{"line":61,"column":3},"end":{"line":61,"column":22}},"13":{"start":{"line":68,"column":3},"end":{"line":68,"column":17}},"14":{"start":{"line":69,"column":3},"end":{"line":69,"column":21}},"15":{"start":{"line":71,"column":3},"end":{"line":73,"column":38}},"16":{"start":{"line":72,"column":4},"end":{"line":72,"column":53}},"17":{"start":{"line":75,"column":3},"end":{"line":75,"column":27}},"18":{"start":{"line":82,"column":3},"end":{"line":82,"column":28}},"19":{"start":{"line":83,"column":3},"end":{"line":85,"column":4}},"20":{"start":{"line":84,"column":4},"end":{"line":84,"column":21}},"21":{"start":{"line":94,"column":3},"end":{"line":94,"column":82}},"22":{"start":{"line":98,"column":3},"end":{"line":100,"column":4}},"23":{"start":{"line":99,"column":4},"end":{"line":99,"column":61}},"24":{"start":{"line":102,"column":3},"end":{"line":102,"column":60}},"25":{"start":{"line":109,"column":3},"end":{"line":109,"column":80}},"26":{"start":{"line":113,"column":3},"end":{"line":115,"column":4}},"27":{"start":{"line":114,"column":4},"end":{"line":114,"column":70}},"28":{"start":{"line":117,"column":3},"end":{"line":117,"column":69}},"29":{"start":{"line":124,"column":3},"end":{"line":127,"column":9}},"30":{"start":{"line":134,"column":3},"end":{"line":134,"column":63}},"31":{"start":{"line":142,"column":3},"end":{"line":144,"column":4}},"32":{"start":{"line":143,"column":4},"end":{"line":143,"column":75}},"33":{"start":{"line":146,"column":3},"end":{"line":146,"column":39}},"34":{"start":{"line":153,"column":3},"end":{"line":157,"column":4}},"35":{"start":{"line":154,"column":4},"end":{"line":156,"column":84}},"36":{"start":{"line":159,"column":3},"end":{"line":159,"column":39}},"37":{"start":{"line":166,"column":3},"end":{"line":170,"column":4}},"38":{"start":{"line":167,"column":4},"end":{"line":169,"column":68}},"39":{"start":{"line":172,"column":3},"end":{"line":172,"column":39}},"40":{"start":{"line":179,"column":3},"end":{"line":179,"column":31}},"41":{"start":{"line":183,"column":3},"end":{"line":191,"column":4}},"42":{"start":{"line":184,"column":4},"end":{"line":184,"column":25}},"43":{"start":{"line":186,"column":8},"end":{"line":191,"column":4}},"44":{"start":{"line":187,"column":4},"end":{"line":187,"column":31}},"45":{"start":{"line":190,"column":4},"end":{"line":190,"column":17}},"46":{"start":{"line":195,"column":3},"end":{"line":195,"column":25}},"47":{"start":{"line":214,"column":3},"end":{"line":214,"column":46}},"48":{"start":{"line":215,"column":3},"end":{"line":215,"column":19}},"49":{"start":{"line":216,"column":3},"end":{"line":216,"column":17}},"50":{"start":{"line":218,"column":3},"end":{"line":276,"column":4}},"51":{"start":{"line":219,"column":4},"end":{"line":275,"column":7}},"52":{"start":{"line":220,"column":5},"end":{"line":220,"column":13}},"53":{"start":{"line":221,"column":5},"end":{"line":221,"column":17}},"54":{"start":{"line":225,"column":5},"end":{"line":235,"column":7}},"55":{"start":{"line":226,"column":6},"end":{"line":226,"column":25}},"56":{"start":{"line":228,"column":6},"end":{"line":228,"column":34}},"57":{"start":{"line":230,"column":6},"end":{"line":232,"column":8}},"58":{"start":{"line":231,"column":7},"end":{"line":231,"column":18}},"59":{"start":{"line":234,"column":6},"end":{"line":234,"column":17}},"60":{"start":{"line":237,"column":5},"end":{"line":237,"column":69}},"61":{"start":{"line":239,"column":5},"end":{"line":265,"column":6}},"62":{"start":{"line":242,"column":6},"end":{"line":250,"column":7}},"63":{"start":{"line":243,"column":7},"end":{"line":245,"column":19}},"64":{"start":{"line":244,"column":8},"end":{"line":244,"column":77}},"65":{"start":{"line":247,"column":7},"end":{"line":249,"column":10}},"66":{"start":{"line":248,"column":8},"end":{"line":248,"column":37}},"67":{"start":{"line":253,"column":6},"end":{"line":262,"column":7}},"68":{"start":{"line":254,"column":7},"end":{"line":261,"column":9}},"69":{"start":{"line":256,"column":9},"end":{"line":256,"column":28}},"70":{"start":{"line":259,"column":9},"end":{"line":259,"column":27}},"71":{"start":{"line":264,"column":6},"end":{"line":264,"column":32}},"72":{"start":{"line":267,"column":5},"end":{"line":267,"column":26}},"73":{"start":{"line":270,"column":5},"end":{"line":270,"column":29}},"74":{"start":{"line":272,"column":5},"end":{"line":274,"column":6}},"75":{"start":{"line":273,"column":6},"end":{"line":273,"column":37}},"76":{"start":{"line":278,"column":3},"end":{"line":281,"column":4}},"77":{"start":{"line":279,"column":4},"end":{"line":279,"column":46}},"78":{"start":{"line":280,"column":4},"end":{"line":280,"column":30}},"79":{"start":{"line":283,"column":3},"end":{"line":291,"column":4}},"80":{"start":{"line":284,"column":4},"end":{"line":290,"column":5}},"81":{"start":{"line":285,"column":5},"end":{"line":285,"column":85}},"82":{"start":{"line":286,"column":5},"end":{"line":286,"column":62}},"83":{"start":{"line":289,"column":5},"end":{"line":289,"column":30}},"84":{"start":{"line":293,"column":3},"end":{"line":298,"column":4}},"85":{"start":{"line":294,"column":4},"end":{"line":294,"column":23}},"86":{"start":{"line":295,"column":4},"end":{"line":297,"column":7}},"87":{"start":{"line":296,"column":5},"end":{"line":296,"column":17}},"88":{"start":{"line":300,"column":3},"end":{"line":357,"column":4}},"89":{"start":{"line":303,"column":4},"end":{"line":303,"column":65}},"90":{"start":{"line":306,"column":4},"end":{"line":306,"column":24}},"91":{"start":{"line":307,"column":4},"end":{"line":307,"column":21}},"92":{"start":{"line":309,"column":4},"end":{"line":312,"column":35}},"93":{"start":{"line":310,"column":5},"end":{"line":310,"column":36}},"94":{"start":{"line":314,"column":4},"end":{"line":356,"column":7}},"95":{"start":{"line":315,"column":5},"end":{"line":315,"column":17}},"96":{"start":{"line":316,"column":5},"end":{"line":316,"column":20}},"97":{"start":{"line":318,"column":5},"end":{"line":328,"column":8}},"98":{"start":{"line":319,"column":6},"end":{"line":319,"column":46}},"99":{"start":{"line":320,"column":6},"end":{"line":326,"column":7}},"100":{"start":{"line":321,"column":7},"end":{"line":321,"column":30}},"101":{"start":{"line":323,"column":7},"end":{"line":325,"column":10}},"102":{"start":{"line":324,"column":8},"end":{"line":324,"column":21}},"103":{"start":{"line":327,"column":6},"end":{"line":327,"column":19}},"104":{"start":{"line":330,"column":5},"end":{"line":338,"column":6}},"105":{"start":{"line":331,"column":6},"end":{"line":337,"column":7}},"106":{"start":{"line":332,"column":7},"end":{"line":332,"column":40}},"107":{"start":{"line":333,"column":7},"end":{"line":333,"column":14}},"108":{"start":{"line":336,"column":7},"end":{"line":336,"column":21}},"109":{"start":{"line":340,"column":5},"end":{"line":353,"column":6}},"110":{"start":{"line":341,"column":6},"end":{"line":341,"column":35}},"111":{"start":{"line":343,"column":6},"end":{"line":346,"column":7}},"112":{"start":{"line":344,"column":7},"end":{"line":344,"column":51}},"113":{"start":{"line":345,"column":7},"end":{"line":345,"column":14}},"114":{"start":{"line":348,"column":6},"end":{"line":350,"column":7}},"115":{"start":{"line":349,"column":7},"end":{"line":349,"column":56}},"116":{"start":{"line":352,"column":6},"end":{"line":352,"column":55}},"117":{"start":{"line":355,"column":5},"end":{"line":355,"column":12}},"118":{"start":{"line":359,"column":3},"end":{"line":459,"column":4}},"119":{"start":{"line":360,"column":4},"end":{"line":360,"column":14}},"120":{"start":{"line":361,"column":4},"end":{"line":361,"column":27}},"121":{"start":{"line":363,"column":4},"end":{"line":458,"column":7}},"122":{"start":{"line":364,"column":5},"end":{"line":364,"column":17}},"123":{"start":{"line":365,"column":5},"end":{"line":365,"column":20}},"124":{"start":{"line":367,"column":5},"end":{"line":377,"column":8}},"125":{"start":{"line":368,"column":6},"end":{"line":368,"column":19}},"126":{"start":{"line":369,"column":6},"end":{"line":375,"column":7}},"127":{"start":{"line":370,"column":7},"end":{"line":370,"column":30}},"128":{"start":{"line":372,"column":7},"end":{"line":374,"column":10}},"129":{"start":{"line":373,"column":8},"end":{"line":373,"column":21}},"130":{"start":{"line":376,"column":6},"end":{"line":376,"column":19}},"131":{"start":{"line":379,"column":5},"end":{"line":455,"column":6}},"132":{"start":{"line":380,"column":6},"end":{"line":380,"column":28}},"133":{"start":{"line":382,"column":6},"end":{"line":385,"column":7}},"134":{"start":{"line":383,"column":7},"end":{"line":383,"column":51}},"135":{"start":{"line":384,"column":7},"end":{"line":384,"column":14}},"136":{"start":{"line":387,"column":6},"end":{"line":393,"column":7}},"137":{"start":{"line":390,"column":7},"end":{"line":392,"column":8}},"138":{"start":{"line":391,"column":8},"end":{"line":391,"column":33}},"139":{"start":{"line":395,"column":6},"end":{"line":404,"column":7}},"140":{"start":{"line":398,"column":7},"end":{"line":403,"column":8}},"141":{"start":{"line":399,"column":8},"end":{"line":399,"column":51}},"142":{"start":{"line":402,"column":8},"end":{"line":402,"column":40}},"143":{"start":{"line":408,"column":6},"end":{"line":410,"column":7}},"144":{"start":{"line":409,"column":7},"end":{"line":409,"column":35}},"145":{"start":{"line":413,"column":6},"end":{"line":436,"column":7}},"146":{"start":{"line":414,"column":7},"end":{"line":414,"column":32}},"147":{"start":{"line":418,"column":7},"end":{"line":420,"column":8}},"148":{"start":{"line":419,"column":8},"end":{"line":419,"column":30}},"149":{"start":{"line":422,"column":7},"end":{"line":425,"column":8}},"150":{"start":{"line":423,"column":8},"end":{"line":423,"column":58}},"151":{"start":{"line":424,"column":8},"end":{"line":424,"column":15}},"152":{"start":{"line":427,"column":7},"end":{"line":435,"column":11}},"153":{"start":{"line":430,"column":9},"end":{"line":430,"column":52}},"154":{"start":{"line":433,"column":9},"end":{"line":433,"column":42}},"155":{"start":{"line":434,"column":9},"end":{"line":434,"column":41}},"156":{"start":{"line":438,"column":6},"end":{"line":454,"column":9}},"157":{"start":{"line":439,"column":7},"end":{"line":441,"column":8}},"158":{"start":{"line":440,"column":8},"end":{"line":440,"column":73}},"159":{"start":{"line":445,"column":7},"end":{"line":451,"column":8}},"160":{"start":{"line":446,"column":8},"end":{"line":446,"column":26}},"161":{"start":{"line":449,"column":12},"end":{"line":451,"column":8}},"162":{"start":{"line":450,"column":8},"end":{"line":450,"column":26}},"163":{"start":{"line":453,"column":7},"end":{"line":453,"column":14}},"164":{"start":{"line":457,"column":5},"end":{"line":457,"column":12}},"165":{"start":{"line":461,"column":3},"end":{"line":463,"column":4}},"166":{"start":{"line":462,"column":4},"end":{"line":462,"column":45}},"167":{"start":{"line":465,"column":3},"end":{"line":469,"column":4}},"168":{"start":{"line":466,"column":4},"end":{"line":468,"column":7}},"169":{"start":{"line":467,"column":5},"end":{"line":467,"column":28}},"170":{"start":{"line":471,"column":3},"end":{"line":473,"column":4}},"171":{"start":{"line":472,"column":4},"end":{"line":472,"column":48}},"172":{"start":{"line":478,"column":3},"end":{"line":478,"column":40}},"173":{"start":{"line":480,"column":3},"end":{"line":499,"column":6}},"174":{"start":{"line":481,"column":4},"end":{"line":486,"column":5}},"175":{"start":{"line":482,"column":5},"end":{"line":482,"column":32}},"176":{"start":{"line":485,"column":5},"end":{"line":485,"column":32}},"177":{"start":{"line":490,"column":4},"end":{"line":495,"column":5}},"178":{"start":{"line":491,"column":5},"end":{"line":491,"column":33}},"179":{"start":{"line":494,"column":5},"end":{"line":494,"column":33}},"180":{"start":{"line":498,"column":4},"end":{"line":498,"column":31}},"181":{"start":{"line":509,"column":3},"end":{"line":509,"column":45}},"182":{"start":{"line":511,"column":3},"end":{"line":511,"column":19}},"183":{"start":{"line":515,"column":3},"end":{"line":538,"column":5}},"184":{"start":{"line":522,"column":5},"end":{"line":522,"column":26}},"185":{"start":{"line":542,"column":1},"end":{"line":542,"column":14}}},"branchMap":{"1":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":22}},{"start":{"line":12,"column":26},"end":{"line":12,"column":69}}]},"2":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":10},"end":{"line":46,"column":20}},{"start":{"line":46,"column":25},"end":{"line":46,"column":36}},{"start":{"line":46,"column":40},"end":{"line":46,"column":56}}]},"3":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":10},"end":{"line":57,"column":20}},{"start":{"line":57,"column":25},"end":{"line":57,"column":36}},{"start":{"line":57,"column":40},"end":{"line":57,"column":56}},{"start":{"line":57,"column":61},"end":{"line":57,"column":65}}]},"4":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":23}},{"start":{"line":72,"column":27},"end":{"line":72,"column":52}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":3},"end":{"line":83,"column":3}},{"start":{"line":83,"column":3},"end":{"line":83,"column":3}}]},"6":{"line":94,"type":"cond-expr","locations":[{"start":{"line":94,"column":48},"end":{"line":94,"column":66}},{"start":{"line":94,"column":69},"end":{"line":94,"column":81}}]},"7":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":11},"end":{"line":94,"column":22}},{"start":{"line":94,"column":26},"end":{"line":94,"column":44}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":3},"end":{"line":98,"column":3}},{"start":{"line":98,"column":3},"end":{"line":98,"column":3}}]},"9":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":10},"end":{"line":109,"column":31}},{"start":{"line":109,"column":36},"end":{"line":109,"column":47}},{"start":{"line":109,"column":51},"end":{"line":109,"column":78}}]},"10":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":3},"end":{"line":113,"column":3}},{"start":{"line":113,"column":3},"end":{"line":113,"column":3}}]},"11":{"line":124,"type":"cond-expr","locations":[{"start":{"line":124,"column":24},"end":{"line":124,"column":45}},{"start":{"line":125,"column":4},"end":{"line":127,"column":8}}]},"12":{"line":125,"type":"cond-expr","locations":[{"start":{"line":125,"column":22},"end":{"line":125,"column":37}},{"start":{"line":126,"column":4},"end":{"line":127,"column":8}}]},"13":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":18},"end":{"line":126,"column":47}},{"start":{"line":127,"column":4},"end":{"line":127,"column":8}}]},"14":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":24},"end":{"line":143,"column":59}},{"start":{"line":143,"column":62},"end":{"line":143,"column":74}}]},"15":{"line":154,"type":"cond-expr","locations":[{"start":{"line":155,"column":5},"end":{"line":155,"column":46}},{"start":{"line":156,"column":6},"end":{"line":156,"column":82}}]},"16":{"line":156,"type":"cond-expr","locations":[{"start":{"line":156,"column":47},"end":{"line":156,"column":61}},{"start":{"line":156,"column":64},"end":{"line":156,"column":82}}]},"17":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":6},"end":{"line":156,"column":20}},{"start":{"line":156,"column":24},"end":{"line":156,"column":44}}]},"18":{"line":167,"type":"cond-expr","locations":[{"start":{"line":168,"column":5},"end":{"line":168,"column":47}},{"start":{"line":169,"column":6},"end":{"line":169,"column":66}}]},"19":{"line":169,"type":"cond-expr","locations":[{"start":{"line":169,"column":29},"end":{"line":169,"column":48}},{"start":{"line":169,"column":51},"end":{"line":169,"column":66}}]},"20":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":3},"end":{"line":183,"column":3}},{"start":{"line":183,"column":3},"end":{"line":183,"column":3}}]},"21":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":186,"column":8}},{"start":{"line":186,"column":8},"end":{"line":186,"column":8}}]},"22":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":23},"end":{"line":237,"column":34}},{"start":{"line":237,"column":38},"end":{"line":237,"column":68}}]},"23":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":5},"end":{"line":239,"column":5}},{"start":{"line":239,"column":5},"end":{"line":239,"column":5}}]},"24":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":6},"end":{"line":242,"column":6}},{"start":{"line":242,"column":6},"end":{"line":242,"column":6}}]},"25":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":13}},{"start":{"line":248,"column":17},"end":{"line":248,"column":36}}]},"26":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":6},"end":{"line":253,"column":6}},{"start":{"line":253,"column":6},"end":{"line":253,"column":6}}]},"27":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":10},"end":{"line":253,"column":21}},{"start":{"line":253,"column":25},"end":{"line":253,"column":41}}]},"28":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":5},"end":{"line":272,"column":5}},{"start":{"line":272,"column":5},"end":{"line":272,"column":5}}]},"29":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"30":{"line":303,"type":"cond-expr","locations":[{"start":{"line":303,"column":46},"end":{"line":303,"column":52}},{"start":{"line":303,"column":55},"end":{"line":303,"column":64}}]},"31":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":6},"end":{"line":320,"column":6}},{"start":{"line":320,"column":6},"end":{"line":320,"column":6}}]},"32":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":6},"end":{"line":331,"column":6}},{"start":{"line":331,"column":6},"end":{"line":331,"column":6}}]},"33":{"line":332,"type":"binary-expr","locations":[{"start":{"line":332,"column":20},"end":{"line":332,"column":30}},{"start":{"line":332,"column":34},"end":{"line":332,"column":39}}]},"34":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":6},"end":{"line":343,"column":6}},{"start":{"line":343,"column":6},"end":{"line":343,"column":6}}]},"35":{"line":344,"type":"cond-expr","locations":[{"start":{"line":344,"column":20},"end":{"line":344,"column":38}},{"start":{"line":344,"column":41},"end":{"line":344,"column":50}}]},"36":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":6},"end":{"line":369,"column":6}},{"start":{"line":369,"column":6},"end":{"line":369,"column":6}}]},"37":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":6},"end":{"line":382,"column":6}},{"start":{"line":382,"column":6},"end":{"line":382,"column":6}}]},"38":{"line":383,"type":"cond-expr","locations":[{"start":{"line":383,"column":20},"end":{"line":383,"column":38}},{"start":{"line":383,"column":41},"end":{"line":383,"column":50}}]},"39":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":7},"end":{"line":390,"column":7}},{"start":{"line":390,"column":7},"end":{"line":390,"column":7}}]},"40":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":6},"end":{"line":408,"column":6}},{"start":{"line":408,"column":6},"end":{"line":408,"column":6}}]},"41":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":6},"end":{"line":413,"column":6}},{"start":{"line":413,"column":6},"end":{"line":413,"column":6}}]},"42":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":7},"end":{"line":418,"column":7}},{"start":{"line":418,"column":7},"end":{"line":418,"column":7}}]},"43":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":7},"end":{"line":422,"column":7}},{"start":{"line":422,"column":7},"end":{"line":422,"column":7}}]},"44":{"line":433,"type":"binary-expr","locations":[{"start":{"line":433,"column":22},"end":{"line":433,"column":32}},{"start":{"line":433,"column":36},"end":{"line":433,"column":41}}]},"45":{"line":440,"type":"cond-expr","locations":[{"start":{"line":440,"column":46},"end":{"line":440,"column":58}},{"start":{"line":440,"column":61},"end":{"line":440,"column":72}}]},"46":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":7},"end":{"line":445,"column":7}},{"start":{"line":445,"column":7},"end":{"line":445,"column":7}}]},"47":{"line":445,"type":"binary-expr","locations":[{"start":{"line":445,"column":11},"end":{"line":445,"column":21}},{"start":{"line":445,"column":25},"end":{"line":445,"column":53}}]},"48":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":12},"end":{"line":449,"column":12}},{"start":{"line":449,"column":12},"end":{"line":449,"column":12}}]},"49":{"line":449,"type":"binary-expr","locations":[{"start":{"line":449,"column":16},"end":{"line":449,"column":26}},{"start":{"line":449,"column":30},"end":{"line":449,"column":39}}]},"50":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":4},"end":{"line":481,"column":4}},{"start":{"line":481,"column":4},"end":{"line":481,"column":4}}]},"51":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":4},"end":{"line":490,"column":4}},{"start":{"line":490,"column":4},"end":{"line":490,"column":4}}]},"52":{"line":509,"type":"binary-expr","locations":[{"start":{"line":509,"column":18},"end":{"line":509,"column":25}},{"start":{"line":509,"column":29},"end":{"line":509,"column":44}}]},"53":{"line":529,"type":"cond-expr","locations":[{"start":{"line":529,"column":24},"end":{"line":537,"column":5}},{"start":{"line":537,"column":8},"end":{"line":537,"column":12}}]},"54":{"line":536,"type":"cond-expr","locations":[{"start":{"line":536,"column":52},"end":{"line":536,"column":61}},{"start":{"line":536,"column":64},"end":{"line":536,"column":86}}]}},"code":["define([","\t'dojo/Promise',","\t'./Test',","\t'./util'","], function (Promise, Test, util) {","\tfunction Suite(kwArgs) {","\t\tthis.tests = [];","\t\tfor (var k in kwArgs) {","\t\t\tthis[k] = kwArgs[k];","\t\t}","","\t\tthis.reporterManager && this.reporterManager.emit('newSuite', this);","\t}","","\t// BAIL_REASON needs to be a string so that Intern can tell when a remote has bailed during unit tests so that it","\t// can skip functional tests.","\tvar BAIL_REASON = 'bailed';","","\tSuite.prototype = {","\t\tconstructor: Suite,","\t\tname: null,","\t\ttests: [],","\t\tparent: null,","\t\tsetup: null,","\t\tbeforeEach: null,","\t\tafterEach: null,","\t\tteardown: null,","\t\terror: null,","\t\ttimeElapsed: null,","\t\t_bail: null,","\t\t_grep: null,","\t\t_remote: null,","\t\t_environmentType: null,","\t\t_reporterManager: null,","","\t\t/**","\t\t * If true, the suite will only publish its start topic after the setup callback has finished,","\t\t * and will publish its end topic before the teardown callback has finished.","\t\t */","\t\tpublishAfterSetup: false,","","\t\t/**","\t\t * A flag used to indicate whether a test run shoudl stop after a failed test.","\t\t */","\t\tget bail() {","\t\t\treturn this._bail || (this.parent && this.parent.bail);","\t\t},","","\t\tset bail(value) {","\t\t\tthis._bail = value;","\t\t},","","\t\t/**","\t\t * A regular expression used to filter, by test ID, which tests are run.","\t\t */","\t\tget grep() {","\t\t\treturn this._grep || (this.parent && this.parent.grep) || /.*/;","\t\t},","","\t\tset grep(value) {","\t\t\tthis._grep = value;","\t\t},","","\t\t/**","\t\t * The unique identifier of the suite, assuming all combinations of suite + test are unique.","\t\t */","\t\tget id() {","\t\t\tvar name = [];","\t\t\tvar object = this;","","\t\t\tdo {","\t\t\t\tobject.name != null && name.unshift(object.name);","\t\t\t} while ((object = object.parent));","","\t\t\treturn name.join(' - ');","\t\t},","","\t\t/**","\t\t * The unique identifier of the suite's parent.","\t\t */","\t\tget parentId() {","\t\t\tvar parent = this.parent;","\t\t\tif (parent) {","\t\t\t\treturn parent.id;","\t\t\t}","\t\t},","","\t\t/**","\t\t * The WebDriver interface for driving a remote environment. This value is only guaranteed to exist from the","\t\t * setup/beforeEach/afterEach/teardown and test methods, since environments are not instantiated until they are","\t\t * actually ready to be tested against.","\t\t */","\t\tget remote() {","\t\t\treturn (this.parent && this.parent.remote) ? this.parent.remote : this._remote;","\t\t},","","\t\tset remote(value) {","\t\t\tif (this._remote) {","\t\t\t\tthrow new Error('remote may only be set once per suite');","\t\t\t}","","\t\t\tObject.defineProperty(this, '_remote', { value: value });","\t\t},","","\t\t/**","\t\t * The reporter manager that should receive lifecycle events from the Suite.","\t\t */","\t\tget reporterManager() {","\t\t\treturn this._reporterManager || (this.parent && this.parent.reporterManager);","\t\t},","","\t\tset reporterManager(value) {","\t\t\tif (this._reporterManager) {","\t\t\t\tthrow new Error('reporterManager may only be set once per suite');","\t\t\t}","","\t\t\tObject.defineProperty(this, '_reporterManager', { value: value });","\t\t},","","\t\t/**","\t\t * The sessionId of the environment in which the suite executed.","\t\t */","\t\tget sessionId() {","\t\t\treturn this.parent ? this.parent.sessionId :","\t\t\t\tthis._sessionId ? this._sessionId :","\t\t\t\tthis.remote ? this.remote.session.sessionId :","\t\t\t\tnull;","\t\t},","","\t\t/**","\t\t * The sessionId may need to be overridden for suites proxied from client.js.","\t\t */","\t\tset sessionId(value) {","\t\t\tObject.defineProperty(this, '_sessionId', { value: value });","\t\t},","","\t\t/**","\t\t * The total number of tests in this suite and any sub-suites. To get only the number of tests for this suite,","\t\t * look at `this.tests.length`.","\t\t */","\t\tget numTests() {","\t\t\tfunction reduce(numTests, test) {","\t\t\t\treturn test.tests ? test.tests.reduce(reduce, numTests) : numTests + 1;","\t\t\t}","","\t\t\treturn this.tests.reduce(reduce, 0);","\t\t},","","\t\t/**","\t\t * The total number of tests in this test suite and any sub-suites that have failed.","\t\t */","\t\tget numFailedTests() {","\t\t\tfunction reduce(numFailedTests, test) {","\t\t\t\treturn test.tests ?","\t\t\t\t\ttest.tests.reduce(reduce, numFailedTests) :","\t\t\t\t\t(test.hasPassed || test.skipped != null ? numFailedTests : numFailedTests + 1);","\t\t\t}","","\t\t\treturn this.tests.reduce(reduce, 0);","\t\t},","","\t\t/**","\t\t * The total number of tests in this test suite and any sub-suites that were skipped.","\t\t */","\t\tget numSkippedTests() {","\t\t\tfunction reduce(numSkippedTests, test) {","\t\t\t\treturn test.tests ?","\t\t\t\t\ttest.tests.reduce(reduce, numSkippedTests) :","\t\t\t\t\t(test.skipped != null ? numSkippedTests + 1 : numSkippedTests);","\t\t\t}","","\t\t\treturn this.tests.reduce(reduce, 0);","\t\t},","","\t\t/**","\t\t * Whether or not this suite has a parent (for parity with serialized Suites).","\t\t */","\t\tget hasParent() {","\t\t\treturn Boolean(this.parent);","\t\t},","","\t\tget timeout() {","\t\t\tif (this._timeout != null) {","\t\t\t\treturn this._timeout;","\t\t\t}","\t\t\telse if (this.parent) {","\t\t\t\treturn this.parent.timeout;","\t\t\t}","\t\t\telse {","\t\t\t\treturn 30000;","\t\t\t}","\t\t},","","\t\tset timeout(value) {","\t\t\tthis._timeout = value;","\t\t},","","\t\t/**","\t\t * Runs test suite in order:","\t\t *","\t\t * * setup","\t\t * * for each test:","\t\t *   * beforeEach","\t\t *   * test","\t\t *   * afterEach","\t\t * * teardown","\t\t *","\t\t * If setup, beforeEach, afterEach, or teardown throw, the suite itself will be marked as failed","\t\t * and no further tests in the suite will be executed.","\t\t *","\t\t * @returns {module:dojo/Promise}","\t\t */","\t\trun: function () {","\t\t\tvar reporterManager = this.reporterManager;","\t\t\tvar self = this;","\t\t\tvar startTime;","","\t\t\tfunction runLifecycleMethod(suite, name, args) {","\t\t\t\treturn new Promise(function (resolve) {","\t\t\t\t\tvar dfd;","\t\t\t\t\tvar timeout;","","\t\t\t\t\t// Provide a new Suite#async method for each call of a lifecycle method since there's no concept of","\t\t\t\t\t// a Suite-wide async deferred as there is for Tests.","\t\t\t\t\tsuite.async = function (_timeout) {","\t\t\t\t\t\ttimeout = _timeout;","","\t\t\t\t\t\tdfd = util.createDeferred();","","\t\t\t\t\t\tsuite.async = function () {","\t\t\t\t\t\t\treturn dfd;","\t\t\t\t\t\t};","","\t\t\t\t\t\treturn dfd;","\t\t\t\t\t};","","\t\t\t\t\tvar returnValue = suite[name] && suite[name].apply(suite, args);","","\t\t\t\t\tif (dfd) {","\t\t\t\t\t\t// If a timeout was set, async was called, so we should use the dfd created by the call to","\t\t\t\t\t\t// manage the timeout.","\t\t\t\t\t\tif (timeout) {","\t\t\t\t\t\t\tvar timer = setTimeout(function () {","\t\t\t\t\t\t\t\tdfd.reject(new Error('Timeout reached on ' + suite.id + '#' + name));","\t\t\t\t\t\t\t}, timeout);","","\t\t\t\t\t\t\tdfd.promise.finally(function () {","\t\t\t\t\t\t\t\ttimer && clearTimeout(timer);","\t\t\t\t\t\t\t});","\t\t\t\t\t\t}","","\t\t\t\t\t\t// If the return value looks like a promise, resolve the dfd if the return value resolves","\t\t\t\t\t\tif (returnValue && returnValue.then) {","\t\t\t\t\t\t\treturnValue.then(","\t\t\t\t\t\t\t\tfunction (value) {","\t\t\t\t\t\t\t\t\tdfd.resolve(value);","\t\t\t\t\t\t\t\t},","\t\t\t\t\t\t\t\tfunction (error) {","\t\t\t\t\t\t\t\t\tdfd.reject(error);","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t);","\t\t\t\t\t\t}","","\t\t\t\t\t\treturnValue = dfd.promise;","\t\t\t\t\t}","","\t\t\t\t\tresolve(returnValue);","\t\t\t\t}).catch(function (error) {","\t\t\t\t\t// Remove the async method since it should only be available within a lifecycle function call","\t\t\t\t\tsuite.async = undefined;","","\t\t\t\t\tif (error !== Test.SKIP) {","\t\t\t\t\t\treturn reportSuiteError(error);","\t\t\t\t\t}","\t\t\t\t});","\t\t\t}","","\t\t\tfunction end() {","\t\t\t\tself.timeElapsed = Date.now() - startTime;","\t\t\t\treturn report('suiteEnd');","\t\t\t}","","\t\t\tfunction report(eventName) {","\t\t\t\tif (reporterManager) {","\t\t\t\t\tvar args = [ eventName, self ].concat(Array.prototype.slice.call(arguments, 1));","\t\t\t\t\treturn reporterManager.emit.apply(reporterManager, args);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\treturn Promise.resolve();","\t\t\t\t}","\t\t\t}","","\t\t\tfunction reportSuiteError(error) {","\t\t\t\tself.error = error;","\t\t\t\treturn report('suiteError', error).then(function () {","\t\t\t\t\tthrow error;","\t\t\t\t});","\t\t\t}","","\t\t\tfunction runTestLifecycle(name, test) {","\t\t\t\t// beforeEach executes in order parent -> child;","\t\t\t\t// afterEach executes in order child -> parent","\t\t\t\tvar orderMethod = name === 'beforeEach' ? 'push' : 'unshift';","","\t\t\t\t// LIFO queue","\t\t\t\tvar suiteQueue = [];","\t\t\t\tvar suite = self;","","\t\t\t\tdo {","\t\t\t\t\tsuiteQueue[orderMethod](suite);","\t\t\t\t}","\t\t\t\twhile ((suite = suite.parent));","","\t\t\t\treturn new Promise(function (resolve, reject, progress, setCanceler) {","\t\t\t\t\tvar current;","\t\t\t\t\tvar firstError;","","\t\t\t\t\tsetCanceler(function (reason) {","\t\t\t\t\t\tsuiteQueue.splice(0, suiteQueue.length);","\t\t\t\t\t\tif (current) {","\t\t\t\t\t\t\tcurrent.cancel(reason);","\t\t\t\t\t\t\t// Wait for the current lifecycle to finish, then reject","\t\t\t\t\t\t\treturn current.finally(function () {","\t\t\t\t\t\t\t\tthrow reason;","\t\t\t\t\t\t\t});","\t\t\t\t\t\t}","\t\t\t\t\t\tthrow reason;","\t\t\t\t\t});","","\t\t\t\t\tfunction handleError(error) {","\t\t\t\t\t\tif (name === 'afterEach') {","\t\t\t\t\t\t\tfirstError = firstError || error;","\t\t\t\t\t\t\tnext();","\t\t\t\t\t\t}","\t\t\t\t\t\telse {","\t\t\t\t\t\t\treject(error);","\t\t\t\t\t\t}","\t\t\t\t\t}","","\t\t\t\t\tfunction next() {","\t\t\t\t\t\tvar suite = suiteQueue.pop();","","\t\t\t\t\t\tif (!suite) {","\t\t\t\t\t\t\tfirstError ? reject(firstError) : resolve();","\t\t\t\t\t\t\treturn;","\t\t\t\t\t\t}","","\t\t\t\t\t\tfunction runWithCatch() {","\t\t\t\t\t\t\treturn runLifecycleMethod(suite, name, [ test ]);","\t\t\t\t\t\t}","","\t\t\t\t\t\tcurrent = runWithCatch().then(next, handleError);","\t\t\t\t\t}","","\t\t\t\t\tnext();","\t\t\t\t});","\t\t\t}","","\t\t\tfunction runTests() {","\t\t\t\tvar i = 0;","\t\t\t\tvar tests = self.tests;","","\t\t\t\treturn new Promise(function (resolve, reject, progress, setCanceler) {","\t\t\t\t\tvar current;","\t\t\t\t\tvar firstError;","","\t\t\t\t\tsetCanceler(function (reason) {","\t\t\t\t\t\ti = Infinity;","\t\t\t\t\t\tif (current) {","\t\t\t\t\t\t\tcurrent.cancel(reason);","\t\t\t\t\t\t\t// Wait for the current test to finish, then reject","\t\t\t\t\t\t\treturn current.finally(function () {","\t\t\t\t\t\t\t\tthrow reason;","\t\t\t\t\t\t\t});","\t\t\t\t\t\t}","\t\t\t\t\t\tthrow reason;","\t\t\t\t\t});","","\t\t\t\t\tfunction next() {","\t\t\t\t\t\tvar test = tests[i++];","","\t\t\t\t\t\tif (!test) {","\t\t\t\t\t\t\tfirstError ? reject(firstError) : resolve();","\t\t\t\t\t\t\treturn;","\t\t\t\t\t\t}","","\t\t\t\t\t\tfunction reportAndContinue(error) {","\t\t\t\t\t\t\t// An error may be associated with a deeper test already, in which case we do not","\t\t\t\t\t\t\t// want to reassociate it with a more generic parent","\t\t\t\t\t\t\tif (!error.relatedTest) {","\t\t\t\t\t\t\t\terror.relatedTest = test;","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","","\t\t\t\t\t\tfunction runWithCatch() {","\t\t\t\t\t\t\t// Errors raised when running child tests should be reported but should not cause","\t\t\t\t\t\t\t// this suite’s run to reject, since this suite itself has not failed.","\t\t\t\t\t\t\ttry {","\t\t\t\t\t\t\t\treturn test.run().catch(reportAndContinue);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\tcatch (error) {","\t\t\t\t\t\t\t\treturn reportAndContinue(error);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","","\t\t\t\t\t\t// If the suite will be skipped, mark the current test as skipped. This will skip both","\t\t\t\t\t\t// individual tests and nested suites.","\t\t\t\t\t\tif (self.skipped != null) {","\t\t\t\t\t\t\ttest.skipped = self.skipped;","\t\t\t\t\t\t}","","\t\t\t\t\t\t// test is a suite","\t\t\t\t\t\tif (test.tests) {","\t\t\t\t\t\t\tcurrent = runWithCatch();","\t\t\t\t\t\t}","\t\t\t\t\t\t// test is a single test","\t\t\t\t\t\telse {","\t\t\t\t\t\t\tif (!self.grep.test(test.id)) {","\t\t\t\t\t\t\t\ttest.skipped = 'grep';","\t\t\t\t\t\t\t}","","\t\t\t\t\t\t\tif (test.skipped != null) {","\t\t\t\t\t\t\t\treporterManager.emit('testSkip', test).then(next);","\t\t\t\t\t\t\t\treturn;","\t\t\t\t\t\t\t}","","\t\t\t\t\t\t\tcurrent = runTestLifecycle('beforeEach', test)","\t\t\t\t\t\t\t\t.then(runWithCatch)","\t\t\t\t\t\t\t\t.finally(function () {","\t\t\t\t\t\t\t\t\treturn runTestLifecycle('afterEach', test);","\t\t\t\t\t\t\t\t})","\t\t\t\t\t\t\t\t.catch(function (error) {","\t\t\t\t\t\t\t\t\tfirstError = firstError || error;","\t\t\t\t\t\t\t\t\treturn reportAndContinue(error);","\t\t\t\t\t\t\t\t});","\t\t\t\t\t\t}","","\t\t\t\t\t\tcurrent.then(function () {","\t\t\t\t\t\t\tfunction skipRestOfSuite() {","\t\t\t\t\t\t\t\tself.skipped = self.skipped != null ? self.skipped : BAIL_REASON;","\t\t\t\t\t\t\t}","","\t\t\t\t\t\t\t// If the test was a suite and the suite was skipped due to bailing, skip the rest of this","\t\t\t\t\t\t\t// suite","\t\t\t\t\t\t\tif (test.tests && test.skipped === BAIL_REASON) {","\t\t\t\t\t\t\t\tskipRestOfSuite();","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t// If the test errored and bail mode is enabled, skip the rest of this suite","\t\t\t\t\t\t\telse if (test.error && self.bail) {","\t\t\t\t\t\t\t\tskipRestOfSuite();","\t\t\t\t\t\t\t}","","\t\t\t\t\t\t\tnext();","\t\t\t\t\t\t});","\t\t\t\t\t}","","\t\t\t\t\tnext();","\t\t\t\t});","\t\t\t}","","\t\t\tfunction setup() {","\t\t\t\treturn runLifecycleMethod(self, 'setup');","\t\t\t}","","\t\t\tfunction start() {","\t\t\t\treturn report('suiteStart').then(function () {","\t\t\t\t\tstartTime = Date.now();","\t\t\t\t});","\t\t\t}","","\t\t\tfunction teardown() {","\t\t\t\treturn runLifecycleMethod(self, 'teardown');","\t\t\t}","","\t\t\t// Reset some state in case someone tries to re-run the same suite","\t\t\t// TODO: Cancel any previous outstanding suite run","\t\t\t// TODO: Test","\t\t\tthis.error = this.timeElapsed = null;","","\t\t\treturn (function () {","\t\t\t\tif (!self.publishAfterSetup) {","\t\t\t\t\treturn start().then(setup);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\treturn setup().then(start);","\t\t\t\t}","\t\t\t})()","\t\t\t.then(runTests)","\t\t\t.finally(function () {","\t\t\t\tif (self.publishAfterSetup) {","\t\t\t\t\treturn end().then(teardown);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\treturn teardown().then(end);","\t\t\t\t}","\t\t\t})","\t\t\t.then(function () {","\t\t\t\treturn self.numFailedTests;","\t\t\t});","\t\t},","","\t\t/**","\t\t * Skips this suite.","\t\t *","\t\t * @param {String} message","\t\t * If provided, will be stored in this suite's `skipped` property.","\t\t */","\t\tskip: function (message) {","\t\t\tthis.skipped = message || 'suite skipped';","\t\t\t// Use the SKIP constant from Test so that calling Suite#skip from a test won't fail the test.","\t\t\tthrow Test.SKIP;","\t\t},","","\t\ttoJSON: function () {","\t\t\treturn {","\t\t\t\tname: this.name,","\t\t\t\tid: this.id,","\t\t\t\tparentId: this.parentId,","\t\t\t\tsessionId: this.sessionId,","\t\t\t\thasParent: Boolean(this.parent),","\t\t\t\ttests: this.tests.map(function (test) {","\t\t\t\t\treturn test.toJSON();","\t\t\t\t}),","\t\t\t\ttimeElapsed: this.timeElapsed,","\t\t\t\tnumTests: this.numTests,","\t\t\t\tnumFailedTests: this.numFailedTests,","\t\t\t\tnumSkippedTests: this.numSkippedTests,","\t\t\t\tskipped: this.skipped,","\t\t\t\terror: this.error ? {","\t\t\t\t\tname: this.error.name,","\t\t\t\t\tmessage: this.error.message,","\t\t\t\t\tstack: this.error.stack,","\t\t\t\t\t// relatedTest can be the Suite itself in the case of nested suites (a nested Suite's error is","\t\t\t\t\t// caught by a parent Suite, which assigns the nested Suite as the relatedTest, resulting in","\t\t\t\t\t// nestedSuite.relatedTest === nestedSuite); in that case, don't serialize it","\t\t\t\t\trelatedTest: this.error.relatedTest === this ? undefined : this.error.relatedTest","\t\t\t\t} : null","\t\t\t};","\t\t}","\t};","","\treturn Suite;","});",""],"l":{"1":1,"6":1,"7":0,"8":0,"9":0,"12":0,"17":0,"19":0,"46":0,"50":0,"57":0,"61":0,"68":0,"69":0,"71":0,"72":0,"75":0,"82":0,"83":0,"84":0,"94":0,"98":0,"99":0,"102":0,"109":0,"113":0,"114":0,"117":0,"124":0,"134":0,"142":1,"143":0,"146":0,"153":1,"154":0,"159":0,"166":1,"167":0,"172":0,"179":0,"183":0,"184":0,"186":0,"187":0,"190":0,"195":0,"214":0,"215":0,"216":0,"218":1,"219":0,"220":0,"221":0,"225":0,"226":0,"228":0,"230":0,"231":0,"234":0,"237":0,"239":0,"242":0,"243":0,"244":0,"247":0,"248":0,"253":0,"254":0,"256":0,"259":0,"264":0,"267":0,"270":0,"272":0,"273":0,"278":1,"279":0,"280":0,"283":1,"284":0,"285":0,"286":0,"289":0,"293":1,"294":0,"295":0,"296":0,"300":1,"303":0,"306":0,"307":0,"309":0,"310":0,"314":0,"315":0,"316":0,"318":0,"319":0,"320":0,"321":0,"323":0,"324":0,"327":0,"330":1,"331":0,"332":0,"333":0,"336":0,"340":1,"341":0,"343":0,"344":0,"345":0,"348":1,"349":0,"352":0,"355":0,"359":1,"360":0,"361":0,"363":0,"364":0,"365":0,"367":0,"368":0,"369":0,"370":0,"372":0,"373":0,"376":0,"379":1,"380":0,"382":0,"383":0,"384":0,"387":1,"390":0,"391":0,"395":1,"398":0,"399":0,"402":0,"408":0,"409":0,"413":0,"414":0,"418":0,"419":0,"422":0,"423":0,"424":0,"427":0,"430":0,"433":0,"434":0,"438":0,"439":1,"440":0,"445":0,"446":0,"449":0,"450":0,"453":0,"457":0,"461":1,"462":0,"465":1,"466":0,"467":0,"471":1,"472":0,"478":0,"480":0,"481":0,"482":0,"485":0,"490":0,"491":0,"494":0,"498":0,"509":0,"511":0,"515":0,"522":0,"542":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/util.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/lib/util.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":1,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":1,"220":0,"221":1,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":1,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":1,"325":0,"326":1,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":1,"349":0,"350":0,"351":1,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0,0],"66":[0,0,0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0,0],"78":[0,0],"79":[0,0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0,0],"109":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":3},"end":{"line":28,"column":2}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":26},"end":{"line":29,"column":38}}},"3":{"name":"foo","line":30,"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":17}}},"4":{"name":"serialize","line":45,"loc":{"start":{"line":45,"column":1},"end":{"line":45,"column":28}}},"5":{"name":"writeDate","line":50,"loc":{"start":{"line":50,"column":2},"end":{"line":50,"column":28}}},"6":{"name":"writeObject","line":54,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":31}}},"7":{"name":"(anonymous_7)","line":81,"loc":{"start":{"line":81,"column":14},"end":{"line":81,"column":30}}},"8":{"name":"(anonymous_8)","line":104,"loc":{"start":{"line":104,"column":15},"end":{"line":104,"column":37}}},"9":{"name":"writePrimitive","line":136,"loc":{"start":{"line":136,"column":2},"end":{"line":136,"column":33}}},"10":{"name":"writeString","line":140,"loc":{"start":{"line":140,"column":2},"end":{"line":140,"column":30}}},"11":{"name":"write","line":144,"loc":{"start":{"line":144,"column":2},"end":{"line":144,"column":24}}},"12":{"name":"createDiff","line":181,"loc":{"start":{"line":181,"column":1},"end":{"line":181,"column":39}}},"13":{"name":"(anonymous_13)","line":200,"loc":{"start":{"line":200,"column":42},"end":{"line":200,"column":72}}},"14":{"name":"getInstrumenter","line":215,"loc":{"start":{"line":215,"column":1},"end":{"line":215,"column":47}}},"15":{"name":"loadSourceMap","line":241,"loc":{"start":{"line":241,"column":1},"end":{"line":241,"column":30}}},"16":{"name":"getOriginalPosition","line":251,"loc":{"start":{"line":251,"column":1},"end":{"line":251,"column":49}}},"17":{"name":"(anonymous_17)","line":262,"loc":{"start":{"line":262,"column":18},"end":{"line":262,"column":35}}},"18":{"name":"getSourceMap","line":303,"loc":{"start":{"line":303,"column":1},"end":{"line":303,"column":33}}},"19":{"name":"getSource","line":349,"loc":{"start":{"line":349,"column":1},"end":{"line":349,"column":31}}},"20":{"name":"formatLine","line":417,"loc":{"start":{"line":417,"column":1},"end":{"line":417,"column":27}}},"21":{"name":"processChromeTrace","line":427,"loc":{"start":{"line":427,"column":1},"end":{"line":427,"column":36}}},"22":{"name":"processSafariTrace","line":449,"loc":{"start":{"line":449,"column":1},"end":{"line":449,"column":36}}},"23":{"name":"normalizeStackTrace","line":471,"loc":{"start":{"line":471,"column":1},"end":{"line":471,"column":50}}},"24":{"name":"(anonymous_24)","line":489,"loc":{"start":{"line":489,"column":24},"end":{"line":489,"column":40}}},"25":{"name":"isAbsoluteUrl","line":501,"loc":{"start":{"line":501,"column":1},"end":{"line":501,"column":29}}},"26":{"name":"isGlobModuleId","line":509,"loc":{"start":{"line":509,"column":1},"end":{"line":509,"column":35}}},"27":{"name":"(anonymous_27)","line":533,"loc":{"start":{"line":533,"column":22},"end":{"line":533,"column":42}}},"28":{"name":"(anonymous_28)","line":544,"loc":{"start":{"line":544,"column":18},"end":{"line":544,"column":30}}},"29":{"name":"(anonymous_29)","line":545,"loc":{"start":{"line":545,"column":34},"end":{"line":545,"column":52}}},"30":{"name":"(anonymous_30)","line":552,"loc":{"start":{"line":552,"column":18},"end":{"line":552,"column":38}}},"31":{"name":"(anonymous_31)","line":554,"loc":{"start":{"line":554,"column":30},"end":{"line":554,"column":42}}},"32":{"name":"(anonymous_32)","line":564,"loc":{"start":{"line":564,"column":23},"end":{"line":564,"column":43}}},"33":{"name":"(anonymous_33)","line":566,"loc":{"start":{"line":566,"column":11},"end":{"line":566,"column":23}}},"34":{"name":"(anonymous_34)","line":585,"loc":{"start":{"line":585,"column":15},"end":{"line":585,"column":53}}},"35":{"name":"shiftQueue","line":589,"loc":{"start":{"line":589,"column":3},"end":{"line":589,"column":25}}},"36":{"name":"(anonymous_36)","line":600,"loc":{"start":{"line":600,"column":16},"end":{"line":600,"column":34}}},"37":{"name":"(anonymous_37)","line":603,"loc":{"start":{"line":603,"column":11},"end":{"line":603,"column":23}}},"38":{"name":"(anonymous_38)","line":614,"loc":{"start":{"line":614,"column":18},"end":{"line":614,"column":30}}},"39":{"name":"(anonymous_39)","line":622,"loc":{"start":{"line":622,"column":16},"end":{"line":622,"column":34}}},"40":{"name":"(anonymous_40)","line":633,"loc":{"start":{"line":633,"column":19},"end":{"line":633,"column":36}}},"41":{"name":"(anonymous_41)","line":686,"loc":{"start":{"line":686,"column":13},"end":{"line":686,"column":41}}},"42":{"name":"(anonymous_42)","line":687,"loc":{"start":{"line":687,"column":53},"end":{"line":687,"column":72}}},"43":{"name":"(anonymous_43)","line":692,"loc":{"start":{"line":692,"column":14},"end":{"line":692,"column":43}}},"44":{"name":"(anonymous_44)","line":698,"loc":{"start":{"line":698,"column":22},"end":{"line":698,"column":49}}},"45":{"name":"(anonymous_45)","line":699,"loc":{"start":{"line":699,"column":22},"end":{"line":699,"column":34}}},"46":{"name":"(anonymous_46)","line":705,"loc":{"start":{"line":705,"column":17},"end":{"line":705,"column":46}}},"47":{"name":"(anonymous_47)","line":728,"loc":{"start":{"line":728,"column":17},"end":{"line":728,"column":33}}},"48":{"name":"(anonymous_48)","line":762,"loc":{"start":{"line":762,"column":35},"end":{"line":762,"column":55}}},"49":{"name":"(anonymous_49)","line":776,"loc":{"start":{"line":776,"column":20},"end":{"line":776,"column":41}}},"50":{"name":"moduleIdToPath","line":777,"loc":{"start":{"line":777,"column":3},"end":{"line":777,"column":63}}},"51":{"name":"pathToModuleId","line":781,"loc":{"start":{"line":781,"column":3},"end":{"line":781,"column":59}}},"52":{"name":"(anonymous_52)","line":790,"loc":{"start":{"line":790,"column":27},"end":{"line":790,"column":57}}},"53":{"name":"(anonymous_53)","line":801,"loc":{"start":{"line":801,"column":35},"end":{"line":801,"column":51}}},"54":{"name":"(anonymous_54)","line":814,"loc":{"start":{"line":814,"column":9},"end":{"line":814,"column":41}}},"55":{"name":"retry","line":816,"loc":{"start":{"line":816,"column":27},"end":{"line":816,"column":49}}},"56":{"name":"(anonymous_56)","line":834,"loc":{"start":{"line":834,"column":27},"end":{"line":834,"column":92}}},"57":{"name":"hookMatcher","line":839,"loc":{"start":{"line":839,"column":3},"end":{"line":839,"column":34}}},"58":{"name":"hookTransformer","line":850,"loc":{"start":{"line":850,"column":3},"end":{"line":850,"column":44}}},"59":{"name":"(anonymous_59)","line":858,"loc":{"start":{"line":858,"column":12},"end":{"line":858,"column":24}}},"60":{"name":"(anonymous_60)","line":859,"loc":{"start":{"line":859,"column":19},"end":{"line":859,"column":31}}},"61":{"name":"(anonymous_61)","line":875,"loc":{"start":{"line":875,"column":14},"end":{"line":875,"column":65}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":896,"column":3}},"2":{"start":{"line":29,"column":1},"end":{"line":32,"column":4}},"3":{"start":{"line":30,"column":2},"end":{"line":30,"column":19}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":28}},"5":{"start":{"line":34,"column":1},"end":{"line":34,"column":35}},"6":{"start":{"line":35,"column":1},"end":{"line":35,"column":25}},"7":{"start":{"line":36,"column":1},"end":{"line":36,"column":22}},"8":{"start":{"line":37,"column":1},"end":{"line":37,"column":24}},"9":{"start":{"line":45,"column":1},"end":{"line":172,"column":2}},"10":{"start":{"line":46,"column":2},"end":{"line":46,"column":18}},"11":{"start":{"line":47,"column":2},"end":{"line":47,"column":18}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":17}},"13":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"14":{"start":{"line":51,"column":3},"end":{"line":51,"column":33}},"15":{"start":{"line":54,"column":2},"end":{"line":134,"column":3}},"16":{"start":{"line":57,"column":3},"end":{"line":60,"column":4}},"17":{"start":{"line":58,"column":4},"end":{"line":58,"column":27}},"18":{"start":{"line":59,"column":4},"end":{"line":59,"column":11}},"19":{"start":{"line":62,"column":3},"end":{"line":62,"column":39}},"20":{"start":{"line":63,"column":3},"end":{"line":63,"column":49}},"21":{"start":{"line":65,"column":3},"end":{"line":73,"column":4}},"22":{"start":{"line":66,"column":4},"end":{"line":66,"column":18}},"23":{"start":{"line":68,"column":8},"end":{"line":73,"column":4}},"24":{"start":{"line":69,"column":4},"end":{"line":69,"column":92}},"25":{"start":{"line":72,"column":4},"end":{"line":72,"column":18}},"26":{"start":{"line":75,"column":3},"end":{"line":75,"column":34}},"27":{"start":{"line":77,"column":3},"end":{"line":123,"column":4}},"28":{"start":{"line":78,"column":4},"end":{"line":78,"column":23}},"29":{"start":{"line":79,"column":4},"end":{"line":79,"column":19}},"30":{"start":{"line":81,"column":4},"end":{"line":109,"column":7}},"31":{"start":{"line":83,"column":5},"end":{"line":85,"column":6}},"32":{"start":{"line":84,"column":6},"end":{"line":84,"column":19}},"33":{"start":{"line":87,"column":5},"end":{"line":89,"column":6}},"34":{"start":{"line":88,"column":6},"end":{"line":88,"column":16}},"35":{"start":{"line":91,"column":5},"end":{"line":93,"column":6}},"36":{"start":{"line":92,"column":6},"end":{"line":92,"column":15}},"37":{"start":{"line":95,"column":5},"end":{"line":97,"column":6}},"38":{"start":{"line":96,"column":6},"end":{"line":96,"column":16}},"39":{"start":{"line":99,"column":5},"end":{"line":101,"column":6}},"40":{"start":{"line":100,"column":6},"end":{"line":100,"column":15}},"41":{"start":{"line":103,"column":5},"end":{"line":103,"column":14}},"42":{"start":{"line":105,"column":5},"end":{"line":105,"column":54}},"43":{"start":{"line":106,"column":5},"end":{"line":106,"column":69}},"44":{"start":{"line":107,"column":5},"end":{"line":107,"column":20}},"45":{"start":{"line":108,"column":5},"end":{"line":108,"column":24}},"46":{"start":{"line":111,"column":4},"end":{"line":116,"column":5}},"47":{"start":{"line":112,"column":5},"end":{"line":112,"column":56}},"48":{"start":{"line":113,"column":5},"end":{"line":113,"column":30}},"49":{"start":{"line":114,"column":5},"end":{"line":114,"column":20}},"50":{"start":{"line":115,"column":5},"end":{"line":115,"column":26}},"51":{"start":{"line":118,"column":4},"end":{"line":118,"column":19}},"52":{"start":{"line":119,"column":4},"end":{"line":119,"column":33}},"53":{"start":{"line":120,"column":4},"end":{"line":120,"column":16}},"54":{"start":{"line":122,"column":4},"end":{"line":122,"column":21}},"55":{"start":{"line":125,"column":3},"end":{"line":133,"column":4}},"56":{"start":{"line":126,"column":4},"end":{"line":126,"column":18}},"57":{"start":{"line":128,"column":8},"end":{"line":133,"column":4}},"58":{"start":{"line":129,"column":4},"end":{"line":129,"column":19}},"59":{"start":{"line":132,"column":4},"end":{"line":132,"column":18}},"60":{"start":{"line":136,"column":2},"end":{"line":138,"column":3}},"61":{"start":{"line":137,"column":3},"end":{"line":137,"column":27}},"62":{"start":{"line":140,"column":2},"end":{"line":142,"column":3}},"63":{"start":{"line":141,"column":3},"end":{"line":141,"column":43}},"64":{"start":{"line":144,"column":2},"end":{"line":168,"column":3}},"65":{"start":{"line":145,"column":3},"end":{"line":167,"column":4}},"66":{"start":{"line":148,"column":5},"end":{"line":159,"column":6}},"67":{"start":{"line":149,"column":6},"end":{"line":149,"column":28}},"68":{"start":{"line":151,"column":10},"end":{"line":159,"column":6}},"69":{"start":{"line":152,"column":6},"end":{"line":152,"column":23}},"70":{"start":{"line":154,"column":10},"end":{"line":159,"column":6}},"71":{"start":{"line":155,"column":6},"end":{"line":155,"column":28}},"72":{"start":{"line":158,"column":6},"end":{"line":158,"column":25}},"73":{"start":{"line":160,"column":5},"end":{"line":160,"column":11}},"74":{"start":{"line":162,"column":5},"end":{"line":162,"column":24}},"75":{"start":{"line":163,"column":5},"end":{"line":163,"column":11}},"76":{"start":{"line":165,"column":5},"end":{"line":165,"column":27}},"77":{"start":{"line":166,"column":5},"end":{"line":166,"column":11}},"78":{"start":{"line":170,"column":2},"end":{"line":170,"column":16}},"79":{"start":{"line":171,"column":2},"end":{"line":171,"column":16}},"80":{"start":{"line":181,"column":1},"end":{"line":210,"column":2}},"81":{"start":{"line":182,"column":2},"end":{"line":182,"column":29}},"82":{"start":{"line":183,"column":2},"end":{"line":183,"column":33}},"83":{"start":{"line":185,"column":2},"end":{"line":193,"column":38}},"84":{"start":{"line":197,"column":2},"end":{"line":207,"column":3}},"85":{"start":{"line":200,"column":3},"end":{"line":206,"column":6}},"86":{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},"87":{"start":{"line":202,"column":5},"end":{"line":202,"column":17}},"88":{"start":{"line":205,"column":4},"end":{"line":205,"column":81}},"89":{"start":{"line":209,"column":2},"end":{"line":209,"column":14}},"90":{"start":{"line":215,"column":1},"end":{"line":236,"column":2}},"91":{"start":{"line":216,"column":2},"end":{"line":216,"column":50}},"92":{"start":{"line":218,"column":2},"end":{"line":218,"column":62}},"93":{"start":{"line":220,"column":2},"end":{"line":234,"column":3}},"94":{"start":{"line":221,"column":3},"end":{"line":231,"column":27}},"95":{"start":{"line":233,"column":3},"end":{"line":233,"column":63}},"96":{"start":{"line":235,"column":2},"end":{"line":235,"column":41}},"97":{"start":{"line":241,"column":1},"end":{"line":243,"column":2}},"98":{"start":{"line":242,"column":2},"end":{"line":242,"column":47}},"99":{"start":{"line":251,"column":1},"end":{"line":298,"column":2}},"100":{"start":{"line":252,"column":2},"end":{"line":252,"column":80}},"101":{"start":{"line":255,"column":2},"end":{"line":257,"column":3}},"102":{"start":{"line":256,"column":3},"end":{"line":256,"column":27}},"103":{"start":{"line":259,"column":2},"end":{"line":259,"column":19}},"104":{"start":{"line":262,"column":2},"end":{"line":266,"column":32}},"105":{"start":{"line":263,"column":3},"end":{"line":265,"column":4}},"106":{"start":{"line":264,"column":4},"end":{"line":264,"column":24}},"107":{"start":{"line":268,"column":2},"end":{"line":271,"column":3}},"108":{"start":{"line":270,"column":3},"end":{"line":270,"column":41}},"109":{"start":{"line":273,"column":2},"end":{"line":273,"column":32}},"110":{"start":{"line":282,"column":2},"end":{"line":291,"column":3}},"111":{"start":{"line":284,"column":3},"end":{"line":284,"column":13}},"112":{"start":{"line":285,"column":3},"end":{"line":290,"column":4}},"113":{"start":{"line":286,"column":4},"end":{"line":286,"column":23}},"114":{"start":{"line":287,"column":4},"end":{"line":289,"column":5}},"115":{"start":{"line":288,"column":5},"end":{"line":288,"column":30}},"116":{"start":{"line":293,"column":2},"end":{"line":297,"column":4}},"117":{"start":{"line":303,"column":1},"end":{"line":344,"column":2}},"118":{"start":{"line":304,"column":2},"end":{"line":304,"column":11}},"119":{"start":{"line":305,"column":2},"end":{"line":305,"column":12}},"120":{"start":{"line":306,"column":2},"end":{"line":306,"column":15}},"121":{"start":{"line":307,"column":2},"end":{"line":307,"column":12}},"122":{"start":{"line":308,"column":2},"end":{"line":308,"column":106}},"123":{"start":{"line":310,"column":2},"end":{"line":312,"column":3}},"124":{"start":{"line":311,"column":3},"end":{"line":311,"column":35}},"125":{"start":{"line":314,"column":2},"end":{"line":343,"column":3}},"126":{"start":{"line":315,"column":3},"end":{"line":321,"column":4}},"127":{"start":{"line":316,"column":4},"end":{"line":316,"column":33}},"128":{"start":{"line":319,"column":4},"end":{"line":319,"column":55}},"129":{"start":{"line":320,"column":4},"end":{"line":320,"column":33}},"130":{"start":{"line":323,"column":3},"end":{"line":323,"column":35}},"131":{"start":{"line":324,"column":3},"end":{"line":324,"column":38}},"132":{"start":{"line":326,"column":3},"end":{"line":338,"column":4}},"133":{"start":{"line":327,"column":4},"end":{"line":336,"column":5}},"134":{"start":{"line":328,"column":5},"end":{"line":328,"column":74}},"135":{"start":{"line":329,"column":5},"end":{"line":329,"column":52}},"136":{"start":{"line":333,"column":5},"end":{"line":333,"column":71}},"137":{"start":{"line":334,"column":5},"end":{"line":334,"column":37}},"138":{"start":{"line":335,"column":5},"end":{"line":335,"column":70}},"139":{"start":{"line":337,"column":4},"end":{"line":337,"column":36}},"140":{"start":{"line":342,"column":3},"end":{"line":342,"column":15}},"141":{"start":{"line":349,"column":1},"end":{"line":412,"column":2}},"142":{"start":{"line":351,"column":2},"end":{"line":351,"column":12}},"143":{"start":{"line":352,"column":2},"end":{"line":352,"column":13}},"144":{"start":{"line":353,"column":2},"end":{"line":353,"column":11}},"145":{"start":{"line":354,"column":2},"end":{"line":354,"column":10}},"146":{"start":{"line":355,"column":2},"end":{"line":355,"column":10}},"147":{"start":{"line":356,"column":2},"end":{"line":356,"column":18}},"148":{"start":{"line":357,"column":2},"end":{"line":357,"column":13}},"149":{"start":{"line":359,"column":2},"end":{"line":361,"column":3}},"150":{"start":{"line":360,"column":3},"end":{"line":360,"column":22}},"151":{"start":{"line":363,"column":2},"end":{"line":366,"column":3}},"152":{"start":{"line":365,"column":3},"end":{"line":365,"column":20}},"153":{"start":{"line":368,"column":2},"end":{"line":368,"column":23}},"154":{"start":{"line":369,"column":2},"end":{"line":369,"column":26}},"155":{"start":{"line":370,"column":2},"end":{"line":370,"column":56}},"156":{"start":{"line":374,"column":2},"end":{"line":377,"column":3}},"157":{"start":{"line":376,"column":3},"end":{"line":376,"column":64}},"158":{"start":{"line":379,"column":2},"end":{"line":382,"column":3}},"159":{"start":{"line":381,"column":3},"end":{"line":381,"column":66}},"160":{"start":{"line":384,"column":2},"end":{"line":384,"column":45}},"161":{"start":{"line":387,"column":2},"end":{"line":395,"column":3}},"162":{"start":{"line":388,"column":3},"end":{"line":388,"column":45}},"163":{"start":{"line":389,"column":3},"end":{"line":389,"column":53}},"164":{"start":{"line":390,"column":3},"end":{"line":390,"column":27}},"165":{"start":{"line":391,"column":3},"end":{"line":391,"column":28}},"166":{"start":{"line":392,"column":3},"end":{"line":394,"column":4}},"167":{"start":{"line":393,"column":4},"end":{"line":393,"column":32}},"168":{"start":{"line":398,"column":2},"end":{"line":405,"column":3}},"169":{"start":{"line":399,"column":3},"end":{"line":399,"column":53}},"170":{"start":{"line":400,"column":3},"end":{"line":400,"column":27}},"171":{"start":{"line":401,"column":3},"end":{"line":401,"column":28}},"172":{"start":{"line":402,"column":3},"end":{"line":404,"column":4}},"173":{"start":{"line":403,"column":4},"end":{"line":403,"column":73}},"174":{"start":{"line":407,"column":2},"end":{"line":407,"column":31}},"175":{"start":{"line":408,"column":2},"end":{"line":410,"column":3}},"176":{"start":{"line":409,"column":3},"end":{"line":409,"column":23}},"177":{"start":{"line":411,"column":2},"end":{"line":411,"column":16}},"178":{"start":{"line":417,"column":1},"end":{"line":422,"column":2}},"179":{"start":{"line":418,"column":2},"end":{"line":420,"column":3}},"180":{"start":{"line":419,"column":3},"end":{"line":419,"column":50}},"181":{"start":{"line":421,"column":2},"end":{"line":421,"column":68}},"182":{"start":{"line":427,"column":1},"end":{"line":444,"column":2}},"183":{"start":{"line":428,"column":2},"end":{"line":428,"column":17}},"184":{"start":{"line":429,"column":2},"end":{"line":429,"column":12}},"185":{"start":{"line":430,"column":2},"end":{"line":430,"column":11}},"186":{"start":{"line":431,"column":2},"end":{"line":442,"column":3}},"187":{"start":{"line":432,"column":3},"end":{"line":432,"column":19}},"188":{"start":{"line":433,"column":3},"end":{"line":441,"column":4}},"189":{"start":{"line":434,"column":4},"end":{"line":434,"column":65}},"190":{"start":{"line":436,"column":8},"end":{"line":441,"column":4}},"191":{"start":{"line":437,"column":4},"end":{"line":437,"column":49}},"192":{"start":{"line":440,"column":4},"end":{"line":440,"column":21}},"193":{"start":{"line":443,"column":2},"end":{"line":443,"column":15}},"194":{"start":{"line":449,"column":1},"end":{"line":466,"column":2}},"195":{"start":{"line":450,"column":2},"end":{"line":450,"column":17}},"196":{"start":{"line":451,"column":2},"end":{"line":451,"column":12}},"197":{"start":{"line":452,"column":2},"end":{"line":452,"column":11}},"198":{"start":{"line":453,"column":2},"end":{"line":464,"column":3}},"199":{"start":{"line":454,"column":3},"end":{"line":454,"column":19}},"200":{"start":{"line":455,"column":3},"end":{"line":463,"column":4}},"201":{"start":{"line":456,"column":4},"end":{"line":456,"column":65}},"202":{"start":{"line":458,"column":8},"end":{"line":463,"column":4}},"203":{"start":{"line":459,"column":4},"end":{"line":459,"column":49}},"204":{"start":{"line":462,"column":4},"end":{"line":462,"column":21}},"205":{"start":{"line":465,"column":2},"end":{"line":465,"column":15}},"206":{"start":{"line":471,"column":1},"end":{"line":499,"column":2}},"207":{"start":{"line":472,"column":2},"end":{"line":472,"column":52}},"208":{"start":{"line":473,"column":2},"end":{"line":473,"column":21}},"209":{"start":{"line":475,"column":2},"end":{"line":479,"column":3}},"210":{"start":{"line":477,"column":3},"end":{"line":477,"column":31}},"211":{"start":{"line":478,"column":3},"end":{"line":478,"column":26}},"212":{"start":{"line":482,"column":2},"end":{"line":484,"column":3}},"213":{"start":{"line":483,"column":3},"end":{"line":483,"column":26}},"214":{"start":{"line":486,"column":2},"end":{"line":486,"column":91}},"215":{"start":{"line":488,"column":2},"end":{"line":496,"column":3}},"216":{"start":{"line":489,"column":3},"end":{"line":495,"column":6}},"217":{"start":{"line":490,"column":4},"end":{"line":494,"column":6}},"218":{"start":{"line":498,"column":2},"end":{"line":498,"column":45}},"219":{"start":{"line":501,"column":1},"end":{"line":503,"column":2}},"220":{"start":{"line":502,"column":2},"end":{"line":502,"column":36}},"221":{"start":{"line":509,"column":1},"end":{"line":523,"column":2}},"222":{"start":{"line":512,"column":2},"end":{"line":514,"column":3}},"223":{"start":{"line":513,"column":3},"end":{"line":513,"column":16}},"224":{"start":{"line":518,"column":2},"end":{"line":522,"column":37}},"225":{"start":{"line":528,"column":1},"end":{"line":895,"column":3}},"226":{"start":{"line":534,"column":3},"end":{"line":536,"column":4}},"227":{"start":{"line":535,"column":4},"end":{"line":535,"column":96}},"228":{"start":{"line":545,"column":3},"end":{"line":547,"column":6}},"229":{"start":{"line":546,"column":4},"end":{"line":546,"column":17}},"230":{"start":{"line":552,"column":3},"end":{"line":559,"column":5}},"231":{"start":{"line":553,"column":4},"end":{"line":553,"column":20}},"232":{"start":{"line":554,"column":4},"end":{"line":558,"column":7}},"233":{"start":{"line":555,"column":5},"end":{"line":555,"column":55}},"234":{"start":{"line":556,"column":5},"end":{"line":556,"column":20}},"235":{"start":{"line":557,"column":5},"end":{"line":557,"column":24}},"236":{"start":{"line":564,"column":3},"end":{"line":574,"column":5}},"237":{"start":{"line":565,"column":4},"end":{"line":565,"column":20}},"238":{"start":{"line":566,"column":4},"end":{"line":573,"column":6}},"239":{"start":{"line":567,"column":5},"end":{"line":572,"column":6}},"240":{"start":{"line":568,"column":6},"end":{"line":568,"column":45}},"241":{"start":{"line":571,"column":6},"end":{"line":571,"column":25}},"242":{"start":{"line":576,"column":3},"end":{"line":576,"column":14}},"243":{"start":{"line":586,"column":3},"end":{"line":586,"column":20}},"244":{"start":{"line":587,"column":3},"end":{"line":587,"column":18}},"245":{"start":{"line":589,"column":3},"end":{"line":597,"column":4}},"246":{"start":{"line":590,"column":4},"end":{"line":596,"column":5}},"247":{"start":{"line":591,"column":5},"end":{"line":591,"column":32}},"248":{"start":{"line":592,"column":5},"end":{"line":592,"column":80}},"249":{"start":{"line":595,"column":5},"end":{"line":595,"column":16}},"250":{"start":{"line":600,"column":3},"end":{"line":612,"column":5}},"251":{"start":{"line":603,"column":4},"end":{"line":611,"column":6}},"252":{"start":{"line":604,"column":5},"end":{"line":610,"column":6}},"253":{"start":{"line":605,"column":6},"end":{"line":605,"column":17}},"254":{"start":{"line":606,"column":6},"end":{"line":606,"column":73}},"255":{"start":{"line":609,"column":6},"end":{"line":609,"column":46}},"256":{"start":{"line":614,"column":3},"end":{"line":617,"column":5}},"257":{"start":{"line":615,"column":4},"end":{"line":615,"column":15}},"258":{"start":{"line":616,"column":4},"end":{"line":616,"column":17}},"259":{"start":{"line":619,"column":3},"end":{"line":619,"column":17}},"260":{"start":{"line":623,"column":3},"end":{"line":623,"column":69}},"261":{"start":{"line":635,"column":3},"end":{"line":683,"column":4}},"262":{"start":{"line":636,"column":4},"end":{"line":636,"column":86}},"263":{"start":{"line":637,"column":4},"end":{"line":637,"column":28}},"264":{"start":{"line":639,"column":4},"end":{"line":651,"column":5}},"265":{"start":{"line":642,"column":5},"end":{"line":647,"column":6}},"266":{"start":{"line":643,"column":6},"end":{"line":643,"column":42}},"267":{"start":{"line":645,"column":10},"end":{"line":647,"column":6}},"268":{"start":{"line":646,"column":6},"end":{"line":646,"column":56}},"269":{"start":{"line":649,"column":5},"end":{"line":649,"column":81}},"270":{"start":{"line":650,"column":5},"end":{"line":650,"column":53}},"271":{"start":{"line":653,"column":4},"end":{"line":658,"column":5}},"272":{"start":{"line":654,"column":5},"end":{"line":654,"column":57}},"273":{"start":{"line":655,"column":5},"end":{"line":657,"column":6}},"274":{"start":{"line":656,"column":6},"end":{"line":656,"column":38}},"275":{"start":{"line":660,"column":4},"end":{"line":677,"column":5}},"276":{"start":{"line":661,"column":5},"end":{"line":661,"column":22}},"277":{"start":{"line":663,"column":9},"end":{"line":677,"column":5}},"278":{"start":{"line":664,"column":5},"end":{"line":664,"column":43}},"279":{"start":{"line":665,"column":5},"end":{"line":671,"column":6}},"280":{"start":{"line":666,"column":6},"end":{"line":666,"column":40}},"281":{"start":{"line":668,"column":6},"end":{"line":670,"column":7}},"282":{"start":{"line":669,"column":7},"end":{"line":669,"column":43}},"283":{"start":{"line":673,"column":5},"end":{"line":673,"column":29}},"284":{"start":{"line":676,"column":5},"end":{"line":676,"column":41}},"285":{"start":{"line":679,"column":4},"end":{"line":679,"column":19}},"286":{"start":{"line":682,"column":4},"end":{"line":682,"column":25}},"287":{"start":{"line":687,"column":3},"end":{"line":689,"column":6}},"288":{"start":{"line":688,"column":4},"end":{"line":688,"column":22}},"289":{"start":{"line":694,"column":3},"end":{"line":696,"column":4}},"290":{"start":{"line":695,"column":4},"end":{"line":695,"column":21}},"291":{"start":{"line":698,"column":3},"end":{"line":702,"column":6}},"292":{"start":{"line":699,"column":4},"end":{"line":701,"column":15}},"293":{"start":{"line":700,"column":5},"end":{"line":700,"column":55}},"294":{"start":{"line":706,"column":3},"end":{"line":706,"column":26}},"295":{"start":{"line":707,"column":3},"end":{"line":707,"column":30}},"296":{"start":{"line":709,"column":3},"end":{"line":723,"column":4}},"297":{"start":{"line":710,"column":4},"end":{"line":716,"column":5}},"298":{"start":{"line":715,"column":5},"end":{"line":715,"column":23}},"299":{"start":{"line":718,"column":8},"end":{"line":723,"column":4}},"300":{"start":{"line":719,"column":4},"end":{"line":719,"column":22}},"301":{"start":{"line":721,"column":8},"end":{"line":723,"column":4}},"302":{"start":{"line":722,"column":4},"end":{"line":722,"column":22}},"303":{"start":{"line":725,"column":3},"end":{"line":725,"column":21}},"304":{"start":{"line":729,"column":3},"end":{"line":731,"column":4}},"305":{"start":{"line":730,"column":4},"end":{"line":730,"column":56}},"306":{"start":{"line":733,"column":3},"end":{"line":733,"column":51}},"307":{"start":{"line":734,"column":3},"end":{"line":734,"column":19}},"308":{"start":{"line":735,"column":3},"end":{"line":757,"column":4}},"309":{"start":{"line":736,"column":4},"end":{"line":736,"column":24}},"310":{"start":{"line":738,"column":4},"end":{"line":744,"column":5}},"311":{"start":{"line":739,"column":5},"end":{"line":741,"column":6}},"312":{"start":{"line":740,"column":6},"end":{"line":740,"column":22}},"313":{"start":{"line":743,"column":5},"end":{"line":743,"column":14}},"314":{"start":{"line":746,"column":4},"end":{"line":756,"column":5}},"315":{"start":{"line":747,"column":5},"end":{"line":752,"column":6}},"316":{"start":{"line":748,"column":6},"end":{"line":748,"column":19}},"317":{"start":{"line":751,"column":6},"end":{"line":751,"column":24}},"318":{"start":{"line":755,"column":5},"end":{"line":755,"column":23}},"319":{"start":{"line":759,"column":3},"end":{"line":759,"column":27}},"320":{"start":{"line":763,"column":3},"end":{"line":763,"column":43}},"321":{"start":{"line":764,"column":3},"end":{"line":766,"column":4}},"322":{"start":{"line":765,"column":4},"end":{"line":765,"column":44}},"323":{"start":{"line":767,"column":3},"end":{"line":767,"column":19}},"324":{"start":{"line":777,"column":3},"end":{"line":779,"column":4}},"325":{"start":{"line":778,"column":4},"end":{"line":778,"column":60}},"326":{"start":{"line":781,"column":3},"end":{"line":783,"column":4}},"327":{"start":{"line":782,"column":4},"end":{"line":782,"column":73}},"328":{"start":{"line":785,"column":3},"end":{"line":787,"column":4}},"329":{"start":{"line":786,"column":4},"end":{"line":786,"column":21}},"330":{"start":{"line":790,"column":3},"end":{"line":811,"column":10}},"331":{"start":{"line":791,"column":4},"end":{"line":808,"column":5}},"332":{"start":{"line":792,"column":5},"end":{"line":792,"column":60}},"333":{"start":{"line":793,"column":5},"end":{"line":793,"column":50}},"334":{"start":{"line":794,"column":5},"end":{"line":794,"column":73}},"335":{"start":{"line":797,"column":5},"end":{"line":799,"column":6}},"336":{"start":{"line":798,"column":6},"end":{"line":798,"column":26}},"337":{"start":{"line":801,"column":5},"end":{"line":803,"column":8}},"338":{"start":{"line":802,"column":6},"end":{"line":802,"column":68}},"339":{"start":{"line":807,"column":5},"end":{"line":807,"column":29}},"340":{"start":{"line":810,"column":4},"end":{"line":810,"column":20}},"341":{"start":{"line":815,"column":3},"end":{"line":815,"column":23}},"342":{"start":{"line":816,"column":3},"end":{"line":823,"column":6}},"343":{"start":{"line":817,"column":4},"end":{"line":822,"column":5}},"344":{"start":{"line":818,"column":5},"end":{"line":818,"column":36}},"345":{"start":{"line":821,"column":5},"end":{"line":821,"column":17}},"346":{"start":{"line":835,"column":3},"end":{"line":835,"column":19}},"347":{"start":{"line":837,"column":3},"end":{"line":837,"column":82}},"348":{"start":{"line":839,"column":3},"end":{"line":848,"column":4}},"349":{"start":{"line":840,"column":4},"end":{"line":840,"column":44}},"350":{"start":{"line":842,"column":4},"end":{"line":847,"column":6}},"351":{"start":{"line":850,"column":3},"end":{"line":852,"column":4}},"352":{"start":{"line":851,"column":4},"end":{"line":851,"column":82}},"353":{"start":{"line":854,"column":3},"end":{"line":854,"column":59}},"354":{"start":{"line":855,"column":3},"end":{"line":855,"column":50}},"355":{"start":{"line":857,"column":3},"end":{"line":863,"column":5}},"356":{"start":{"line":859,"column":5},"end":{"line":859,"column":34}},"357":{"start":{"line":860,"column":5},"end":{"line":860,"column":35}},"358":{"start":{"line":861,"column":5},"end":{"line":861,"column":26}},"359":{"start":{"line":876,"column":3},"end":{"line":876,"column":59}},"360":{"start":{"line":877,"column":3},"end":{"line":877,"column":35}},"361":{"start":{"line":880,"column":3},"end":{"line":883,"column":6}},"362":{"start":{"line":885,"column":3},"end":{"line":885,"column":82}},"363":{"start":{"line":886,"column":3},"end":{"line":886,"column":42}},"364":{"start":{"line":888,"column":3},"end":{"line":891,"column":4}},"365":{"start":{"line":889,"column":4},"end":{"line":889,"column":71}},"366":{"start":{"line":890,"column":4},"end":{"line":890,"column":37}},"367":{"start":{"line":893,"column":3},"end":{"line":893,"column":15}}},"branchMap":{"1":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":3},"end":{"line":57,"column":3}},{"start":{"line":57,"column":3},"end":{"line":57,"column":3}}]},"2":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":3},"end":{"line":65,"column":3}},{"start":{"line":65,"column":3},"end":{"line":65,"column":3}}]},"3":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"4":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":39},"end":{"line":69,"column":67}},{"start":{"line":69,"column":71},"end":{"line":69,"column":83}}]},"5":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":39},"end":{"line":69,"column":50}},{"start":{"line":69,"column":54},"end":{"line":69,"column":67}}]},"6":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":3},"end":{"line":77,"column":3}},{"start":{"line":77,"column":3},"end":{"line":77,"column":3}}]},"7":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":7},"end":{"line":77,"column":18}},{"start":{"line":77,"column":22},"end":{"line":77,"column":29}}]},"8":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":5},"end":{"line":83,"column":5}},{"start":{"line":83,"column":5},"end":{"line":83,"column":5}}]},"9":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":9},"end":{"line":83,"column":18}},{"start":{"line":83,"column":22},"end":{"line":83,"column":31}}]},"10":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":5},"end":{"line":87,"column":5}},{"start":{"line":87,"column":5},"end":{"line":87,"column":5}}]},"11":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":9},"end":{"line":87,"column":18}},{"start":{"line":87,"column":22},"end":{"line":87,"column":30}}]},"12":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":5},"end":{"line":91,"column":5}},{"start":{"line":91,"column":5},"end":{"line":91,"column":5}}]},"13":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":9},"end":{"line":91,"column":17}},{"start":{"line":91,"column":21},"end":{"line":91,"column":30}}]},"14":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":5},"end":{"line":95,"column":5}},{"start":{"line":95,"column":5},"end":{"line":95,"column":5}}]},"15":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":5},"end":{"line":99,"column":5}},{"start":{"line":99,"column":5},"end":{"line":99,"column":5}}]},"16":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":28},"end":{"line":105,"column":31}},{"start":{"line":105,"column":34},"end":{"line":105,"column":36}}]},"17":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":30},"end":{"line":106,"column":49}},{"start":{"line":106,"column":52},"end":{"line":106,"column":68}}]},"18":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":5},"end":{"line":106,"column":12}},{"start":{"line":106,"column":16},"end":{"line":106,"column":27}}]},"19":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"20":{"line":112,"type":"cond-expr","locations":[{"start":{"line":112,"column":30},"end":{"line":112,"column":33}},{"start":{"line":112,"column":36},"end":{"line":112,"column":38}}]},"21":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":3},"end":{"line":125,"column":3}},{"start":{"line":125,"column":3},"end":{"line":125,"column":3}}]},"22":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":8}},{"start":{"line":128,"column":8},"end":{"line":128,"column":8}}]},"23":{"line":145,"type":"switch","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":18}},{"start":{"line":147,"column":4},"end":{"line":160,"column":11}},{"start":{"line":161,"column":4},"end":{"line":163,"column":11}},{"start":{"line":164,"column":4},"end":{"line":166,"column":11}}]},"24":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":5},"end":{"line":148,"column":5}},{"start":{"line":148,"column":5},"end":{"line":148,"column":5}}]},"25":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":10},"end":{"line":151,"column":10}},{"start":{"line":151,"column":10},"end":{"line":151,"column":10}}]},"26":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":10},"end":{"line":154,"column":10}},{"start":{"line":154,"column":10},"end":{"line":154,"column":10}}]},"27":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":2},"end":{"line":197,"column":2}},{"start":{"line":197,"column":2},"end":{"line":197,"column":2}}]},"28":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":201,"column":4}},{"start":{"line":201,"column":4},"end":{"line":201,"column":4}}]},"29":{"line":205,"type":"cond-expr","locations":[{"start":{"line":205,"column":32},"end":{"line":205,"column":35}},{"start":{"line":205,"column":38},"end":{"line":205,"column":66}}]},"30":{"line":205,"type":"cond-expr","locations":[{"start":{"line":205,"column":58},"end":{"line":205,"column":61}},{"start":{"line":205,"column":64},"end":{"line":205,"column":66}}]},"31":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":24},"end":{"line":216,"column":43}},{"start":{"line":216,"column":47},"end":{"line":216,"column":49}}]},"32":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"33":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":2}},{"start":{"line":255,"column":2},"end":{"line":255,"column":2}}]},"34":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":3},"end":{"line":263,"column":3}},{"start":{"line":263,"column":3},"end":{"line":263,"column":3}}]},"35":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":2},"end":{"line":268,"column":2}},{"start":{"line":268,"column":2},"end":{"line":268,"column":2}}]},"36":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"37":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"38":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":8},"end":{"line":287,"column":49}},{"start":{"line":287,"column":53},"end":{"line":287,"column":84}}]},"39":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":2},"end":{"line":310,"column":2}},{"start":{"line":310,"column":2},"end":{"line":310,"column":2}}]},"40":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":3},"end":{"line":315,"column":3}},{"start":{"line":315,"column":3},"end":{"line":315,"column":3}}]},"41":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":3},"end":{"line":326,"column":3}},{"start":{"line":326,"column":3},"end":{"line":326,"column":3}}]},"42":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":4},"end":{"line":327,"column":4}},{"start":{"line":327,"column":4},"end":{"line":327,"column":4}}]},"43":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":2},"end":{"line":359,"column":2}},{"start":{"line":359,"column":2},"end":{"line":359,"column":2}}]},"44":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":2},"end":{"line":363,"column":2}},{"start":{"line":363,"column":2},"end":{"line":363,"column":2}}]},"45":{"line":370,"type":"cond-expr","locations":[{"start":{"line":370,"column":19},"end":{"line":370,"column":48}},{"start":{"line":370,"column":51},"end":{"line":370,"column":55}}]},"46":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":2},"end":{"line":374,"column":2}},{"start":{"line":374,"column":2},"end":{"line":374,"column":2}}]},"47":{"line":376,"type":"cond-expr","locations":[{"start":{"line":376,"column":26},"end":{"line":376,"column":52}},{"start":{"line":376,"column":55},"end":{"line":376,"column":63}}]},"48":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":2},"end":{"line":379,"column":2}},{"start":{"line":379,"column":2},"end":{"line":379,"column":2}}]},"49":{"line":381,"type":"cond-expr","locations":[{"start":{"line":381,"column":50},"end":{"line":381,"column":52}},{"start":{"line":381,"column":55},"end":{"line":381,"column":64}}]},"50":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":2},"end":{"line":387,"column":2}},{"start":{"line":387,"column":2},"end":{"line":387,"column":2}}]},"51":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":3},"end":{"line":392,"column":3}},{"start":{"line":392,"column":3},"end":{"line":392,"column":3}}]},"52":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":2},"end":{"line":398,"column":2}},{"start":{"line":398,"column":2},"end":{"line":398,"column":2}}]},"53":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":3},"end":{"line":402,"column":3}},{"start":{"line":402,"column":3},"end":{"line":402,"column":3}}]},"54":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":2},"end":{"line":408,"column":2}},{"start":{"line":408,"column":2},"end":{"line":408,"column":2}}]},"55":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":2},"end":{"line":418,"column":2}},{"start":{"line":418,"column":2},"end":{"line":418,"column":2}}]},"56":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":3},"end":{"line":433,"column":3}},{"start":{"line":433,"column":3},"end":{"line":433,"column":3}}]},"57":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":8},"end":{"line":436,"column":8}},{"start":{"line":436,"column":8},"end":{"line":436,"column":8}}]},"58":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":3},"end":{"line":455,"column":3}},{"start":{"line":455,"column":3},"end":{"line":455,"column":3}}]},"59":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":8},"end":{"line":458,"column":8}},{"start":{"line":458,"column":8},"end":{"line":458,"column":8}}]},"60":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":2},"end":{"line":475,"column":2}},{"start":{"line":475,"column":2},"end":{"line":475,"column":2}}]},"61":{"line":486,"type":"cond-expr","locations":[{"start":{"line":486,"column":37},"end":{"line":486,"column":62}},{"start":{"line":486,"column":65},"end":{"line":486,"column":90}}]},"62":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":2},"end":{"line":488,"column":2}},{"start":{"line":488,"column":2},"end":{"line":488,"column":2}}]},"63":{"line":491,"type":"binary-expr","locations":[{"start":{"line":491,"column":5},"end":{"line":491,"column":37}},{"start":{"line":492,"column":5},"end":{"line":492,"column":35}},{"start":{"line":493,"column":5},"end":{"line":493,"column":32}}]},"64":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":2},"end":{"line":512,"column":2}},{"start":{"line":512,"column":2},"end":{"line":512,"column":2}}]},"65":{"line":512,"type":"binary-expr","locations":[{"start":{"line":512,"column":6},"end":{"line":512,"column":15}},{"start":{"line":512,"column":19},"end":{"line":512,"column":42}},{"start":{"line":512,"column":46},"end":{"line":512,"column":79}}]},"66":{"line":518,"type":"binary-expr","locations":[{"start":{"line":518,"column":9},"end":{"line":518,"column":37}},{"start":{"line":519,"column":3},"end":{"line":519,"column":31}},{"start":{"line":520,"column":3},"end":{"line":520,"column":30}},{"start":{"line":521,"column":3},"end":{"line":521,"column":27}},{"start":{"line":522,"column":3},"end":{"line":522,"column":36}}]},"67":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":3},"end":{"line":534,"column":3}},{"start":{"line":534,"column":3},"end":{"line":534,"column":3}}]},"68":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":4},"end":{"line":590,"column":4}},{"start":{"line":590,"column":4},"end":{"line":590,"column":4}}]},"69":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":5},"end":{"line":604,"column":5}},{"start":{"line":604,"column":5},"end":{"line":604,"column":5}}]},"70":{"line":635,"type":"if","locations":[{"start":{"line":635,"column":3},"end":{"line":635,"column":3}},{"start":{"line":635,"column":3},"end":{"line":635,"column":3}}]},"71":{"line":635,"type":"binary-expr","locations":[{"start":{"line":635,"column":7},"end":{"line":635,"column":20}},{"start":{"line":635,"column":24},"end":{"line":635,"column":35}}]},"72":{"line":636,"type":"binary-expr","locations":[{"start":{"line":636,"column":19},"end":{"line":636,"column":29}},{"start":{"line":636,"column":33},"end":{"line":636,"column":40}}]},"73":{"line":636,"type":"binary-expr","locations":[{"start":{"line":636,"column":52},"end":{"line":636,"column":65}},{"start":{"line":636,"column":69},"end":{"line":636,"column":84}}]},"74":{"line":639,"type":"if","locations":[{"start":{"line":639,"column":4},"end":{"line":639,"column":4}},{"start":{"line":639,"column":4},"end":{"line":639,"column":4}}]},"75":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":5},"end":{"line":642,"column":5}},{"start":{"line":642,"column":5},"end":{"line":642,"column":5}}]},"76":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":10},"end":{"line":645,"column":10}},{"start":{"line":645,"column":10},"end":{"line":645,"column":10}}]},"77":{"line":649,"type":"binary-expr","locations":[{"start":{"line":649,"column":23},"end":{"line":649,"column":29}},{"start":{"line":649,"column":33},"end":{"line":649,"column":46}},{"start":{"line":649,"column":50},"end":{"line":649,"column":80}}]},"78":{"line":653,"type":"if","locations":[{"start":{"line":653,"column":4},"end":{"line":653,"column":4}},{"start":{"line":653,"column":4},"end":{"line":653,"column":4}}]},"79":{"line":653,"type":"binary-expr","locations":[{"start":{"line":653,"column":8},"end":{"line":653,"column":22}},{"start":{"line":653,"column":26},"end":{"line":653,"column":58}},{"start":{"line":653,"column":62},"end":{"line":653,"column":96}}]},"80":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":5},"end":{"line":655,"column":5}},{"start":{"line":655,"column":5},"end":{"line":655,"column":5}}]},"81":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":4},"end":{"line":660,"column":4}},{"start":{"line":660,"column":4},"end":{"line":660,"column":4}}]},"82":{"line":660,"type":"binary-expr","locations":[{"start":{"line":660,"column":8},"end":{"line":660,"column":13}},{"start":{"line":660,"column":17},"end":{"line":660,"column":33}}]},"83":{"line":663,"type":"if","locations":[{"start":{"line":663,"column":9},"end":{"line":663,"column":9}},{"start":{"line":663,"column":9},"end":{"line":663,"column":9}}]},"84":{"line":665,"type":"if","locations":[{"start":{"line":665,"column":5},"end":{"line":665,"column":5}},{"start":{"line":665,"column":5},"end":{"line":665,"column":5}}]},"85":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":6},"end":{"line":668,"column":6}},{"start":{"line":668,"column":6},"end":{"line":668,"column":6}}]},"86":{"line":694,"type":"if","locations":[{"start":{"line":694,"column":3},"end":{"line":694,"column":3}},{"start":{"line":694,"column":3},"end":{"line":694,"column":3}}]},"87":{"line":709,"type":"if","locations":[{"start":{"line":709,"column":3},"end":{"line":709,"column":3}},{"start":{"line":709,"column":3},"end":{"line":709,"column":3}}]},"88":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":4},"end":{"line":710,"column":4}},{"start":{"line":710,"column":4},"end":{"line":710,"column":4}}]},"89":{"line":711,"type":"binary-expr","locations":[{"start":{"line":711,"column":5},"end":{"line":711,"column":29}},{"start":{"line":712,"column":5},"end":{"line":712,"column":31}},{"start":{"line":713,"column":5},"end":{"line":713,"column":31}}]},"90":{"line":718,"type":"if","locations":[{"start":{"line":718,"column":8},"end":{"line":718,"column":8}},{"start":{"line":718,"column":8},"end":{"line":718,"column":8}}]},"91":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":8},"end":{"line":721,"column":8}},{"start":{"line":721,"column":8},"end":{"line":721,"column":8}}]},"92":{"line":721,"type":"binary-expr","locations":[{"start":{"line":721,"column":12},"end":{"line":721,"column":35}},{"start":{"line":721,"column":39},"end":{"line":721,"column":73}}]},"93":{"line":729,"type":"if","locations":[{"start":{"line":729,"column":3},"end":{"line":729,"column":3}},{"start":{"line":729,"column":3},"end":{"line":729,"column":3}}]},"94":{"line":738,"type":"if","locations":[{"start":{"line":738,"column":4},"end":{"line":738,"column":4}},{"start":{"line":738,"column":4},"end":{"line":738,"column":4}}]},"95":{"line":738,"type":"binary-expr","locations":[{"start":{"line":738,"column":8},"end":{"line":738,"column":13}},{"start":{"line":738,"column":17},"end":{"line":738,"column":29}}]},"96":{"line":739,"type":"if","locations":[{"start":{"line":739,"column":5},"end":{"line":739,"column":5}},{"start":{"line":739,"column":5},"end":{"line":739,"column":5}}]},"97":{"line":739,"type":"binary-expr","locations":[{"start":{"line":739,"column":9},"end":{"line":739,"column":16}},{"start":{"line":739,"column":20},"end":{"line":739,"column":42}}]},"98":{"line":746,"type":"if","locations":[{"start":{"line":746,"column":4},"end":{"line":746,"column":4}},{"start":{"line":746,"column":4},"end":{"line":746,"column":4}}]},"99":{"line":747,"type":"if","locations":[{"start":{"line":747,"column":5},"end":{"line":747,"column":5}},{"start":{"line":747,"column":5},"end":{"line":747,"column":5}}]},"100":{"line":747,"type":"binary-expr","locations":[{"start":{"line":747,"column":9},"end":{"line":747,"column":22}},{"start":{"line":747,"column":26},"end":{"line":747,"column":60}}]},"101":{"line":764,"type":"if","locations":[{"start":{"line":764,"column":3},"end":{"line":764,"column":3}},{"start":{"line":764,"column":3},"end":{"line":764,"column":3}}]},"102":{"line":785,"type":"if","locations":[{"start":{"line":785,"column":3},"end":{"line":785,"column":3}},{"start":{"line":785,"column":3},"end":{"line":785,"column":3}}]},"103":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":4},"end":{"line":791,"column":4}},{"start":{"line":791,"column":4},"end":{"line":791,"column":4}}]},"104":{"line":797,"type":"if","locations":[{"start":{"line":797,"column":5},"end":{"line":797,"column":5}},{"start":{"line":797,"column":5},"end":{"line":797,"column":5}}]},"105":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":4},"end":{"line":817,"column":4}},{"start":{"line":817,"column":4},"end":{"line":817,"column":4}}]},"106":{"line":817,"type":"binary-expr","locations":[{"start":{"line":817,"column":8},"end":{"line":817,"column":36}},{"start":{"line":817,"column":40},"end":{"line":817,"column":67}}]},"107":{"line":837,"type":"binary-expr","locations":[{"start":{"line":837,"column":50},"end":{"line":837,"column":58}},{"start":{"line":837,"column":62},"end":{"line":837,"column":64}}]},"108":{"line":842,"type":"binary-expr","locations":[{"start":{"line":842,"column":11},"end":{"line":842,"column":34}},{"start":{"line":843,"column":5},"end":{"line":843,"column":37}},{"start":{"line":846,"column":5},"end":{"line":846,"column":66}}]},"109":{"line":888,"type":"if","locations":[{"start":{"line":888,"column":3},"end":{"line":888,"column":3}},{"start":{"line":888,"column":3},"end":{"line":888,"column":3}}]}},"code":["/* jshint node: true */","define([","\t'dojo/has',","\t'dojo/lang',","\t'dojo/Promise',","\t'./EnvironmentType',","\t'../main',","\t'diff',","\t'dojo/has!host-node?dojo/node!glob',","\t'dojo/has!host-node?dojo/node!path',","\t'dojo/has!host-node?dojo/node!istanbul/lib/hook',","\t'dojo/has!host-node?dojo/node!istanbul/lib/instrumenter',","\t'dojo/has!host-node?dojo/node!source-map',","\t'dojo/has!host-node?dojo/node!fs'","], function (","\thas,","\tlang,","\tPromise,","\tEnvironmentType,","\tintern,","\tdiffUtil,","\tglob,","\tpathUtil,","\thook,","\tInstrumenter,","\tsourceMap,","\tfs",") {","\thas.add('function-name', function () {","\t\tfunction foo() {}","\t\treturn foo.name === 'foo';","\t});","","\tvar instrumentationSourceMap = {};","\tvar fileSourceMaps = {};","\tvar fileSources = {};","\tvar instrumenters = {};","","\t/**","\t * Creates a serialised representation of an object.","\t *","\t * @param {Object} object The object to serialise.","\t * @returns {string} A canonical, serialised representation of the object.","\t */","\tfunction serialize(object) {","\t\tvar indent = '';","\t\tvar output = '';","\t\tvar stack = [];","","\t\tfunction writeDate(value) {","\t\t\toutput += value.toISOString();","\t\t}","","\t\tfunction writeObject(object) {","\t\t\t// jshint maxcomplexity:12","","\t\t\tif (stack.indexOf(object) > -1) {","\t\t\t\toutput += '[Circular]';","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar isArray = Array.isArray(object);","\t\t\tvar isFunction = typeof object === 'function';","","\t\t\tif (isArray) {","\t\t\t\toutput += '[';","\t\t\t}","\t\t\telse if (isFunction) {","\t\t\t\toutput += (has('function-name') ? (object.name || '<anonymous>') : '<function>') + '({';","\t\t\t}","\t\t\telse {","\t\t\t\toutput += '{';","\t\t\t}","","\t\t\tvar keys = Object.keys(object);","","\t\t\tif (keys.length || isArray) {","\t\t\t\tstack.push(object);","\t\t\t\tindent += '  ';","","\t\t\t\tkeys.sort(function (a, b) {","\t\t\t\t\t// Sort numeric keys to the top, in numeric order, to display arrays in their natural sort order","\t\t\t\t\tif (!isNaN(a) && !isNaN(b)) {","\t\t\t\t\t\treturn a - b;","\t\t\t\t\t}","","\t\t\t\t\tif (!isNaN(a) && isNaN(b)) {","\t\t\t\t\t\treturn -1;","\t\t\t\t\t}","","\t\t\t\t\tif (isNaN(a) && !isNaN(b)) {","\t\t\t\t\t\treturn 1;","\t\t\t\t\t}","","\t\t\t\t\tif (a < b) {","\t\t\t\t\t\treturn -1;","\t\t\t\t\t}","","\t\t\t\t\tif (a > b) {","\t\t\t\t\t\treturn 1;","\t\t\t\t\t}","","\t\t\t\t\treturn 0;","\t\t\t\t}).forEach(function (key, index) {","\t\t\t\t\toutput += (index > 0 ? ',' : '') + '\\n' + indent;","\t\t\t\t\tisArray && !isNaN(key) ? writePrimitive(key) : writeString(key);","\t\t\t\t\toutput += ': ';","\t\t\t\t\twrite(object[key]);","\t\t\t\t});","","\t\t\t\tif (isArray) {","\t\t\t\t\toutput += (keys.length ? ',' : '') + '\\n' + indent;","\t\t\t\t\twritePrimitive('length');","\t\t\t\t\toutput += ': ';","\t\t\t\t\twrite(object.length);","\t\t\t\t}","","\t\t\t\toutput += '\\n';","\t\t\t\tindent = indent.slice(0, -2);","\t\t\t\tstack.pop();","","\t\t\t\toutput += indent;","\t\t\t}","","\t\t\tif (isArray) {","\t\t\t\toutput += ']';","\t\t\t}","\t\t\telse if (isFunction) {","\t\t\t\toutput += '})';","\t\t\t}","\t\t\telse {","\t\t\t\toutput += '}';","\t\t\t}","\t\t}","","\t\tfunction writePrimitive(value) {","\t\t\toutput += String(value);","\t\t}","","\t\tfunction writeString(value) {","\t\t\toutput += JSON.stringify(String(value));","\t\t}","","\t\tfunction write(value) {","\t\t\tswitch (typeof value) {","\t\t\t\tcase 'object':","\t\t\t\tcase 'function':","\t\t\t\t\tif (value === null) {","\t\t\t\t\t\twritePrimitive(value);","\t\t\t\t\t}","\t\t\t\t\telse if (value instanceof Date) {","\t\t\t\t\t\twriteDate(value);","\t\t\t\t\t}","\t\t\t\t\telse if (value instanceof RegExp) {","\t\t\t\t\t\twritePrimitive(value);","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\twriteObject(value);","\t\t\t\t\t}","\t\t\t\t\tbreak;","\t\t\t\tcase 'string':","\t\t\t\t\twriteString(value);","\t\t\t\t\tbreak;","\t\t\t\tdefault:","\t\t\t\t\twritePrimitive(value);","\t\t\t\t\tbreak;","\t\t\t}","\t\t}","","\t\twrite(object);","\t\treturn output;","\t}","","\t/**","\t * Creates a unified diff to explain the difference between two objects.","\t *","\t * @param {Object} actual The actual result.","\t * @param {Object} expected The expected result.","\t * @returns {string} A unified diff formatted string representing the difference between the two objects.","\t */","\tfunction createDiff(actual, expected) {","\t\tactual = serialize(actual);","\t\texpected = serialize(expected);","","\t\tvar diff = diffUtil","\t\t\t.createPatch('', actual + '\\n', expected + '\\n')","\t\t\t// diff header, first range information section, and EOF newline are not relevant for serialised object","\t\t\t// diffs","\t\t\t.split('\\n')","\t\t\t.slice(5, -1)","\t\t\t.join('\\n')","\t\t\t// range information is not relevant for serialised object diffs","\t\t\t.replace(/^@@[^@]*@@$/gm, '[...]');","","\t\t// If the diff is empty now, running the next replacement will cause it to have some extra whitespace, which","\t\t// makes it harder than it needs to be for callers to know if the diff is empty","\t\tif (diff) {","\t\t\t// + and - are not super clear about which lines are the expected object and which lines are the actual","\t\t\t// object, and bump directly into code with no indentation, so replace the characters and add space","\t\t\tdiff = diff.replace(/^([+-]?)(.*)$/gm, function (_, indicator, line) {","\t\t\t\tif (line === '[...]') {","\t\t\t\t\treturn line;","\t\t\t\t}","","\t\t\t\treturn (indicator === '+' ? 'E' : indicator === '-' ? 'A' : '') + ' ' + line;","\t\t\t});","\t\t}","","\t\treturn diff;","\t}","","\t/**","\t * Return the instrumenter, creating it if necessary.","\t */","\tfunction getInstrumenter(instrumenterOptions) {","\t\tinstrumenterOptions = instrumenterOptions || {};","","\t\tvar coverageVariable = instrumenterOptions.coverageVariable;","","\t\tif (!instrumenters[coverageVariable]) {","\t\t\tvar options = lang.mixin({","\t\t\t\t// coverage variable is changed primarily to avoid any jshint complaints, but also to make","\t\t\t\t// it clearer where the global is coming from","\t\t\t\tcoverageVariable: coverageVariable,","","\t\t\t\t// compacting code makes it harder to look at but it does not really matter","\t\t\t\tnoCompact: true,","","\t\t\t\t// auto-wrap breaks code","\t\t\t\tnoAutoWrap: true","\t\t\t}, instrumenterOptions);","","\t\t\tinstrumenters[coverageVariable] = new Instrumenter(options);","\t\t}","\t\treturn instrumenters[coverageVariable];","\t}","","\t/**","\t * Return a new SourceMapConsumer for a given source map string.","\t */","\tfunction loadSourceMap(data) {","\t\treturn new sourceMap.SourceMapConsumer(data);","\t}","","\t/**","\t * Get the original position of line:column based on map.","\t *","\t * Assumes mappings are is in order by generatedLine, then by generatedColumn; maps created with","\t * SourceMapConsumer.eachMapping should be in this order by default.","\t */","\tfunction getOriginalPosition(map, line, column) {","\t\tvar originalPosition = map.originalPositionFor({ line: line, column: column});","","\t\t// if the SourceMapConsumer was able to find a location, return it","\t\tif (originalPosition.line !== null) {","\t\t\treturn originalPosition;","\t\t}","","\t\tvar entries = [];","","\t\t// find all map entries that apply to the given line in the generated output","\t\tmap.eachMapping(function (entry) {","\t\t\tif (entry.generatedLine === line) {","\t\t\t\tentries.push(entry);","\t\t\t}","\t\t}, null, map.GENERATED_ORDER);","","\t\tif (entries.length === 0) {","\t\t\t// no valid mappings exist -- return the line and column arguments","\t\t\treturn { line: line, column: column };","\t\t}","","\t\toriginalPosition = entries[0];","","\t\t// Chrome/Node.js column is at the start of the term that generated the exception","\t\t// IE column is at the beginning of the expression/line with the exceptional term","\t\t// Safari column number is just after the exceptional term","\t\t//   - need to go back one element in the mapping","\t\t// Firefox, PhantomJS have no column number","\t\t//   - for no col number, find the largest original line number for the generated line","","\t\tif (column !== null) {","\t\t\t// find the most likely mapping for the given generated line and column","\t\t\tvar entry;","\t\t\tfor (var i = 1; i < entries.length; i++) {","\t\t\t\tentry = entries[i];","\t\t\t\tif (column > originalPosition.generatedColumn && column >= entry.generatedColumn) {","\t\t\t\t\toriginalPosition = entry;","\t\t\t\t}","\t\t\t}","\t\t}","","\t\treturn {","\t\t\tline: originalPosition.originalLine,","\t\t\tcolumn: originalPosition.originalColumn,","\t\t\tsource: originalPosition.source","\t\t};","\t}","","\t/**","\t * Load and process the source map for a given file.","\t */","\tfunction getSourceMap(filepath) {","\t\tvar data;","\t\tvar lines;","\t\tvar lastLine;","\t\tvar match;","\t\tvar sourceMapRegEx = /(?:\\/{2}[#@]{1,2}|\\/\\*)\\s+sourceMappingURL\\s*=\\s*(data:(?:[^;]+;)+base64,)?(\\S+)/;","","\t\tif (filepath in fileSourceMaps) {","\t\t\treturn fileSourceMaps[filepath];","\t\t}","","\t\ttry {","\t\t\tif (filepath in fileSources) {","\t\t\t\tdata = fileSources[filepath];","\t\t\t}","\t\t\telse {","\t\t\t\tdata = fs.readFileSync(filepath).toString('utf-8');","\t\t\t\tfileSources[filepath] = data;","\t\t\t}","","\t\t\tlines = data.trim().split('\\n');","\t\t\tlastLine = lines[lines.length - 1];","","\t\t\tif ((match = sourceMapRegEx.exec(lastLine))) {","\t\t\t\tif (match[1]) {","\t\t\t\t\tdata = JSON.parse((new Buffer(match[2], 'base64').toString('utf8')));","\t\t\t\t\tfileSourceMaps[filepath] = loadSourceMap(data);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\t// treat map file path as relative to the source file","\t\t\t\t\tvar mapFile = pathUtil.join(pathUtil.dirname(filepath), match[2]);","\t\t\t\t\tdata = fs.readFileSync(mapFile);","\t\t\t\t\tfileSourceMaps[filepath] = loadSourceMap(data.toString('utf-8'));","\t\t\t\t}","\t\t\t\treturn fileSourceMaps[filepath];","\t\t\t}","\t\t}","\t\tcatch (error) {","\t\t\t// this is normal for files like node.js -- just return null","\t\t\treturn null;","\t\t}","\t}","","\t/**","\t * Dereference the source from a traceline.","\t */","\tfunction getSource(tracepath) {","\t\t/* jshint maxcomplexity:13 */","\t\tvar match;","\t\tvar source;","\t\tvar line;","\t\tvar col;","\t\tvar map;","\t\tvar originalPos;","\t\tvar result;","","\t\tif (tracepath === '<anonymous>') {","\t\t\treturn 'anonymous';","\t\t}","","\t\tif (!(match = /^(.*?):(\\d+)(:\\d+)?$/.exec(tracepath))) {","\t\t\t// no line or column data","\t\t\treturn tracepath;","\t\t}","","\t\ttracepath = match[1];","\t\tline = Number(match[2]);","\t\tcol = match[3] ? Number(match[3].substring(1)) : null;","","\t\t// strip the host when we have a URL","","\t\tif ((match = /^\\w+:\\/\\/[^\\/]+\\/(.*)$/.exec(tracepath))) {","\t\t\t// resolve the URL path to a filesystem path","\t\t\ttracepath = pathUtil ? pathUtil.resolve(match[1]) : match[1];","\t\t}","","\t\tif (has('host-browser')) {","\t\t\t// no further processing in browser environments","\t\t\treturn tracepath + ':' + line + (col == null ? '' : ':' + col);","\t\t}","","\t\tsource = pathUtil.relative('.', tracepath);","","\t\t// first, check for an instrumentation source map","\t\tif (tracepath in instrumentationSourceMap) {","\t\t\tmap = instrumentationSourceMap[tracepath];","\t\t\toriginalPos = getOriginalPosition(map, line, col);","\t\t\tline = originalPos.line;","\t\t\tcol = originalPos.column;","\t\t\tif (originalPos.source) {","\t\t\t\tsource = originalPos.source;","\t\t\t}","\t\t}","","\t\t// next, check for original source map","\t\tif ((map = getSourceMap(tracepath))) {","\t\t\toriginalPos = getOriginalPosition(map, line, col);","\t\t\tline = originalPos.line;","\t\t\tcol = originalPos.column;","\t\t\tif (originalPos.source) {","\t\t\t\tsource = pathUtil.join(pathUtil.dirname(source), originalPos.source);","\t\t\t}","\t\t}","","\t\tresult = source + ':' + line;","\t\tif (col !== null) {","\t\t\tresult += ':' + col;","\t\t}","\t\treturn result;","\t}","","\t/**","\t * Return a trace line in a standardized format.","\t */","\tfunction formatLine(data) {","\t\tif (!data.func) {","\t\t\treturn '  at <' + getSource(data.source) + '>';","\t\t}","\t\treturn '  at ' + data.func + '  <' + getSource(data.source) + '>';","\t}","","\t/**","\t * Process Chrome, Opera, and IE traces.","\t */","\tfunction processChromeTrace(lines) {","\t\tvar stack = [];","\t\tvar match;","\t\tvar line;","\t\tfor (var i = 0; i < lines.length; i++) {","\t\t\tline = lines[i];","\t\t\tif ((match = /^\\s*at (.+?) \\(([^)]+)\\)$/.exec(line))) {","\t\t\t\tstack.push(formatLine({ func: match[1], source: match[2] }));","\t\t\t}","\t\t\telse if ((match = /^\\s*at (.*)/.exec(line))) {","\t\t\t\tstack.push(formatLine({ source: match[1] }));","\t\t\t}","\t\t\telse {","\t\t\t\tstack.push(line);","\t\t\t}","\t\t}","\t\treturn stack;","\t}","","\t/**","\t * Process Safari and Firefox traces.","\t */","\tfunction processSafariTrace(lines) {","\t\tvar stack = [];","\t\tvar match;","\t\tvar line;","\t\tfor (var i = 0; i < lines.length; i++) {","\t\t\tline = lines[i];","\t\t\tif ((match = /^([^@]+)@(.*)/.exec(line))) {","\t\t\t\tstack.push(formatLine({ func: match[1], source: match[2] }));","\t\t\t}","\t\t\telse if ((match = /^(\\w+:\\/\\/.*)/.exec(line))) {","\t\t\t\tstack.push(formatLine({ source: match[1] }));","\t\t\t}","\t\t\telse {","\t\t\t\tstack.push(line);","\t\t\t}","\t\t}","\t\treturn stack;","\t}","","\t/**","\t * Parse a stack trace, apply any source mappings, and normalize its format.","\t */","\tfunction normalizeStackTrace(stack, filterStack) {","\t\tvar lines = stack.replace(/\\s+$/, '').split('\\n');","\t\tvar firstLine = '';","","\t\tif (/^(?:[A-Z]\\w+)?Error: /.test(lines[0])) {","\t\t\t// ignore the first line if it's just the Error name","\t\t\tfirstLine = lines[0] + '\\n';","\t\t\tlines = lines.slice(1);","\t\t}","","\t\t// strip leading blank lines","\t\twhile (/^\\s*$/.test(lines[0])) {","\t\t\tlines = lines.slice(1);","\t\t}","","\t\tstack = /^\\s*at /.test(lines[0]) ? processChromeTrace(lines) : processSafariTrace(lines);","","\t\tif (filterStack) {","\t\t\tstack = stack.filter(function (line) {","\t\t\t\treturn !(","\t\t\t\t\t/internal\\/process\\//.test(line) ||","\t\t\t\t\t/browser_modules\\//.test(line) ||","\t\t\t\t\t/node_modules\\//.test(line)","\t\t\t\t);","\t\t\t});","\t\t}","","\t\treturn '\\n' + firstLine + stack.join('\\n');","\t}","","\tfunction isAbsoluteUrl(url) {","\t\treturn /^(?:\\w+:)?\\/\\//.test(url);","\t}","","\t/**","\t * Return true if the module ID is a glob expression. This is similar to node-glob.hasMagic, but considers some","\t * special cases for AMD identifiers, like 'dojo/has!host-node?fs'.","\t */","\tfunction isGlobModuleId(moduleId) {","\t\t// Ignore empty moduleIds, absolute URLs, and loader plugins, where a loader plugin MID contains a '!' after a","\t\t// word character, and the '!' is not immediately followed by a parenthesized expression.","\t\tif (!moduleId || isAbsoluteUrl(moduleId) || /\\w!(?!\\([^)]+\\))/.test(moduleId)) {","\t\t\treturn false;","\t\t}","","\t\t// Return true if a glob special character or pattern is present in the module ID. Recognized patterns are","\t\t// approximately those of node-glob (see https://github.com/isaacs/node-glob).","\t\treturn moduleId.indexOf('*') !== -1 ||","\t\t\tmoduleId.indexOf('?') !== -1 ||","\t\t\t/\\[[^\\]]+\\]/.test(moduleId) ||","\t\t\t/{[^}]+}/.test(moduleId) ||","\t\t\t/[!?+*@]\\([^)]+\\)/.test(moduleId);","\t}","","\t/**","\t * @borrows serialize as serialize","\t */","\treturn {","\t\tserialize: serialize,","","\t\tisAbsoluteUrl: isAbsoluteUrl,","","\t\tassertSafeModuleId: function (moduleId) {","\t\t\tif (isAbsoluteUrl(moduleId)) {","\t\t\t\tthrow new Error('Cross-origin loading of test modules is not allowed for security reasons');","\t\t\t}","\t\t},","","\t\tisGlobModuleId: isGlobModuleId,","","\t\t/**","\t\t * Create a Deferred with some additional utility methods.","\t\t */","\t\tcreateDeferred: function () {","\t\t\tvar dfd = new Promise.Deferred(function (reason) {","\t\t\t\tthrow reason;","\t\t\t});","","\t\t\t/**","\t\t\t * Wraps any callback to resolve the deferred so long as the callback executes without throwing any Errors.","\t\t\t */","\t\t\tdfd.callback = function (callback) {","\t\t\t\tvar self = this;","\t\t\t\treturn self.rejectOnError(function () {","\t\t\t\t\tvar returnValue = callback.apply(this, arguments);","\t\t\t\t\tself.resolve();","\t\t\t\t\treturn returnValue;","\t\t\t\t});","\t\t\t};","","\t\t\t/**","\t\t\t * Wraps a callback to reject the deferred if the callback throws an Error.","\t\t\t */","\t\t\tdfd.rejectOnError = function (callback) {","\t\t\t\tvar self = this;","\t\t\t\treturn function () {","\t\t\t\t\ttry {","\t\t\t\t\t\treturn callback.apply(this, arguments);","\t\t\t\t\t}","\t\t\t\t\tcatch (error) {","\t\t\t\t\t\tself.reject(error);","\t\t\t\t\t}","\t\t\t\t};","\t\t\t};","","\t\t\treturn dfd;","\t\t},","","\t\t/**","\t\t * Creates a basic FIFO function queue to limit the number of currently executing asynchronous functions.","\t\t *","\t\t * @param maxConcurrency Number of functions to execute at once.","\t\t * @returns {function(callee:Function)} A function that can be used to push new functions onto the queue.","\t\t */","\t\tcreateQueue: function (/**number*/ maxConcurrency) {","\t\t\tvar numCalls = 0;","\t\t\tvar queue = [];","","\t\t\tfunction shiftQueue() {","\t\t\t\tif (queue.length) {","\t\t\t\t\tvar callee = queue.shift();","\t\t\t\t\tPromise.resolve(callee[0].apply(callee[1], callee[2])).finally(shiftQueue);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\t--numCalls;","\t\t\t\t}","\t\t\t}","","\t\t\t// Returns a function to wrap callback function in this queue","\t\t\tvar queuer = function (callee) {","\t\t\t\t// Calling the wrapped function either executes immediately if possible,","\t\t\t\t// or pushes onto the queue if not","\t\t\t\treturn function () {","\t\t\t\t\tif (numCalls < maxConcurrency) {","\t\t\t\t\t\t++numCalls;","\t\t\t\t\t\tPromise.resolve(callee.apply(this, arguments)).finally(shiftQueue);","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\tqueue.push([ callee, this, arguments ]);","\t\t\t\t\t}","\t\t\t\t};","\t\t\t};","","\t\t\tqueuer.empty = function () {","\t\t\t\tqueue = [];","\t\t\t\tnumCalls = 0;","\t\t\t};","","\t\t\treturn queuer;","\t\t},","","\t\tescapeRegExp: function (string) {","\t\t\treturn String(string).replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');","\t\t},","","\t\t/**","\t\t * Generates a full error message from a plain Error object, avoiding duplicate error messages that might be","\t\t * caused by different opinions on what a stack trace should look like.","\t\t *","\t\t * @param {Error} error An object describing the error.","\t\t * @returns {string} A string message describing the error.","\t\t */","\t\tgetErrorMessage: function (error) {","\t\t\t/* jshint maxcomplexity:14 */","\t\t\tif (error.message || error.stack) {","\t\t\t\tvar message = (error.name || 'Error') + ': ' + (error.message || 'Unknown error');","\t\t\t\tvar stack = error.stack;","","\t\t\t\tif (stack) {","\t\t\t\t\t// V8 puts the original error at the top of the stack too; avoid redundant output that may","\t\t\t\t\t// cause confusion about how many times an assertion was actually called","\t\t\t\t\tif (stack.indexOf(message) === 0) {","\t\t\t\t\t\tstack = stack.slice(message.length);","\t\t\t\t\t}","\t\t\t\t\telse if (stack.indexOf(error.message) === 0) {","\t\t\t\t\t\tstack = stack.slice(String(error.message).length);","\t\t\t\t\t}","","\t\t\t\t\tvar filterStack = intern && intern.config && intern.config.filterErrorStack;","\t\t\t\t\tstack = normalizeStackTrace(stack, filterStack);","\t\t\t\t}","","\t\t\t\tif (error.showDiff && typeof error.actual === 'object' && typeof error.expected === 'object') {","\t\t\t\t\tvar diff = createDiff(error.actual, error.expected);","\t\t\t\t\tif (diff) {","\t\t\t\t\t\tmessage += '\\n\\n' + diff + '\\n';","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\tif (stack && /\\S/.test(stack)) {","\t\t\t\t\tmessage += stack;","\t\t\t\t}","\t\t\t\telse if (error.fileName) {","\t\t\t\t\tmessage += '\\n  at ' + error.fileName;","\t\t\t\t\tif (error.lineNumber != null) {","\t\t\t\t\t\tmessage += ':' + error.lineNumber;","","\t\t\t\t\t\tif (error.columnNumber != null) {","\t\t\t\t\t\t\tmessage += ':' + error.columnNumber;","\t\t\t\t\t\t}","\t\t\t\t\t}","","\t\t\t\t\tmessage += '\\nNo stack';","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tmessage += '\\nNo stack or location';","\t\t\t\t}","","\t\t\t\treturn message;","\t\t\t}","\t\t\telse {","\t\t\t\treturn String(error);","\t\t\t}","\t\t},","","\t\tgetModule: function (moduleId, loader) {","\t\t\treturn this.getModules([ moduleId ], loader).then(function (modules) {","\t\t\t\treturn modules[0];","\t\t\t});","\t\t},","","\t\tgetModules: function (moduleIds, loader) {","\t\t\t/* global require:false */","\t\t\tif (!loader) {","\t\t\t\tloader = require;","\t\t\t}","","\t\t\treturn new Promise(function (resolve, reject) {","\t\t\t\tloader(moduleIds, function () {","\t\t\t\t\tresolve(Array.prototype.slice.call(arguments, 0));","\t\t\t\t}, reject);","\t\t\t});","\t\t},","","\t\tgetShouldWait: function (waitMode, message) {","\t\t\tvar shouldWait = false;","\t\t\tvar eventName = message[0];","","\t\t\tif (waitMode === 'fail') {","\t\t\t\tif (","\t\t\t\t\teventName === 'testFail' ||","\t\t\t\t\teventName === 'suiteError' ||","\t\t\t\t\teventName === 'fatalError'","\t\t\t\t) {","\t\t\t\t\tshouldWait = true;","\t\t\t\t}","\t\t\t}","\t\t\telse if (waitMode === true) {","\t\t\t\tshouldWait = true;","\t\t\t}","\t\t\telse if (Array.isArray(waitMode) && waitMode.indexOf(eventName) !== -1) {","\t\t\t\tshouldWait = true;","\t\t\t}","","\t\t\treturn shouldWait;","\t\t},","","\t\tnormalizePath: function (path) {","\t\t\tif (pathUtil) {","\t\t\t\treturn pathUtil.normalize(path).replace(/\\\\/g, '/');","\t\t\t}","","\t\t\tvar parts = path.replace(/\\\\/g, '/').split('/');","\t\t\tvar result = [];","\t\t\tfor (var i = 0; i < parts.length; ++i) {","\t\t\t\tvar part = parts[i];","","\t\t\t\tif (!part || part === '.') {","\t\t\t\t\tif (i === 0 || i === parts.length - 1) {","\t\t\t\t\t\tresult.push('');","\t\t\t\t\t}","","\t\t\t\t\tcontinue;","\t\t\t\t}","","\t\t\t\tif (part === '..') {","\t\t\t\t\tif (result.length && result[result.length - 1] !== '..') {","\t\t\t\t\t\tresult.pop();","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\tresult.push(part);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tresult.push(part);","\t\t\t\t}","\t\t\t}","","\t\t\treturn result.join('/');","\t\t},","","\t\tnormalizePathForInstrumentation: function (filename) {","\t\t\tfilename = pathUtil.normalize(filename);","\t\t\tif (pathUtil.sep === '\\\\') {","\t\t\t\tfilename = filename.replace(/\\\\/g, '/');","\t\t\t}","\t\t\treturn filename;","\t\t},","","\t\t/**","\t\t * Resolve a module ID that contains a glob expression.","\t\t *","\t\t * @param {string[]} moduleIds","\t\t * @returns {string[]} a list of resolved module IDs","\t\t */","\t\tresolveModuleIds: function (moduleIds) {","\t\t\tfunction moduleIdToPath(moduleId, package, packageLocation) {","\t\t\t\treturn packageLocation + moduleId.slice(package.length);","\t\t\t}","","\t\t\tfunction pathToModuleId(path, package, packageLocation) {","\t\t\t\treturn package + path.slice(packageLocation.length, path.length - 3);","\t\t\t}","","\t\t\tif (!moduleIds) {","\t\t\t\treturn moduleIds;","\t\t\t}","","\t\t\t// The module ID has a glob character","\t\t\treturn moduleIds.reduce(function (resolved, moduleId) {","\t\t\t\tif (isGlobModuleId(moduleId)) {","\t\t\t\t\tvar package = moduleId.slice(0, moduleId.indexOf('/'));","\t\t\t\t\tvar packageLocation = require.toUrl(package);","\t\t\t\t\tvar modulePath = moduleIdToPath(moduleId, package, packageLocation);","","\t\t\t\t\t// Ensure only JS files are considered","\t\t\t\t\tif (!/\\.js$/.test(modulePath)) {","\t\t\t\t\t\tmodulePath += '.js';","\t\t\t\t\t}","","\t\t\t\t\tglob.sync(modulePath).forEach(function (file) {","\t\t\t\t\t\tresolved.push(pathToModuleId(file, package, packageLocation));","\t\t\t\t\t});","\t\t\t\t}","\t\t\t\t// The module ID is an actual ID","\t\t\t\telse {","\t\t\t\t\tresolved.push(moduleId);","\t\t\t\t}","","\t\t\t\treturn resolved;","\t\t\t}, []);","\t\t},","","\t\tretry: function (callback, numRetries) {","\t\t\tvar numAttempts = 0;","\t\t\treturn callback().catch(function retry(error) {","\t\t\t\tif (error.name !== 'CancelError' && ++numAttempts <= numRetries) {","\t\t\t\t\treturn callback().catch(retry);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tthrow error;","\t\t\t\t}","\t\t\t});","\t\t},","","\t\t/**","\t\t * Adds hooks for code coverage instrumentation in the Node.js loader.","\t\t *","\t\t * @param {RegExp|boolean} excludeInstrumentation A RegExp or boolean used to decide whether to apply","\t\t * instrumentation","\t\t * @param {string} basePath The base path for all code","\t\t * @param {Object} instrumenterOptions Extra options for the instrumenter","\t\t */","\t\tsetInstrumentationHooks: function (excludeInstrumentation, basePath, instrumenterOptions) {","\t\t\tvar self = this;","","\t\t\tbasePath = self.normalizePath(pathUtil.resolve(basePath || '') + pathUtil.sep);","","\t\t\tfunction hookMatcher(filename) {","\t\t\t\tfilename = self.normalizePath(filename);","","\t\t\t\treturn !excludeInstrumentation || (","\t\t\t\t\tfilename.indexOf(basePath) === 0 &&","\t\t\t\t\t// if the string passed to `excludeInstrumentation` changes here, it must also change in","\t\t\t\t\t// `lib/Proxy.js`","\t\t\t\t\t!excludeInstrumentation.test(filename.slice(basePath.length))","\t\t\t\t);","\t\t\t}","","\t\t\tfunction hookTransformer(code, filename) {","\t\t\t\treturn self.instrument(code, pathUtil.resolve(filename), instrumenterOptions);","\t\t\t}","","\t\t\thook.hookRunInThisContext(hookMatcher, hookTransformer);","\t\t\thook.hookRequire(hookMatcher, hookTransformer);","","\t\t\treturn {","\t\t\t\tremove: function () {","\t\t\t\t\tthis.remove = function () {};","\t\t\t\t\thook.unhookRunInThisContext();","\t\t\t\t\thook.unhookRequire();","\t\t\t\t}","\t\t\t};","\t\t},","","\t\t/**","\t\t * Instrument a given file, saving its coverage source map.","\t\t *","\t\t * @param {string} filedata Text of file being instrumented","\t\t * @param {string} filepath Full path of file being instrumented","\t\t * @param {Object} instrumenterOptions Extra options for the instrumenter","\t\t *","\t\t * @returns {string} A string of instrumented code","\t\t */","\t\tinstrument: function (filedata, filepath, instrumenterOptions) {","\t\t\tvar instrumenter = getInstrumenter(instrumenterOptions);","\t\t\tvar options = instrumenter.opts;","","\t\t\t// Assign to options.codeGenerationOptions to handle the case where codeGenerationOptions is null","\t\t\toptions.codeGenerationOptions = lang.mixin(options.codeGenerationOptions, {","\t\t\t\tsourceMap: pathUtil.normalize(filepath),","\t\t\t\tsourceMapWithCode: true","\t\t\t});","","\t\t\tvar code = instrumenter.instrumentSync(filedata, pathUtil.normalize(filepath));","\t\t\tvar map = instrumenter.lastSourceMap();","","\t\t\tif (map) {","\t\t\t\tinstrumentationSourceMap[filepath] = loadSourceMap(map.toString());","\t\t\t\tfileSources[filepath] = filedata;","\t\t\t}","","\t\t\treturn code;","\t\t}","\t};","});",""],"l":{"2":1,"29":0,"30":1,"31":0,"34":0,"35":0,"36":0,"37":0,"45":1,"46":0,"47":0,"48":0,"50":1,"51":0,"54":1,"57":0,"58":0,"59":0,"62":0,"63":0,"65":0,"66":0,"68":0,"69":0,"72":0,"75":0,"77":0,"78":0,"79":0,"81":0,"83":0,"84":0,"87":0,"88":0,"91":0,"92":0,"95":0,"96":0,"99":0,"100":0,"103":0,"105":0,"106":0,"107":0,"108":0,"111":0,"112":0,"113":0,"114":0,"115":0,"118":0,"119":0,"120":0,"122":0,"125":0,"126":0,"128":0,"129":0,"132":0,"136":1,"137":0,"140":1,"141":0,"144":1,"145":0,"148":0,"149":0,"151":0,"152":0,"154":0,"155":0,"158":0,"160":0,"162":0,"163":0,"165":0,"166":0,"170":0,"171":0,"181":1,"182":0,"183":0,"185":0,"197":0,"200":0,"201":0,"202":0,"205":0,"209":0,"215":1,"216":0,"218":0,"220":0,"221":0,"233":0,"235":0,"241":1,"242":0,"251":1,"252":0,"255":0,"256":0,"259":0,"262":0,"263":0,"264":0,"268":0,"270":0,"273":0,"282":0,"284":0,"285":0,"286":0,"287":0,"288":0,"293":0,"303":1,"304":0,"305":0,"306":0,"307":0,"308":0,"310":0,"311":0,"314":0,"315":0,"316":0,"319":0,"320":0,"323":0,"324":0,"326":0,"327":0,"328":0,"329":0,"333":0,"334":0,"335":0,"337":0,"342":0,"349":1,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"359":0,"360":0,"363":0,"365":0,"368":0,"369":0,"370":0,"374":0,"376":0,"379":0,"381":0,"384":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"407":0,"408":0,"409":0,"411":0,"417":1,"418":0,"419":0,"421":0,"427":1,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"436":0,"437":0,"440":0,"443":0,"449":1,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"458":0,"459":0,"462":0,"465":0,"471":1,"472":0,"473":0,"475":0,"477":0,"478":0,"482":0,"483":0,"486":0,"488":0,"489":0,"490":0,"498":0,"501":1,"502":0,"509":1,"512":0,"513":0,"518":0,"528":0,"534":0,"535":0,"545":0,"546":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"564":0,"565":0,"566":0,"567":0,"568":0,"571":0,"576":0,"586":0,"587":0,"589":1,"590":0,"591":0,"592":0,"595":0,"600":0,"603":0,"604":0,"605":0,"606":0,"609":0,"614":0,"615":0,"616":0,"619":0,"623":0,"635":0,"636":0,"637":0,"639":0,"642":0,"643":0,"645":0,"646":0,"649":0,"650":0,"653":0,"654":0,"655":0,"656":0,"660":0,"661":0,"663":0,"664":0,"665":0,"666":0,"668":0,"669":0,"673":0,"676":0,"679":0,"682":0,"687":0,"688":0,"694":0,"695":0,"698":0,"699":0,"700":0,"706":0,"707":0,"709":0,"710":0,"715":0,"718":0,"719":0,"721":0,"722":0,"725":0,"729":0,"730":0,"733":0,"734":0,"735":0,"736":0,"738":0,"739":0,"740":0,"743":0,"746":0,"747":0,"748":0,"751":0,"755":0,"759":0,"763":0,"764":0,"765":0,"767":0,"777":1,"778":0,"781":1,"782":0,"785":0,"786":0,"790":0,"791":0,"792":0,"793":0,"794":0,"797":0,"798":0,"801":0,"802":0,"807":0,"810":0,"815":0,"816":0,"817":0,"818":0,"821":0,"835":0,"837":0,"839":1,"840":0,"842":0,"850":1,"851":0,"854":0,"855":0,"857":0,"859":0,"860":0,"861":0,"876":0,"877":0,"880":0,"885":0,"886":0,"888":0,"889":0,"890":0,"893":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/support/fixdeps.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/support/fixdeps.js","s":{"1":1,"2":1,"3":1,"4":1,"5":12,"6":12,"7":1,"8":0,"9":1,"10":6,"11":6,"12":6,"13":6,"14":6,"15":6,"16":6,"17":0,"18":0,"19":6,"20":0,"21":0,"22":6,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},"b":{"1":[0,1],"2":[0,0],"3":[0,6],"4":[6,6],"5":[0,6],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":12,"2":6,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"getPackageVersion","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":74},"end":{"line":17,"column":96}}},"3":{"name":"copy","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":30}}},"4":{"name":"(anonymous_4)","line":67,"loc":{"start":{"line":67,"column":33},"end":{"line":67,"column":53}}},"5":{"name":"unlink","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":24}}},"6":{"name":"(anonymous_6)","line":89,"loc":{"start":{"line":89,"column":33},"end":{"line":89,"column":53}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":67}},"4":{"start":{"line":6,"column":0},"end":{"line":9,"column":1}},"5":{"start":{"line":7,"column":1},"end":{"line":7,"column":74}},"6":{"start":{"line":8,"column":1},"end":{"line":8,"column":40}},"7":{"start":{"line":11,"column":0},"end":{"line":13,"column":1}},"8":{"start":{"line":12,"column":1},"end":{"line":12,"column":30}},"9":{"start":{"line":17,"column":0},"end":{"line":43,"column":3}},"10":{"start":{"line":18,"column":1},"end":{"line":18,"column":74}},"11":{"start":{"line":19,"column":1},"end":{"line":19,"column":47}},"12":{"start":{"line":20,"column":1},"end":{"line":20,"column":58}},"13":{"start":{"line":21,"column":1},"end":{"line":21,"column":55}},"14":{"start":{"line":22,"column":1},"end":{"line":22,"column":21}},"15":{"start":{"line":24,"column":1},"end":{"line":31,"column":2}},"16":{"start":{"line":25,"column":2},"end":{"line":25,"column":79}},"17":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"18":{"start":{"line":29,"column":3},"end":{"line":29,"column":15}},"19":{"start":{"line":34,"column":1},"end":{"line":37,"column":2}},"20":{"start":{"line":35,"column":2},"end":{"line":35,"column":23}},"21":{"start":{"line":36,"column":2},"end":{"line":36,"column":25}},"22":{"start":{"line":40,"column":1},"end":{"line":42,"column":2}},"23":{"start":{"line":41,"column":2},"end":{"line":41,"column":36}},"24":{"start":{"line":45,"column":0},"end":{"line":74,"column":1}},"25":{"start":{"line":46,"column":1},"end":{"line":55,"column":2}},"26":{"start":{"line":47,"column":2},"end":{"line":47,"column":34}},"27":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"28":{"start":{"line":51,"column":3},"end":{"line":51,"column":15}},"29":{"start":{"line":54,"column":2},"end":{"line":54,"column":9}},"30":{"start":{"line":57,"column":1},"end":{"line":73,"column":2}},"31":{"start":{"line":58,"column":2},"end":{"line":65,"column":3}},"32":{"start":{"line":59,"column":3},"end":{"line":59,"column":24}},"33":{"start":{"line":62,"column":3},"end":{"line":64,"column":4}},"34":{"start":{"line":63,"column":4},"end":{"line":63,"column":16}},"35":{"start":{"line":67,"column":2},"end":{"line":69,"column":5}},"36":{"start":{"line":68,"column":3},"end":{"line":68,"column":66}},"37":{"start":{"line":71,"column":6},"end":{"line":73,"column":2}},"38":{"start":{"line":72,"column":2},"end":{"line":72,"column":74}},"39":{"start":{"line":76,"column":0},"end":{"line":97,"column":1}},"40":{"start":{"line":77,"column":1},"end":{"line":86,"column":2}},"41":{"start":{"line":78,"column":2},"end":{"line":78,"column":34}},"42":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"43":{"start":{"line":82,"column":3},"end":{"line":82,"column":15}},"44":{"start":{"line":85,"column":2},"end":{"line":85,"column":9}},"45":{"start":{"line":88,"column":1},"end":{"line":96,"column":2}},"46":{"start":{"line":89,"column":2},"end":{"line":91,"column":5}},"47":{"start":{"line":90,"column":3},"end":{"line":90,"column":39}},"48":{"start":{"line":92,"column":2},"end":{"line":92,"column":23}},"49":{"start":{"line":94,"column":6},"end":{"line":96,"column":2}},"50":{"start":{"line":95,"column":2},"end":{"line":95,"column":24}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":0},"end":{"line":11,"column":0}},{"start":{"line":11,"column":0},"end":{"line":11,"column":0}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},{"start":{"line":34,"column":1},"end":{"line":34,"column":1}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":5},"end":{"line":34,"column":20}},{"start":{"line":34,"column":24},"end":{"line":34,"column":60}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},{"start":{"line":40,"column":1},"end":{"line":40,"column":1}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"7":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},{"start":{"line":57,"column":1},"end":{"line":57,"column":1}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":3},"end":{"line":62,"column":3}},{"start":{"line":62,"column":3},"end":{"line":62,"column":3}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":6}},{"start":{"line":71,"column":6},"end":{"line":71,"column":6}}]},"10":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"11":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":1},"end":{"line":88,"column":1}},{"start":{"line":88,"column":1},"end":{"line":88,"column":1}}]},"12":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":6},"end":{"line":94,"column":6}},{"start":{"line":94,"column":6},"end":{"line":94,"column":6}}]}},"code":["/*jshint node:true */","var fs = require('fs');","var path = require('path');","var browserModules = path.join(__dirname, '..', 'browser_modules');","","function getPackageVersion(packageJsonPath) {","\tvar packageJson = fs.readFileSync(packageJsonPath, { encoding: 'utf8' });","\treturn JSON.parse(packageJson).version;","}","","if (!fs.existsSync(browserModules)) {","\tfs.mkdirSync(browserModules);","}","","// AMD-loaded dependencies need to exist in a known location, but npm's deduplication process can make final package","// locations unpredictable, so copy the currently installed versions of required packages into browser_modules.","[ 'dojo', 'chai', 'diff', 'benchmark', 'lodash-amd', 'platform' ].forEach(function (dependency) {","\tvar packageJson = require.resolve(path.join(dependency, 'package.json'));","\tvar installedPath = path.dirname(packageJson);","\tvar expectedPath = path.join(browserModules, dependency);","\tvar installedVersion = getPackageVersion(packageJson);","\tvar existingVersion;","","\ttry {","\t\texistingVersion = getPackageVersion(path.join(expectedPath, 'package.json'));","\t}","\tcatch (error) {","\t\tif (error.code !== 'ENOENT') {","\t\t\tthrow error;","\t\t}","\t}","","\t// The package in browser_modules is older than the installed version; delete it","\tif (existingVersion && existingVersion !== installedVersion) {","\t\tunlink(expectedPath);","\t\texistingVersion = null;","\t}","","\t// The package isn't in browser_modules, so copy the installed one","\tif (!existingVersion) {","\t\tcopy(installedPath, expectedPath);","\t}","});","","function copy(source, target) {","\ttry {","\t\tvar stats = fs.statSync(source);","\t}","\tcatch (error) {","\t\tif (error.code !== 'ENOENT') {","\t\t\tthrow error;","\t\t}","","\t\treturn;","\t}","","\tif (stats.isDirectory()) {","\t\ttry {","\t\t\tfs.mkdirSync(target);","\t\t}","\t\tcatch (error) {","\t\t\tif (error.code !== 'EEXIST') {","\t\t\t\tthrow error;","\t\t\t}","\t\t}","","\t\tfs.readdirSync(source).forEach(function (filename) {","\t\t\tcopy(path.join(source, filename), path.join(target, filename));","\t\t});","\t}","\telse if (stats.isFile()) {","\t\tfs.writeFileSync(target, fs.readFileSync(source), { mode: stats.mode });","\t}","}","","function unlink(target) {","\ttry {","\t\tvar stats = fs.statSync(target);","\t}","\tcatch (error) {","\t\tif (error.code !== 'ENOENT') {","\t\t\tthrow error;","\t\t}","","\t\treturn;","\t}","","\tif (stats.isDirectory()) {","\t\tfs.readdirSync(target).forEach(function (filename) {","\t\t\tunlink(path.join(target, filename));","\t\t});","\t\tfs.rmdirSync(target);","\t}","\telse if (stats.isFile()) {","\t\tfs.unlinkSync(target);","\t}","}",""],"l":{"2":1,"3":1,"4":1,"6":1,"7":12,"8":12,"11":1,"12":0,"17":1,"18":6,"19":6,"20":6,"21":6,"22":6,"24":6,"25":6,"28":0,"29":0,"34":6,"35":0,"36":0,"40":6,"41":0,"45":1,"46":0,"47":0,"50":0,"51":0,"54":0,"57":0,"58":0,"59":0,"62":0,"63":0,"67":0,"68":0,"71":0,"72":0,"76":1,"77":0,"78":0,"81":0,"82":0,"85":0,"88":0,"89":0,"90":0,"92":0,"94":0,"95":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/tasks/intern.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/tasks/intern.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":34}}},"2":{"name":"logOutput","line":4,"loc":{"start":{"line":4,"column":1},"end":{"line":4,"column":26}}},"3":{"name":"readOutput","line":30,"loc":{"start":{"line":30,"column":1},"end":{"line":30,"column":27}}},"4":{"name":"serialize","line":46,"loc":{"start":{"line":46,"column":1},"end":{"line":46,"column":26}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":35},"end":{"line":54,"column":47}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":28},"end":{"line":85,"column":46}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":40},"end":{"line":93,"column":57}}},"8":{"name":"(anonymous_8)","line":117,"loc":{"start":{"line":117,"column":12},"end":{"line":117,"column":30}}},"9":{"name":"(anonymous_9)","line":134,"loc":{"start":{"line":134,"column":5},"end":{"line":134,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":143,"column":2}},"2":{"start":{"line":4,"column":1},"end":{"line":28,"column":2}},"3":{"start":{"line":5,"column":2},"end":{"line":5,"column":22}},"4":{"start":{"line":7,"column":2},"end":{"line":23,"column":3}},"5":{"start":{"line":8,"column":3},"end":{"line":10,"column":29}},"6":{"start":{"line":11,"column":3},"end":{"line":16,"column":4}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":47}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":35}},"9":{"start":{"line":18,"column":7},"end":{"line":23,"column":3}},"10":{"start":{"line":19,"column":3},"end":{"line":19,"column":16}},"11":{"start":{"line":21,"column":7},"end":{"line":23,"column":3}},"12":{"start":{"line":22,"column":3},"end":{"line":22,"column":19}},"13":{"start":{"line":25,"column":2},"end":{"line":25,"column":61}},"14":{"start":{"line":26,"column":2},"end":{"line":26,"column":58}},"15":{"start":{"line":27,"column":2},"end":{"line":27,"column":25}},"16":{"start":{"line":30,"column":1},"end":{"line":44,"column":2}},"17":{"start":{"line":31,"column":2},"end":{"line":32,"column":8}},"18":{"start":{"line":34,"column":2},"end":{"line":34,"column":22}},"19":{"start":{"line":35,"column":2},"end":{"line":35,"column":35}},"20":{"start":{"line":37,"column":2},"end":{"line":41,"column":3}},"21":{"start":{"line":38,"column":3},"end":{"line":38,"column":49}},"22":{"start":{"line":39,"column":3},"end":{"line":39,"column":20}},"23":{"start":{"line":40,"column":3},"end":{"line":40,"column":36}},"24":{"start":{"line":43,"column":2},"end":{"line":43,"column":31}},"25":{"start":{"line":46,"column":1},"end":{"line":52,"column":2}},"26":{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},"27":{"start":{"line":48,"column":3},"end":{"line":48,"column":31}},"28":{"start":{"line":51,"column":2},"end":{"line":51,"column":14}},"29":{"start":{"line":54,"column":1},"end":{"line":142,"column":4}},"30":{"start":{"line":55,"column":2},"end":{"line":73,"column":5}},"31":{"start":{"line":75,"column":2},"end":{"line":83,"column":3}},"32":{"start":{"line":77,"column":3},"end":{"line":82,"column":4}},"33":{"start":{"line":78,"column":4},"end":{"line":78,"column":58}},"34":{"start":{"line":81,"column":4},"end":{"line":81,"column":35}},"35":{"start":{"line":85,"column":2},"end":{"line":105,"column":5}},"36":{"start":{"line":86,"column":3},"end":{"line":88,"column":4}},"37":{"start":{"line":87,"column":4},"end":{"line":87,"column":11}},"38":{"start":{"line":90,"column":3},"end":{"line":90,"column":28}},"39":{"start":{"line":92,"column":3},"end":{"line":104,"column":4}},"40":{"start":{"line":93,"column":4},"end":{"line":95,"column":7}},"41":{"start":{"line":94,"column":5},"end":{"line":94,"column":48}},"42":{"start":{"line":97,"column":8},"end":{"line":104,"column":4}},"43":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"44":{"start":{"line":99,"column":5},"end":{"line":99,"column":23}},"45":{"start":{"line":103,"column":4},"end":{"line":103,"column":47}},"46":{"start":{"line":107,"column":2},"end":{"line":122,"column":5}},"47":{"start":{"line":118,"column":3},"end":{"line":118,"column":28}},"48":{"start":{"line":119,"column":3},"end":{"line":121,"column":4}},"49":{"start":{"line":120,"column":4},"end":{"line":120,"column":63}},"50":{"start":{"line":125,"column":2},"end":{"line":125,"column":25}},"51":{"start":{"line":127,"column":2},"end":{"line":138,"column":5}},"52":{"start":{"line":137,"column":3},"end":{"line":137,"column":83}},"53":{"start":{"line":140,"column":2},"end":{"line":140,"column":38}},"54":{"start":{"line":141,"column":2},"end":{"line":141,"column":38}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":3},"end":{"line":11,"column":3}},{"start":{"line":11,"column":3},"end":{"line":11,"column":3}}]},"3":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":32},"end":{"line":12,"column":36}},{"start":{"line":12,"column":39},"end":{"line":12,"column":46}}]},"4":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":20},"end":{"line":15,"column":27}},{"start":{"line":15,"column":30},"end":{"line":15,"column":34}}]},"5":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":7},"end":{"line":18,"column":7}},{"start":{"line":18,"column":7},"end":{"line":18,"column":7}}]},"6":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":7},"end":{"line":21,"column":7}},{"start":{"line":21,"column":7},"end":{"line":21,"column":7}}]},"7":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":19}},{"start":{"line":25,"column":23},"end":{"line":25,"column":60}}]},"8":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":16}},{"start":{"line":26,"column":20},"end":{"line":26,"column":57}}]},"9":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"10":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"11":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":3},"end":{"line":77,"column":3}},{"start":{"line":77,"column":3},"end":{"line":77,"column":3}}]},"12":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":3},"end":{"line":86,"column":3}},{"start":{"line":86,"column":3},"end":{"line":86,"column":3}}]},"13":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":3},"end":{"line":92,"column":3}},{"start":{"line":92,"column":3},"end":{"line":92,"column":3}}]},"14":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":8}},{"start":{"line":97,"column":8},"end":{"line":97,"column":8}}]},"15":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"16":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":3},"end":{"line":119,"column":3}},{"start":{"line":119,"column":3},"end":{"line":119,"column":3}}]},"17":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":9},"end":{"line":131,"column":17}},{"start":{"line":131,"column":21},"end":{"line":131,"column":34}}]},"18":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":16},"end":{"line":137,"column":74}},{"start":{"line":137,"column":77},"end":{"line":137,"column":81}}]}},"code":["/*jshint node:true */","","module.exports = function (grunt) {","\tfunction logOutput(line) {","\t\tvar state = 'write';","","\t\tif (/(\\d+)\\/(\\d+) tests (pass|fail)/.test(line)) {","\t\t\tvar match = /(\\d+)\\/(\\d+) tests (pass|fail)/.exec(line),","\t\t\t\tcount = Number(match[1]),","\t\t\t\ttotal = Number(match[2]);","\t\t\tif (match[3] === 'pass') {","\t\t\t\tstate = (count === total) ? 'ok' : 'error';","\t\t\t}","\t\t\telse {","\t\t\t\tstate = count ? 'error' : 'ok';","\t\t\t}","\t\t}","\t\telse if (/\\bPASS/.test(line)) {","\t\t\tstate = 'ok';","\t\t}","\t\telse if (/\\bFAIL/.test(line)) {","\t\t\tstate = 'error';","\t\t}","","\t\tstate === 'error' && grunt.event.emit('intern.fail', line);","\t\tstate === 'ok' && grunt.event.emit('intern.pass', line);","\t\tgrunt.log[state](line);","\t}","","\tfunction readOutput(data) {","\t\tvar start = 0,","\t\t\tnext;","","\t\tdata = String(data);","\t\tnext = data.indexOf('\\n', start);","","\t\twhile (next !== -1) {","\t\t\tlogOutput(data.substring(start, next) + '\\n');","\t\t\tstart = next + 1;","\t\t\tnext = data.indexOf('\\n', start);","\t\t}","","\t\tlogOutput(data.slice(start));","\t}","","\tfunction serialize(data) {","\t\tif (typeof data === 'object') {","\t\t\treturn JSON.stringify(data);","\t\t}","","\t\treturn data;","\t}","","\tgrunt.registerMultiTask('intern', function () {","\t\tvar done = this.async(),","\t\t\topts = this.options({ runType: 'client' }),","\t\t\targs = [ require('path').join(__dirname, '..') + '/' + opts.runType + '.js' ],","\t\t\tenv = Object.create(process.env),","\t\t\tskipOptions = {","\t\t\t\tbrowserstackAccessKey: true,","\t\t\t\tbrowserstackUsername: true,","\t\t\t\tcbtApikey: true,","\t\t\t\tcbtUsername: true,","\t\t\t\trunType: true,","\t\t\t\tsauceAccessKey: true,","\t\t\t\tsauceUsername: true,","\t\t\t\ttestingbotKey: true,","\t\t\t\ttestingbotSecret: true,","\t\t\t\tnodeEnv: true,","\t\t\t\tcwd: true,","\t\t\t\t// --harmony, etc.","\t\t\t\tnodeOptions: true","\t\t\t};","","\t\tif (opts.nodeOptions) {","\t\t\t// Node Options need to go at the beginning","\t\t\tif (Array.isArray(opts.nodeOptions)) {","\t\t\t\tArray.prototype.unshift.apply(args, opts.nodeOptions);","\t\t\t}","\t\t\telse {","\t\t\t\targs.unshift(opts.nodeOptions);","\t\t\t}","\t\t}","","\t\tObject.keys(opts).forEach(function (option) {","\t\t\tif (skipOptions[option]) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar value = opts[option];","","\t\t\tif (Array.isArray(value)) {","\t\t\t\tgrunt.util._.flatten(value).forEach(function (value) {","\t\t\t\t\targs.push(option + '=' + serialize(value));","\t\t\t\t});","\t\t\t}","\t\t\telse if (typeof value === 'boolean') {","\t\t\t\tif (value) {","\t\t\t\t\targs.push(option);","\t\t\t\t}","\t\t\t}","\t\t\telse {","\t\t\t\targs.push(option + '=' + serialize(value));","\t\t\t}","\t\t});","","\t\t[","\t\t\t'browserstackAccessKey',","\t\t\t'browserstackUsername',","\t\t\t'cbtApikey',","\t\t\t'cbtUsername',","\t\t\t'sauceAccessKey',","\t\t\t'sauceUsername',","\t\t\t'testingbotKey',","\t\t\t'testingbotSecret',","\t\t\t'nodeEnv'","\t\t].forEach(function (option) {","\t\t\tvar value = opts[option];","\t\t\tif (value) {","\t\t\t\tenv[option.replace(/[A-Z]/g, '_$&').toUpperCase()] = value;","\t\t\t}","\t\t});","","\t\t// force colored output for istanbul report","\t\tenv.FORCE_COLOR = true;","","\t\tvar child = grunt.util.spawn({","\t\t\tcmd: process.argv[0],","\t\t\targs: args,","\t\t\topts: {","\t\t\t\tcwd: opts.cwd || process.cwd(),","\t\t\t\tenv: env","\t\t\t}","\t\t}, function (error) {","\t\t\t// The error object from grunt.util.spawn contains information","\t\t\t// that we already logged, so hide it from the user","\t\t\tdone(error ? new Error('Test failure; check output above for details.') : null);","\t\t});","","\t\tchild.stdout.on('data', readOutput);","\t\tchild.stderr.on('data', readOutput);","\t});","};",""],"l":{"3":1,"4":1,"5":0,"7":0,"8":0,"11":0,"12":0,"15":0,"18":0,"19":0,"21":0,"22":0,"25":0,"26":0,"27":0,"30":1,"31":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"43":0,"46":1,"47":0,"48":0,"51":0,"54":0,"55":0,"75":0,"77":0,"78":0,"81":0,"85":0,"86":0,"87":0,"90":0,"92":0,"93":0,"94":0,"97":0,"98":0,"99":0,"103":0,"107":0,"118":0,"119":0,"120":0,"125":0,"127":0,"137":0,"140":0,"141":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/benchmark/benchmark.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/benchmark/benchmark.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":1,"97":0,"98":0,"99":1,"100":0,"101":1,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":1,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1,"170":0,"171":0,"172":1,"173":0,"174":1,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":1,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":1,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":1,"251":0,"252":0,"253":0,"254":0,"255":1,"256":0,"257":0,"258":0,"259":0,"260":0,"261":1,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":1,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":1,"303":0,"304":0,"305":1,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":1,"322":0,"323":0,"324":0,"325":0,"326":1,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":1,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":1,"350":0,"351":0,"352":0,"353":0,"354":1,"355":0,"356":0,"357":1,"358":0,"359":0,"360":1,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":1,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":1,"400":0,"401":0,"402":0,"403":0,"404":0,"405":1,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":1,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":1,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":1,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":1,"497":0,"498":0,"499":1,"500":0,"501":1,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":1,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":1,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":1,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":1,"641":1,"642":1,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0},"b":{"1":[1,0,1],"2":[1,1,1,1],"3":[1,1,1,1],"4":[1,1,1,1],"5":[1,1,1,1],"6":[1,0],"7":[1,1,0,0],"8":[1,1],"9":[1,1,1],"10":[1,1,0,0],"11":[0,1],"12":[1,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0],"47":[0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0,0,0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0,0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0,0],"175":[0,0],"176":[0,0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0,0],"245":[0,0,0],"246":[0,0],"247":[0,0],"248":[1,0],"249":[1,1,1],"250":[0,0],"251":[0,0],"252":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":13}}},"2":{"name":"runInContext","line":125,"loc":{"start":{"line":125,"column":2},"end":{"line":125,"column":33}}},"3":{"name":"(anonymous_3)","line":197,"loc":{"start":{"line":197,"column":5},"end":{"line":197,"column":16}}},"4":{"name":"(anonymous_4)","line":228,"loc":{"start":{"line":228,"column":25},"end":{"line":228,"column":37}}},"5":{"name":"Benchmark","line":356,"loc":{"start":{"line":356,"column":4},"end":{"line":356,"column":42}}},"6":{"name":"Deferred","line":399,"loc":{"start":{"line":399,"column":4},"end":{"line":399,"column":29}}},"7":{"name":"Event","line":415,"loc":{"start":{"line":415,"column":4},"end":{"line":415,"column":25}}},"8":{"name":"Suite","line":467,"loc":{"start":{"line":467,"column":4},"end":{"line":467,"column":34}}},"9":{"name":"(anonymous_9)","line":495,"loc":{"start":{"line":495,"column":50},"end":{"line":495,"column":66}}},"10":{"name":"createFunction","line":510,"loc":{"start":{"line":510,"column":4},"end":{"line":510,"column":30}}},"11":{"name":"(anonymous_11)","line":512,"loc":{"start":{"line":512,"column":23},"end":{"line":512,"column":44}}},"12":{"name":"delay","line":535,"loc":{"start":{"line":535,"column":4},"end":{"line":535,"column":30}}},"13":{"name":"destroyElement","line":545,"loc":{"start":{"line":545,"column":4},"end":{"line":545,"column":37}}},"14":{"name":"getFirstArgument","line":557,"loc":{"start":{"line":557,"column":4},"end":{"line":557,"column":34}}},"15":{"name":"getMean","line":569,"loc":{"start":{"line":569,"column":4},"end":{"line":569,"column":29}}},"16":{"name":"(anonymous_16)","line":570,"loc":{"start":{"line":570,"column":31},"end":{"line":570,"column":48}}},"17":{"name":"getSource","line":582,"loc":{"start":{"line":582,"column":4},"end":{"line":582,"column":27}}},"18":{"name":"isClassOf","line":607,"loc":{"start":{"line":607,"column":4},"end":{"line":607,"column":36}}},"19":{"name":"isHostType","line":621,"loc":{"start":{"line":621,"column":4},"end":{"line":621,"column":42}}},"20":{"name":"isStringable","line":636,"loc":{"start":{"line":636,"column":4},"end":{"line":636,"column":33}}},"21":{"name":"require","line":647,"loc":{"start":{"line":647,"column":4},"end":{"line":647,"column":25}}},"22":{"name":"runScript","line":660,"loc":{"start":{"line":660,"column":4},"end":{"line":660,"column":29}}},"23":{"name":"(anonymous_23)","line":675,"loc":{"start":{"line":675,"column":23},"end":{"line":675,"column":34}}},"24":{"name":"setOptions","line":692,"loc":{"start":{"line":692,"column":4},"end":{"line":692,"column":41}}},"25":{"name":"(anonymous_25)","line":695,"loc":{"start":{"line":695,"column":24},"end":{"line":695,"column":45}}},"26":{"name":"(anonymous_26)","line":699,"loc":{"start":{"line":699,"column":35},"end":{"line":699,"column":49}}},"27":{"name":"resolve","line":716,"loc":{"start":{"line":716,"column":4},"end":{"line":716,"column":23}}},"28":{"name":"(anonymous_28)","line":733,"loc":{"start":{"line":733,"column":21},"end":{"line":733,"column":32}}},"29":{"name":"filter","line":763,"loc":{"start":{"line":763,"column":4},"end":{"line":763,"column":37}}},"30":{"name":"(anonymous_30)","line":766,"loc":{"start":{"line":766,"column":19},"end":{"line":766,"column":35}}},"31":{"name":"(anonymous_31)","line":772,"loc":{"start":{"line":772,"column":54},"end":{"line":772,"column":69}}},"32":{"name":"(anonymous_32)","line":777,"loc":{"start":{"line":777,"column":32},"end":{"line":777,"column":48}}},"33":{"name":"formatNumber","line":792,"loc":{"start":{"line":792,"column":4},"end":{"line":792,"column":34}}},"34":{"name":"invoke","line":837,"loc":{"start":{"line":837,"column":4},"end":{"line":837,"column":35}}},"35":{"name":"execute","line":849,"loc":{"start":{"line":849,"column":6},"end":{"line":849,"column":25}}},"36":{"name":"getNext","line":868,"loc":{"start":{"line":868,"column":6},"end":{"line":868,"column":30}}},"37":{"name":"isAsync","line":915,"loc":{"start":{"line":915,"column":6},"end":{"line":915,"column":31}}},"38":{"name":"raiseIndex","line":925,"loc":{"start":{"line":925,"column":6},"end":{"line":925,"column":28}}},"39":{"name":"join","line":987,"loc":{"start":{"line":987,"column":4},"end":{"line":987,"column":50}}},"40":{"name":"(anonymous_40)","line":993,"loc":{"start":{"line":993,"column":21},"end":{"line":993,"column":42}}},"41":{"name":"abortSuite","line":1008,"loc":{"start":{"line":1008,"column":4},"end":{"line":1008,"column":26}}},"42":{"name":"add","line":1068,"loc":{"start":{"line":1068,"column":4},"end":{"line":1068,"column":36}}},"43":{"name":"cloneSuite","line":1087,"loc":{"start":{"line":1087,"column":4},"end":{"line":1087,"column":33}}},"44":{"name":"(anonymous_44)","line":1092,"loc":{"start":{"line":1092,"column":22},"end":{"line":1092,"column":43}}},"45":{"name":"filterSuite","line":1110,"loc":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":35}}},"46":{"name":"resetSuite","line":1125,"loc":{"start":{"line":1125,"column":4},"end":{"line":1125,"column":26}}},"47":{"name":"runSuite","line":1162,"loc":{"start":{"line":1162,"column":4},"end":{"line":1162,"column":31}}},"48":{"name":"(anonymous_48)","line":1173,"loc":{"start":{"line":1173,"column":19},"end":{"line":1173,"column":35}}},"49":{"name":"(anonymous_49)","line":1176,"loc":{"start":{"line":1176,"column":19},"end":{"line":1176,"column":35}}},"50":{"name":"(anonymous_50)","line":1184,"loc":{"start":{"line":1184,"column":22},"end":{"line":1184,"column":38}}},"51":{"name":"emit","line":1202,"loc":{"start":{"line":1202,"column":4},"end":{"line":1202,"column":24}}},"52":{"name":"(anonymous_52)","line":1214,"loc":{"start":{"line":1214,"column":34},"end":{"line":1214,"column":53}}},"53":{"name":"listeners","line":1232,"loc":{"start":{"line":1232,"column":4},"end":{"line":1232,"column":29}}},"54":{"name":"off","line":1265,"loc":{"start":{"line":1265,"column":4},"end":{"line":1265,"column":33}}},"55":{"name":"(anonymous_55)","line":1272,"loc":{"start":{"line":1272,"column":46},"end":{"line":1272,"column":72}}},"56":{"name":"on","line":1307,"loc":{"start":{"line":1307,"column":4},"end":{"line":1307,"column":32}}},"57":{"name":"(anonymous_57)","line":1311,"loc":{"start":{"line":1311,"column":30},"end":{"line":1311,"column":45}}},"58":{"name":"abort","line":1328,"loc":{"start":{"line":1328,"column":4},"end":{"line":1328,"column":21}}},"59":{"name":"clone","line":1367,"loc":{"start":{"line":1367,"column":4},"end":{"line":1367,"column":28}}},"60":{"name":"(anonymous_60)","line":1375,"loc":{"start":{"line":1375,"column":22},"end":{"line":1375,"column":43}}},"61":{"name":"compare","line":1391,"loc":{"start":{"line":1391,"column":4},"end":{"line":1391,"column":28}}},"62":{"name":"getScore","line":1410,"loc":{"start":{"line":1410,"column":6},"end":{"line":1410,"column":37}}},"63":{"name":"(anonymous_63)","line":1411,"loc":{"start":{"line":1411,"column":33},"end":{"line":1411,"column":53}}},"64":{"name":"getU","line":1416,"loc":{"start":{"line":1416,"column":6},"end":{"line":1416,"column":38}}},"65":{"name":"(anonymous_65)","line":1417,"loc":{"start":{"line":1417,"column":33},"end":{"line":1417,"column":53}}},"66":{"name":"getZ","line":1422,"loc":{"start":{"line":1422,"column":6},"end":{"line":1422,"column":23}}},"67":{"name":"reset","line":1444,"loc":{"start":{"line":1444,"column":4},"end":{"line":1444,"column":21}}},"68":{"name":"(anonymous_68)","line":1466,"loc":{"start":{"line":1466,"column":30},"end":{"line":1466,"column":51}}},"69":{"name":"(anonymous_69)","line":1508,"loc":{"start":{"line":1508,"column":24},"end":{"line":1508,"column":39}}},"70":{"name":"toStringBench","line":1522,"loc":{"start":{"line":1522,"column":4},"end":{"line":1522,"column":29}}},"71":{"name":"clock","line":1550,"loc":{"start":{"line":1550,"column":4},"end":{"line":1550,"column":21}}},"72":{"name":"(anonymous_72)","line":1556,"loc":{"start":{"line":1556,"column":14},"end":{"line":1556,"column":30}}},"73":{"name":"createCompiled","line":1655,"loc":{"start":{"line":1655,"column":6},"end":{"line":1655,"column":67}}},"74":{"name":"getRes","line":1722,"loc":{"start":{"line":1722,"column":6},"end":{"line":1722,"column":28}}},"75":{"name":"interpolate","line":1771,"loc":{"start":{"line":1771,"column":6},"end":{"line":1771,"column":35}}},"76":{"name":"compute","line":1817,"loc":{"start":{"line":1817,"column":4},"end":{"line":1817,"column":37}}},"77":{"name":"enqueue","line":1830,"loc":{"start":{"line":1830,"column":6},"end":{"line":1830,"column":25}}},"78":{"name":"update","line":1845,"loc":{"start":{"line":1845,"column":6},"end":{"line":1845,"column":29}}},"79":{"name":"evaluate","line":1876,"loc":{"start":{"line":1876,"column":6},"end":{"line":1876,"column":31}}},"80":{"name":"(anonymous_80)","line":1891,"loc":{"start":{"line":1891,"column":20},"end":{"line":1891,"column":37}}},"81":{"name":"(anonymous_81)","line":1958,"loc":{"start":{"line":1958,"column":22},"end":{"line":1958,"column":33}}},"82":{"name":"cycle","line":1971,"loc":{"start":{"line":1971,"column":4},"end":{"line":1971,"column":35}}},"83":{"name":"(anonymous_83)","line":2048,"loc":{"start":{"line":2048,"column":23},"end":{"line":2048,"column":34}}},"84":{"name":"run","line":2080,"loc":{"start":{"line":2080,"column":4},"end":{"line":2080,"column":26}}},"85":{"name":"(anonymous_85)","line":2272,"loc":{"start":{"line":2272,"column":20},"end":{"line":2272,"column":31}}},"86":{"name":"(anonymous_86)","line":2297,"loc":{"start":{"line":2297,"column":77},"end":{"line":2297,"column":98}}},"87":{"name":"(anonymous_87)","line":2745,"loc":{"start":{"line":2745,"column":60},"end":{"line":2745,"column":81}}},"88":{"name":"(anonymous_88)","line":2747,"loc":{"start":{"line":2747,"column":36},"end":{"line":2747,"column":47}}},"89":{"name":"(anonymous_89)","line":2756,"loc":{"start":{"line":2756,"column":39},"end":{"line":2756,"column":60}}},"90":{"name":"(anonymous_90)","line":2759,"loc":{"start":{"line":2759,"column":36},"end":{"line":2759,"column":47}}},"91":{"name":"(anonymous_91)","line":2772,"loc":{"start":{"line":2772,"column":30},"end":{"line":2772,"column":41}}},"92":{"name":"(anonymous_92)","line":2787,"loc":{"start":{"line":2787,"column":35},"end":{"line":2787,"column":57}}}},"statementMap":{"1":{"start":{"line":8,"column":1},"end":{"line":2811,"column":14}},"2":{"start":{"line":12,"column":2},"end":{"line":12,"column":16}},"3":{"start":{"line":15,"column":2},"end":{"line":18,"column":4}},"4":{"start":{"line":21,"column":2},"end":{"line":21,"column":60}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":104}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":91}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":86}},"8":{"start":{"line":33,"column":2},"end":{"line":33,"column":84}},"9":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":22}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":60}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":18}},"13":{"start":{"line":45,"column":2},"end":{"line":45,"column":86}},"14":{"start":{"line":48,"column":2},"end":{"line":48,"column":60}},"15":{"start":{"line":51,"column":2},"end":{"line":51,"column":21}},"16":{"start":{"line":54,"column":2},"end":{"line":58,"column":4}},"17":{"start":{"line":61,"column":2},"end":{"line":67,"column":4}},"18":{"start":{"line":73,"column":2},"end":{"line":80,"column":4}},"19":{"start":{"line":86,"column":2},"end":{"line":113,"column":4}},"20":{"start":{"line":125,"column":2},"end":{"line":2779,"column":3}},"21":{"start":{"line":127,"column":4},"end":{"line":127,"column":64}},"22":{"start":{"line":128,"column":4},"end":{"line":131,"column":5}},"23":{"start":{"line":129,"column":6},"end":{"line":129,"column":44}},"24":{"start":{"line":130,"column":6},"end":{"line":130,"column":23}},"25":{"start":{"line":136,"column":4},"end":{"line":136,"column":94}},"26":{"start":{"line":139,"column":4},"end":{"line":145,"column":32}},"27":{"start":{"line":148,"column":4},"end":{"line":149,"column":39}},"28":{"start":{"line":152,"column":4},"end":{"line":165,"column":35}},"29":{"start":{"line":168,"column":4},"end":{"line":168,"column":22}},"30":{"start":{"line":171,"column":4},"end":{"line":171,"column":66}},"31":{"start":{"line":174,"column":4},"end":{"line":174,"column":43}},"32":{"start":{"line":177,"column":4},"end":{"line":177,"column":74}},"33":{"start":{"line":180,"column":4},"end":{"line":180,"column":48}},"34":{"start":{"line":183,"column":4},"end":{"line":183,"column":30}},"35":{"start":{"line":186,"column":4},"end":{"line":186,"column":22}},"36":{"start":{"line":195,"column":4},"end":{"line":195,"column":21}},"37":{"start":{"line":197,"column":4},"end":{"line":235,"column":9}},"38":{"start":{"line":205,"column":6},"end":{"line":205,"column":99}},"39":{"start":{"line":213,"column":6},"end":{"line":213,"column":97}},"40":{"start":{"line":222,"column":6},"end":{"line":234,"column":7}},"41":{"start":{"line":227,"column":8},"end":{"line":231,"column":25}},"42":{"start":{"line":228,"column":39},"end":{"line":228,"column":81}},"43":{"start":{"line":233,"column":8},"end":{"line":233,"column":38}},"44":{"start":{"line":243,"column":4},"end":{"line":271,"column":6}},"45":{"start":{"line":356,"column":4},"end":{"line":390,"column":5}},"46":{"start":{"line":357,"column":6},"end":{"line":357,"column":23}},"47":{"start":{"line":360,"column":6},"end":{"line":362,"column":7}},"48":{"start":{"line":361,"column":8},"end":{"line":361,"column":48}},"49":{"start":{"line":364,"column":6},"end":{"line":382,"column":7}},"50":{"start":{"line":366,"column":8},"end":{"line":366,"column":23}},"51":{"start":{"line":368,"column":11},"end":{"line":382,"column":7}},"52":{"start":{"line":370,"column":8},"end":{"line":370,"column":21}},"53":{"start":{"line":371,"column":8},"end":{"line":371,"column":18}},"54":{"start":{"line":373,"column":11},"end":{"line":382,"column":7}},"55":{"start":{"line":375,"column":8},"end":{"line":375,"column":21}},"56":{"start":{"line":376,"column":8},"end":{"line":376,"column":18}},"57":{"start":{"line":377,"column":8},"end":{"line":377,"column":26}},"58":{"start":{"line":381,"column":8},"end":{"line":381,"column":26}},"59":{"start":{"line":383,"column":6},"end":{"line":383,"column":33}},"60":{"start":{"line":385,"column":6},"end":{"line":385,"column":41}},"61":{"start":{"line":386,"column":6},"end":{"line":386,"column":42}},"62":{"start":{"line":388,"column":6},"end":{"line":388,"column":43}},"63":{"start":{"line":389,"column":6},"end":{"line":389,"column":43}},"64":{"start":{"line":399,"column":4},"end":{"line":406,"column":5}},"65":{"start":{"line":400,"column":6},"end":{"line":400,"column":26}},"66":{"start":{"line":401,"column":6},"end":{"line":403,"column":7}},"67":{"start":{"line":402,"column":8},"end":{"line":402,"column":35}},"68":{"start":{"line":404,"column":6},"end":{"line":404,"column":33}},"69":{"start":{"line":405,"column":6},"end":{"line":405,"column":22}},"70":{"start":{"line":415,"column":4},"end":{"line":423,"column":5}},"71":{"start":{"line":416,"column":6},"end":{"line":416,"column":23}},"72":{"start":{"line":417,"column":6},"end":{"line":419,"column":7}},"73":{"start":{"line":418,"column":8},"end":{"line":418,"column":20}},"74":{"start":{"line":420,"column":6},"end":{"line":422,"column":26}},"75":{"start":{"line":467,"column":4},"end":{"line":483,"column":5}},"76":{"start":{"line":468,"column":6},"end":{"line":468,"column":23}},"77":{"start":{"line":471,"column":6},"end":{"line":473,"column":7}},"78":{"start":{"line":472,"column":8},"end":{"line":472,"column":40}},"79":{"start":{"line":475,"column":6},"end":{"line":481,"column":7}},"80":{"start":{"line":477,"column":8},"end":{"line":477,"column":23}},"81":{"start":{"line":480,"column":8},"end":{"line":480,"column":26}},"82":{"start":{"line":482,"column":6},"end":{"line":482,"column":33}},"83":{"start":{"line":495,"column":4},"end":{"line":500,"column":7}},"84":{"start":{"line":497,"column":6},"end":{"line":499,"column":20}},"85":{"start":{"line":510,"column":4},"end":{"line":526,"column":5}},"86":{"start":{"line":512,"column":6},"end":{"line":521,"column":8}},"87":{"start":{"line":513,"column":8},"end":{"line":515,"column":42}},"88":{"start":{"line":517,"column":8},"end":{"line":517,"column":112}},"89":{"start":{"line":518,"column":8},"end":{"line":518,"column":30}},"90":{"start":{"line":519,"column":8},"end":{"line":519,"column":28}},"91":{"start":{"line":520,"column":8},"end":{"line":520,"column":22}},"92":{"start":{"line":524,"column":6},"end":{"line":524,"column":133}},"93":{"start":{"line":525,"column":6},"end":{"line":525,"column":51}},"94":{"start":{"line":535,"column":4},"end":{"line":537,"column":5}},"95":{"start":{"line":536,"column":6},"end":{"line":536,"column":54}},"96":{"start":{"line":545,"column":4},"end":{"line":548,"column":5}},"97":{"start":{"line":546,"column":6},"end":{"line":546,"column":33}},"98":{"start":{"line":547,"column":6},"end":{"line":547,"column":27}},"99":{"start":{"line":557,"column":4},"end":{"line":560,"column":5}},"100":{"start":{"line":558,"column":6},"end":{"line":559,"column":69}},"101":{"start":{"line":569,"column":4},"end":{"line":573,"column":5}},"102":{"start":{"line":570,"column":6},"end":{"line":572,"column":31}},"103":{"start":{"line":571,"column":8},"end":{"line":571,"column":23}},"104":{"start":{"line":582,"column":4},"end":{"line":597,"column":5}},"105":{"start":{"line":583,"column":6},"end":{"line":583,"column":22}},"106":{"start":{"line":584,"column":6},"end":{"line":589,"column":7}},"107":{"start":{"line":585,"column":8},"end":{"line":585,"column":28}},"108":{"start":{"line":586,"column":13},"end":{"line":589,"column":7}},"109":{"start":{"line":588,"column":8},"end":{"line":588,"column":65}},"110":{"start":{"line":591,"column":6},"end":{"line":591,"column":56}},"111":{"start":{"line":594,"column":6},"end":{"line":596,"column":17}},"112":{"start":{"line":607,"column":4},"end":{"line":609,"column":5}},"113":{"start":{"line":608,"column":6},"end":{"line":608,"column":78}},"114":{"start":{"line":621,"column":4},"end":{"line":627,"column":5}},"115":{"start":{"line":622,"column":6},"end":{"line":624,"column":7}},"116":{"start":{"line":623,"column":8},"end":{"line":623,"column":21}},"117":{"start":{"line":625,"column":6},"end":{"line":625,"column":41}},"118":{"start":{"line":626,"column":6},"end":{"line":626,"column":81}},"119":{"start":{"line":636,"column":4},"end":{"line":638,"column":5}},"120":{"start":{"line":637,"column":6},"end":{"line":637,"column":93}},"121":{"start":{"line":647,"column":4},"end":{"line":652,"column":5}},"122":{"start":{"line":648,"column":6},"end":{"line":650,"column":19}},"123":{"start":{"line":649,"column":8},"end":{"line":649,"column":52}},"124":{"start":{"line":651,"column":6},"end":{"line":651,"column":28}},"125":{"start":{"line":660,"column":4},"end":{"line":683,"column":5}},"126":{"start":{"line":661,"column":6},"end":{"line":666,"column":99}},"127":{"start":{"line":671,"column":6},"end":{"line":680,"column":7}},"128":{"start":{"line":674,"column":8},"end":{"line":674,"column":62}},"129":{"start":{"line":675,"column":8},"end":{"line":675,"column":62}},"130":{"start":{"line":675,"column":36},"end":{"line":675,"column":59}},"131":{"start":{"line":677,"column":8},"end":{"line":677,"column":41}},"132":{"start":{"line":678,"column":8},"end":{"line":678,"column":23}},"133":{"start":{"line":679,"column":8},"end":{"line":679,"column":27}},"134":{"start":{"line":681,"column":6},"end":{"line":681,"column":43}},"135":{"start":{"line":682,"column":6},"end":{"line":682,"column":26}},"136":{"start":{"line":692,"column":4},"end":{"line":707,"column":5}},"137":{"start":{"line":693,"column":6},"end":{"line":693,"column":105}},"138":{"start":{"line":695,"column":6},"end":{"line":706,"column":9}},"139":{"start":{"line":696,"column":8},"end":{"line":705,"column":9}},"140":{"start":{"line":698,"column":10},"end":{"line":704,"column":11}},"141":{"start":{"line":699,"column":12},"end":{"line":701,"column":15}},"142":{"start":{"line":700,"column":14},"end":{"line":700,"column":59}},"143":{"start":{"line":702,"column":17},"end":{"line":704,"column":11}},"144":{"start":{"line":703,"column":12},"end":{"line":703,"column":43}},"145":{"start":{"line":716,"column":4},"end":{"line":735,"column":5}},"146":{"start":{"line":717,"column":6},"end":{"line":719,"column":34}},"147":{"start":{"line":721,"column":6},"end":{"line":734,"column":7}},"148":{"start":{"line":723,"column":8},"end":{"line":723,"column":28}},"149":{"start":{"line":724,"column":8},"end":{"line":724,"column":30}},"150":{"start":{"line":725,"column":8},"end":{"line":725,"column":24}},"151":{"start":{"line":727,"column":11},"end":{"line":734,"column":7}},"152":{"start":{"line":728,"column":8},"end":{"line":728,"column":54}},"153":{"start":{"line":731,"column":8},"end":{"line":731,"column":29}},"154":{"start":{"line":732,"column":8},"end":{"line":732,"column":28}},"155":{"start":{"line":733,"column":8},"end":{"line":733,"column":54}},"156":{"start":{"line":733,"column":34},"end":{"line":733,"column":50}},"157":{"start":{"line":763,"column":4},"end":{"line":782,"column":5}},"158":{"start":{"line":764,"column":6},"end":{"line":780,"column":7}},"159":{"start":{"line":766,"column":8},"end":{"line":768,"column":10}},"160":{"start":{"line":767,"column":10},"end":{"line":767,"column":70}},"161":{"start":{"line":770,"column":11},"end":{"line":780,"column":7}},"162":{"start":{"line":772,"column":8},"end":{"line":775,"column":11}},"163":{"start":{"line":773,"column":10},"end":{"line":773,"column":22}},"164":{"start":{"line":773,"column":23},"end":{"line":773,"column":35}},"165":{"start":{"line":774,"column":10},"end":{"line":774,"column":96}},"166":{"start":{"line":777,"column":8},"end":{"line":779,"column":11}},"167":{"start":{"line":778,"column":10},"end":{"line":778,"column":47}},"168":{"start":{"line":781,"column":6},"end":{"line":781,"column":39}},"169":{"start":{"line":792,"column":4},"end":{"line":796,"column":5}},"170":{"start":{"line":793,"column":6},"end":{"line":793,"column":41}},"171":{"start":{"line":794,"column":6},"end":{"line":795,"column":43}},"172":{"start":{"line":837,"column":4},"end":{"line":975,"column":5}},"173":{"start":{"line":838,"column":6},"end":{"line":844,"column":38}},"174":{"start":{"line":849,"column":6},"end":{"line":863,"column":7}},"175":{"start":{"line":850,"column":8},"end":{"line":851,"column":35}},"176":{"start":{"line":853,"column":8},"end":{"line":858,"column":9}},"177":{"start":{"line":855,"column":10},"end":{"line":855,"column":40}},"178":{"start":{"line":856,"column":10},"end":{"line":856,"column":44}},"179":{"start":{"line":857,"column":10},"end":{"line":857,"column":50}},"180":{"start":{"line":860,"column":8},"end":{"line":860,"column":104}},"181":{"start":{"line":862,"column":8},"end":{"line":862,"column":35}},"182":{"start":{"line":868,"column":6},"end":{"line":910,"column":7}},"183":{"start":{"line":869,"column":8},"end":{"line":871,"column":34}},"184":{"start":{"line":873,"column":8},"end":{"line":876,"column":9}},"185":{"start":{"line":874,"column":10},"end":{"line":874,"column":40}},"186":{"start":{"line":875,"column":10},"end":{"line":875,"column":32}},"187":{"start":{"line":878,"column":8},"end":{"line":878,"column":34}},"188":{"start":{"line":879,"column":8},"end":{"line":879,"column":33}},"189":{"start":{"line":880,"column":8},"end":{"line":880,"column":39}},"190":{"start":{"line":881,"column":8},"end":{"line":881,"column":50}},"191":{"start":{"line":884,"column":8},"end":{"line":901,"column":9}},"192":{"start":{"line":885,"column":10},"end":{"line":885,"column":54}},"193":{"start":{"line":886,"column":10},"end":{"line":896,"column":11}},"194":{"start":{"line":887,"column":12},"end":{"line":887,"column":34}},"195":{"start":{"line":889,"column":15},"end":{"line":896,"column":11}},"196":{"start":{"line":891,"column":12},"end":{"line":891,"column":32}},"197":{"start":{"line":895,"column":12},"end":{"line":895,"column":24}},"198":{"start":{"line":899,"column":10},"end":{"line":899,"column":39}},"199":{"start":{"line":900,"column":10},"end":{"line":900,"column":62}},"200":{"start":{"line":905,"column":8},"end":{"line":909,"column":9}},"201":{"start":{"line":906,"column":10},"end":{"line":906,"column":31}},"202":{"start":{"line":908,"column":10},"end":{"line":908,"column":23}},"203":{"start":{"line":915,"column":6},"end":{"line":920,"column":7}},"204":{"start":{"line":917,"column":8},"end":{"line":917,"column":45}},"205":{"start":{"line":918,"column":8},"end":{"line":919,"column":94}},"206":{"start":{"line":925,"column":6},"end":{"line":936,"column":7}},"207":{"start":{"line":926,"column":8},"end":{"line":926,"column":16}},"208":{"start":{"line":929,"column":8},"end":{"line":931,"column":9}},"209":{"start":{"line":930,"column":10},"end":{"line":930,"column":30}},"210":{"start":{"line":933,"column":8},"end":{"line":935,"column":28}},"211":{"start":{"line":938,"column":6},"end":{"line":947,"column":7}},"212":{"start":{"line":940,"column":8},"end":{"line":940,"column":40}},"213":{"start":{"line":943,"column":8},"end":{"line":943,"column":42}},"214":{"start":{"line":944,"column":8},"end":{"line":944,"column":28}},"215":{"start":{"line":945,"column":8},"end":{"line":945,"column":87}},"216":{"start":{"line":946,"column":8},"end":{"line":946,"column":32}},"217":{"start":{"line":949,"column":6},"end":{"line":973,"column":7}},"218":{"start":{"line":951,"column":8},"end":{"line":951,"column":30}},"219":{"start":{"line":952,"column":8},"end":{"line":952,"column":34}},"220":{"start":{"line":953,"column":8},"end":{"line":953,"column":34}},"221":{"start":{"line":954,"column":8},"end":{"line":954,"column":57}},"222":{"start":{"line":957,"column":8},"end":{"line":972,"column":9}},"223":{"start":{"line":959,"column":10},"end":{"line":959,"column":36}},"224":{"start":{"line":960,"column":10},"end":{"line":960,"column":59}},"225":{"start":{"line":962,"column":10},"end":{"line":962,"column":39}},"226":{"start":{"line":963,"column":10},"end":{"line":963,"column":62}},"227":{"start":{"line":967,"column":10},"end":{"line":971,"column":11}},"228":{"start":{"line":968,"column":12},"end":{"line":968,"column":34}},"229":{"start":{"line":970,"column":12},"end":{"line":970,"column":32}},"230":{"start":{"line":974,"column":6},"end":{"line":974,"column":20}},"231":{"start":{"line":987,"column":4},"end":{"line":997,"column":5}},"232":{"start":{"line":988,"column":6},"end":{"line":990,"column":46}},"233":{"start":{"line":992,"column":6},"end":{"line":992,"column":40}},"234":{"start":{"line":993,"column":6},"end":{"line":995,"column":9}},"235":{"start":{"line":994,"column":8},"end":{"line":994,"column":66}},"236":{"start":{"line":996,"column":6},"end":{"line":996,"column":44}},"237":{"start":{"line":1008,"column":4},"end":{"line":1029,"column":5}},"238":{"start":{"line":1009,"column":6},"end":{"line":1011,"column":42}},"239":{"start":{"line":1013,"column":6},"end":{"line":1027,"column":7}},"240":{"start":{"line":1014,"column":8},"end":{"line":1014,"column":31}},"241":{"start":{"line":1015,"column":8},"end":{"line":1015,"column":26}},"242":{"start":{"line":1016,"column":8},"end":{"line":1026,"column":9}},"243":{"start":{"line":1018,"column":10},"end":{"line":1018,"column":37}},"244":{"start":{"line":1019,"column":10},"end":{"line":1019,"column":24}},"245":{"start":{"line":1020,"column":10},"end":{"line":1020,"column":37}},"246":{"start":{"line":1022,"column":10},"end":{"line":1025,"column":11}},"247":{"start":{"line":1023,"column":12},"end":{"line":1023,"column":33}},"248":{"start":{"line":1024,"column":12},"end":{"line":1024,"column":35}},"249":{"start":{"line":1028,"column":6},"end":{"line":1028,"column":19}},"250":{"start":{"line":1068,"column":4},"end":{"line":1077,"column":5}},"251":{"start":{"line":1069,"column":6},"end":{"line":1071,"column":60}},"252":{"start":{"line":1073,"column":6},"end":{"line":1075,"column":7}},"253":{"start":{"line":1074,"column":8},"end":{"line":1074,"column":26}},"254":{"start":{"line":1076,"column":6},"end":{"line":1076,"column":19}},"255":{"start":{"line":1087,"column":4},"end":{"line":1100,"column":5}},"256":{"start":{"line":1088,"column":6},"end":{"line":1089,"column":79}},"257":{"start":{"line":1092,"column":6},"end":{"line":1098,"column":9}},"258":{"start":{"line":1093,"column":8},"end":{"line":1097,"column":9}},"259":{"start":{"line":1094,"column":10},"end":{"line":1096,"column":31}},"260":{"start":{"line":1099,"column":6},"end":{"line":1099,"column":20}},"261":{"start":{"line":1110,"column":4},"end":{"line":1116,"column":5}},"262":{"start":{"line":1111,"column":6},"end":{"line":1112,"column":56}},"263":{"start":{"line":1114,"column":6},"end":{"line":1114,"column":57}},"264":{"start":{"line":1115,"column":6},"end":{"line":1115,"column":20}},"265":{"start":{"line":1125,"column":4},"end":{"line":1145,"column":5}},"266":{"start":{"line":1126,"column":6},"end":{"line":1128,"column":41}},"267":{"start":{"line":1130,"column":6},"end":{"line":1143,"column":7}},"268":{"start":{"line":1132,"column":8},"end":{"line":1132,"column":35}},"269":{"start":{"line":1133,"column":8},"end":{"line":1133,"column":22}},"270":{"start":{"line":1134,"column":8},"end":{"line":1134,"column":35}},"271":{"start":{"line":1137,"column":11},"end":{"line":1143,"column":7}},"272":{"start":{"line":1139,"column":8},"end":{"line":1139,"column":46}},"273":{"start":{"line":1140,"column":8},"end":{"line":1142,"column":9}},"274":{"start":{"line":1141,"column":10},"end":{"line":1141,"column":33}},"275":{"start":{"line":1144,"column":6},"end":{"line":1144,"column":19}},"276":{"start":{"line":1162,"column":4},"end":{"line":1190,"column":5}},"277":{"start":{"line":1163,"column":6},"end":{"line":1163,"column":23}},"278":{"start":{"line":1165,"column":6},"end":{"line":1165,"column":20}},"279":{"start":{"line":1166,"column":6},"end":{"line":1166,"column":27}},"280":{"start":{"line":1167,"column":6},"end":{"line":1167,"column":32}},"281":{"start":{"line":1169,"column":6},"end":{"line":1188,"column":9}},"282":{"start":{"line":1174,"column":10},"end":{"line":1174,"column":28}},"283":{"start":{"line":1177,"column":10},"end":{"line":1177,"column":35}},"284":{"start":{"line":1178,"column":10},"end":{"line":1180,"column":11}},"285":{"start":{"line":1179,"column":12},"end":{"line":1179,"column":61}},"286":{"start":{"line":1181,"column":10},"end":{"line":1181,"column":28}},"287":{"start":{"line":1182,"column":10},"end":{"line":1182,"column":40}},"288":{"start":{"line":1185,"column":10},"end":{"line":1185,"column":32}},"289":{"start":{"line":1186,"column":10},"end":{"line":1186,"column":28}},"290":{"start":{"line":1189,"column":6},"end":{"line":1189,"column":19}},"291":{"start":{"line":1202,"column":4},"end":{"line":1222,"column":5}},"292":{"start":{"line":1203,"column":6},"end":{"line":1207,"column":51}},"293":{"start":{"line":1209,"column":6},"end":{"line":1209,"column":60}},"294":{"start":{"line":1210,"column":6},"end":{"line":1210,"column":46}},"295":{"start":{"line":1211,"column":6},"end":{"line":1211,"column":26}},"296":{"start":{"line":1213,"column":6},"end":{"line":1220,"column":7}},"297":{"start":{"line":1214,"column":8},"end":{"line":1219,"column":11}},"298":{"start":{"line":1215,"column":10},"end":{"line":1217,"column":11}},"299":{"start":{"line":1216,"column":12},"end":{"line":1216,"column":35}},"300":{"start":{"line":1218,"column":10},"end":{"line":1218,"column":32}},"301":{"start":{"line":1221,"column":6},"end":{"line":1221,"column":26}},"302":{"start":{"line":1232,"column":4},"end":{"line":1237,"column":5}},"303":{"start":{"line":1233,"column":6},"end":{"line":1234,"column":57}},"304":{"start":{"line":1236,"column":6},"end":{"line":1236,"column":70}},"305":{"start":{"line":1265,"column":4},"end":{"line":1290,"column":5}},"306":{"start":{"line":1266,"column":6},"end":{"line":1267,"column":33}},"307":{"start":{"line":1269,"column":6},"end":{"line":1271,"column":7}},"308":{"start":{"line":1270,"column":8},"end":{"line":1270,"column":22}},"309":{"start":{"line":1272,"column":6},"end":{"line":1288,"column":9}},"310":{"start":{"line":1273,"column":8},"end":{"line":1273,"column":18}},"311":{"start":{"line":1274,"column":8},"end":{"line":1277,"column":9}},"312":{"start":{"line":1275,"column":10},"end":{"line":1275,"column":27}},"313":{"start":{"line":1276,"column":10},"end":{"line":1276,"column":58}},"314":{"start":{"line":1278,"column":8},"end":{"line":1287,"column":9}},"315":{"start":{"line":1279,"column":10},"end":{"line":1286,"column":11}},"316":{"start":{"line":1280,"column":12},"end":{"line":1280,"column":51}},"317":{"start":{"line":1281,"column":12},"end":{"line":1283,"column":13}},"318":{"start":{"line":1282,"column":14},"end":{"line":1282,"column":41}},"319":{"start":{"line":1285,"column":12},"end":{"line":1285,"column":33}},"320":{"start":{"line":1289,"column":6},"end":{"line":1289,"column":20}},"321":{"start":{"line":1307,"column":4},"end":{"line":1318,"column":5}},"322":{"start":{"line":1308,"column":6},"end":{"line":1309,"column":57}},"323":{"start":{"line":1311,"column":6},"end":{"line":1316,"column":9}},"324":{"start":{"line":1312,"column":8},"end":{"line":1315,"column":25}},"325":{"start":{"line":1317,"column":6},"end":{"line":1317,"column":20}},"326":{"start":{"line":1328,"column":4},"end":{"line":1353,"column":5}},"327":{"start":{"line":1329,"column":6},"end":{"line":1331,"column":37}},"328":{"start":{"line":1333,"column":6},"end":{"line":1351,"column":7}},"329":{"start":{"line":1334,"column":8},"end":{"line":1334,"column":31}},"330":{"start":{"line":1335,"column":8},"end":{"line":1335,"column":26}},"331":{"start":{"line":1336,"column":8},"end":{"line":1350,"column":9}},"332":{"start":{"line":1338,"column":10},"end":{"line":1338,"column":32}},"333":{"start":{"line":1339,"column":10},"end":{"line":1339,"column":24}},"334":{"start":{"line":1340,"column":10},"end":{"line":1340,"column":32}},"335":{"start":{"line":1342,"column":10},"end":{"line":1345,"column":11}},"336":{"start":{"line":1343,"column":12},"end":{"line":1343,"column":41}},"337":{"start":{"line":1344,"column":12},"end":{"line":1344,"column":34}},"338":{"start":{"line":1346,"column":10},"end":{"line":1349,"column":11}},"339":{"start":{"line":1347,"column":12},"end":{"line":1347,"column":33}},"340":{"start":{"line":1348,"column":12},"end":{"line":1348,"column":34}},"341":{"start":{"line":1352,"column":6},"end":{"line":1352,"column":19}},"342":{"start":{"line":1367,"column":4},"end":{"line":1382,"column":5}},"343":{"start":{"line":1368,"column":6},"end":{"line":1369,"column":71}},"344":{"start":{"line":1372,"column":6},"end":{"line":1372,"column":82}},"345":{"start":{"line":1375,"column":6},"end":{"line":1379,"column":9}},"346":{"start":{"line":1376,"column":8},"end":{"line":1378,"column":9}},"347":{"start":{"line":1377,"column":10},"end":{"line":1377,"column":41}},"348":{"start":{"line":1381,"column":6},"end":{"line":1381,"column":20}},"349":{"start":{"line":1391,"column":4},"end":{"line":1436,"column":5}},"350":{"start":{"line":1392,"column":6},"end":{"line":1392,"column":23}},"351":{"start":{"line":1395,"column":6},"end":{"line":1397,"column":7}},"352":{"start":{"line":1396,"column":8},"end":{"line":1396,"column":17}},"353":{"start":{"line":1398,"column":6},"end":{"line":1408,"column":26}},"354":{"start":{"line":1410,"column":6},"end":{"line":1414,"column":7}},"355":{"start":{"line":1411,"column":8},"end":{"line":1413,"column":14}},"356":{"start":{"line":1412,"column":10},"end":{"line":1412,"column":59}},"357":{"start":{"line":1416,"column":6},"end":{"line":1420,"column":7}},"358":{"start":{"line":1417,"column":8},"end":{"line":1419,"column":14}},"359":{"start":{"line":1418,"column":10},"end":{"line":1418,"column":47}},"360":{"start":{"line":1422,"column":6},"end":{"line":1424,"column":7}},"361":{"start":{"line":1423,"column":8},"end":{"line":1423,"column":94}},"362":{"start":{"line":1427,"column":6},"end":{"line":1432,"column":7}},"363":{"start":{"line":1430,"column":8},"end":{"line":1430,"column":24}},"364":{"start":{"line":1431,"column":8},"end":{"line":1431,"column":58}},"365":{"start":{"line":1434,"column":6},"end":{"line":1434,"column":79}},"366":{"start":{"line":1435,"column":6},"end":{"line":1435,"column":52}},"367":{"start":{"line":1444,"column":4},"end":{"line":1513,"column":5}},"368":{"start":{"line":1445,"column":6},"end":{"line":1445,"column":23}},"369":{"start":{"line":1446,"column":6},"end":{"line":1452,"column":7}},"370":{"start":{"line":1448,"column":8},"end":{"line":1448,"column":30}},"371":{"start":{"line":1449,"column":8},"end":{"line":1449,"column":22}},"372":{"start":{"line":1450,"column":8},"end":{"line":1450,"column":30}},"373":{"start":{"line":1451,"column":8},"end":{"line":1451,"column":21}},"374":{"start":{"line":1453,"column":6},"end":{"line":1456,"column":21}},"375":{"start":{"line":1460,"column":6},"end":{"line":1463,"column":8}},"376":{"start":{"line":1465,"column":6},"end":{"line":1504,"column":38}},"377":{"start":{"line":1466,"column":8},"end":{"line":1502,"column":11}},"378":{"start":{"line":1467,"column":10},"end":{"line":1469,"column":43}},"379":{"start":{"line":1473,"column":10},"end":{"line":1475,"column":11}},"380":{"start":{"line":1474,"column":12},"end":{"line":1474,"column":19}},"381":{"start":{"line":1476,"column":10},"end":{"line":1501,"column":11}},"382":{"start":{"line":1477,"column":12},"end":{"line":1491,"column":13}},"383":{"start":{"line":1479,"column":14},"end":{"line":1481,"column":15}},"384":{"start":{"line":1480,"column":16},"end":{"line":1480,"column":41}},"385":{"start":{"line":1483,"column":14},"end":{"line":1486,"column":15}},"386":{"start":{"line":1484,"column":16},"end":{"line":1484,"column":71}},"387":{"start":{"line":1485,"column":16},"end":{"line":1485,"column":48}},"388":{"start":{"line":1489,"column":17},"end":{"line":1491,"column":13}},"389":{"start":{"line":1490,"column":14},"end":{"line":1490,"column":39}},"390":{"start":{"line":1493,"column":12},"end":{"line":1495,"column":13}},"391":{"start":{"line":1494,"column":14},"end":{"line":1494,"column":91}},"392":{"start":{"line":1496,"column":12},"end":{"line":1496,"column":70}},"393":{"start":{"line":1499,"column":15},"end":{"line":1501,"column":11}},"394":{"start":{"line":1500,"column":12},"end":{"line":1500,"column":85}},"395":{"start":{"line":1507,"column":6},"end":{"line":1511,"column":7}},"396":{"start":{"line":1508,"column":8},"end":{"line":1510,"column":11}},"397":{"start":{"line":1509,"column":10},"end":{"line":1509,"column":50}},"398":{"start":{"line":1512,"column":6},"end":{"line":1512,"column":19}},"399":{"start":{"line":1522,"column":4},"end":{"line":1539,"column":5}},"400":{"start":{"line":1523,"column":6},"end":{"line":1530,"column":75}},"401":{"start":{"line":1532,"column":6},"end":{"line":1537,"column":7}},"402":{"start":{"line":1533,"column":8},"end":{"line":1533,"column":37}},"403":{"start":{"line":1535,"column":8},"end":{"line":1536,"column":94}},"404":{"start":{"line":1538,"column":6},"end":{"line":1538,"column":20}},"405":{"start":{"line":1550,"column":4},"end":{"line":1806,"column":5}},"406":{"start":{"line":1551,"column":6},"end":{"line":1553,"column":88}},"407":{"start":{"line":1556,"column":6},"end":{"line":1648,"column":8}},"408":{"start":{"line":1557,"column":8},"end":{"line":1557,"column":21}},"409":{"start":{"line":1559,"column":8},"end":{"line":1562,"column":9}},"410":{"start":{"line":1560,"column":10},"end":{"line":1560,"column":27}},"411":{"start":{"line":1561,"column":10},"end":{"line":1561,"column":37}},"412":{"start":{"line":1563,"column":8},"end":{"line":1569,"column":23}},"413":{"start":{"line":1572,"column":8},"end":{"line":1572,"column":99}},"414":{"start":{"line":1577,"column":8},"end":{"line":1593,"column":86}},"415":{"start":{"line":1595,"column":8},"end":{"line":1596,"column":55}},"416":{"start":{"line":1598,"column":8},"end":{"line":1615,"column":9}},"417":{"start":{"line":1599,"column":10},"end":{"line":1610,"column":11}},"418":{"start":{"line":1602,"column":12},"end":{"line":1602,"column":110}},"419":{"start":{"line":1604,"column":15},"end":{"line":1610,"column":11}},"420":{"start":{"line":1607,"column":12},"end":{"line":1607,"column":28}},"421":{"start":{"line":1608,"column":12},"end":{"line":1608,"column":120}},"422":{"start":{"line":1609,"column":12},"end":{"line":1609,"column":32}},"423":{"start":{"line":1612,"column":10},"end":{"line":1612,"column":26}},"424":{"start":{"line":1613,"column":10},"end":{"line":1613,"column":50}},"425":{"start":{"line":1614,"column":10},"end":{"line":1614,"column":30}},"426":{"start":{"line":1617,"column":8},"end":{"line":1641,"column":9}},"427":{"start":{"line":1618,"column":10},"end":{"line":1624,"column":59}},"428":{"start":{"line":1626,"column":10},"end":{"line":1626,"column":77}},"429":{"start":{"line":1628,"column":10},"end":{"line":1640,"column":11}},"430":{"start":{"line":1630,"column":12},"end":{"line":1630,"column":28}},"431":{"start":{"line":1631,"column":12},"end":{"line":1631,"column":49}},"432":{"start":{"line":1632,"column":12},"end":{"line":1632,"column":32}},"433":{"start":{"line":1633,"column":12},"end":{"line":1633,"column":31}},"434":{"start":{"line":1636,"column":12},"end":{"line":1636,"column":32}},"435":{"start":{"line":1637,"column":12},"end":{"line":1639,"column":13}},"436":{"start":{"line":1638,"column":14},"end":{"line":1638,"column":54}},"437":{"start":{"line":1643,"column":8},"end":{"line":1646,"column":9}},"438":{"start":{"line":1644,"column":10},"end":{"line":1644,"column":111}},"439":{"start":{"line":1645,"column":10},"end":{"line":1645,"column":76}},"440":{"start":{"line":1647,"column":8},"end":{"line":1647,"column":22}},"441":{"start":{"line":1655,"column":6},"end":{"line":1717,"column":7}},"442":{"start":{"line":1656,"column":8},"end":{"line":1657,"column":71}},"443":{"start":{"line":1659,"column":8},"end":{"line":1659,"column":46}},"444":{"start":{"line":1661,"column":8},"end":{"line":1666,"column":11}},"445":{"start":{"line":1669,"column":8},"end":{"line":1699,"column":9}},"446":{"start":{"line":1670,"column":10},"end":{"line":1673,"column":13}},"447":{"start":{"line":1675,"column":13},"end":{"line":1699,"column":9}},"448":{"start":{"line":1676,"column":10},"end":{"line":1686,"column":11}},"449":{"start":{"line":1677,"column":12},"end":{"line":1680,"column":15}},"450":{"start":{"line":1682,"column":12},"end":{"line":1685,"column":15}},"451":{"start":{"line":1688,"column":13},"end":{"line":1699,"column":9}},"452":{"start":{"line":1689,"column":10},"end":{"line":1692,"column":13}},"453":{"start":{"line":1695,"column":10},"end":{"line":1698,"column":13}},"454":{"start":{"line":1701,"column":8},"end":{"line":1704,"column":10}},"455":{"start":{"line":1706,"column":8},"end":{"line":1709,"column":10}},"456":{"start":{"line":1712,"column":8},"end":{"line":1716,"column":10}},"457":{"start":{"line":1722,"column":6},"end":{"line":1766,"column":7}},"458":{"start":{"line":1723,"column":8},"end":{"line":1728,"column":24}},"459":{"start":{"line":1731,"column":8},"end":{"line":1763,"column":9}},"460":{"start":{"line":1732,"column":10},"end":{"line":1755,"column":11}},"461":{"start":{"line":1733,"column":12},"end":{"line":1733,"column":26}},"462":{"start":{"line":1734,"column":12},"end":{"line":1740,"column":13}},"463":{"start":{"line":1735,"column":14},"end":{"line":1735,"column":25}},"464":{"start":{"line":1736,"column":14},"end":{"line":1736,"column":56}},"465":{"start":{"line":1738,"column":14},"end":{"line":1738,"column":27}},"466":{"start":{"line":1739,"column":14},"end":{"line":1739,"column":51}},"467":{"start":{"line":1742,"column":15},"end":{"line":1755,"column":11}},"468":{"start":{"line":1743,"column":12},"end":{"line":1743,"column":26}},"469":{"start":{"line":1744,"column":12},"end":{"line":1744,"column":61}},"470":{"start":{"line":1745,"column":12},"end":{"line":1745,"column":93}},"471":{"start":{"line":1746,"column":12},"end":{"line":1746,"column":24}},"472":{"start":{"line":1748,"column":15},"end":{"line":1755,"column":11}},"473":{"start":{"line":1749,"column":12},"end":{"line":1749,"column":29}},"474":{"start":{"line":1750,"column":12},"end":{"line":1750,"column":53}},"475":{"start":{"line":1753,"column":12},"end":{"line":1753,"column":39}},"476":{"start":{"line":1754,"column":12},"end":{"line":1754,"column":63}},"477":{"start":{"line":1757,"column":10},"end":{"line":1762,"column":11}},"478":{"start":{"line":1758,"column":12},"end":{"line":1758,"column":34}},"479":{"start":{"line":1760,"column":12},"end":{"line":1760,"column":34}},"480":{"start":{"line":1761,"column":12},"end":{"line":1761,"column":18}},"481":{"start":{"line":1765,"column":8},"end":{"line":1765,"column":41}},"482":{"start":{"line":1771,"column":6},"end":{"line":1774,"column":7}},"483":{"start":{"line":1773,"column":8},"end":{"line":1773,"column":93}},"484":{"start":{"line":1781,"column":6},"end":{"line":1785,"column":19}},"485":{"start":{"line":1782,"column":8},"end":{"line":1784,"column":9}},"486":{"start":{"line":1783,"column":10},"end":{"line":1783,"column":77}},"487":{"start":{"line":1788,"column":6},"end":{"line":1790,"column":7}},"488":{"start":{"line":1789,"column":8},"end":{"line":1789,"column":75}},"489":{"start":{"line":1792,"column":6},"end":{"line":1794,"column":7}},"490":{"start":{"line":1793,"column":8},"end":{"line":1793,"column":76}},"491":{"start":{"line":1796,"column":6},"end":{"line":1796,"column":37}},"492":{"start":{"line":1799,"column":6},"end":{"line":1801,"column":7}},"493":{"start":{"line":1800,"column":8},"end":{"line":1800,"column":76}},"494":{"start":{"line":1804,"column":6},"end":{"line":1804,"column":77}},"495":{"start":{"line":1805,"column":6},"end":{"line":1805,"column":42}},"496":{"start":{"line":1817,"column":4},"end":{"line":1960,"column":5}},"497":{"start":{"line":1818,"column":6},"end":{"line":1818,"column":32}},"498":{"start":{"line":1820,"column":6},"end":{"line":1825,"column":38}},"499":{"start":{"line":1830,"column":6},"end":{"line":1840,"column":7}},"500":{"start":{"line":1831,"column":8},"end":{"line":1839,"column":12}},"501":{"start":{"line":1845,"column":6},"end":{"line":1871,"column":7}},"502":{"start":{"line":1846,"column":8},"end":{"line":1847,"column":30}},"503":{"start":{"line":1849,"column":8},"end":{"line":1870,"column":9}},"504":{"start":{"line":1850,"column":10},"end":{"line":1865,"column":11}},"505":{"start":{"line":1852,"column":12},"end":{"line":1852,"column":42}},"506":{"start":{"line":1855,"column":12},"end":{"line":1857,"column":13}},"507":{"start":{"line":1856,"column":14},"end":{"line":1856,"column":40}},"508":{"start":{"line":1858,"column":12},"end":{"line":1864,"column":13}},"509":{"start":{"line":1859,"column":14},"end":{"line":1859,"column":28}},"510":{"start":{"line":1860,"column":14},"end":{"line":1860,"column":34}},"511":{"start":{"line":1862,"column":14},"end":{"line":1862,"column":57}},"512":{"start":{"line":1863,"column":14},"end":{"line":1863,"column":32}},"513":{"start":{"line":1866,"column":15},"end":{"line":1870,"column":9}},"514":{"start":{"line":1868,"column":10},"end":{"line":1868,"column":40}},"515":{"start":{"line":1869,"column":10},"end":{"line":1869,"column":24}},"516":{"start":{"line":1876,"column":6},"end":{"line":1949,"column":7}},"517":{"start":{"line":1877,"column":8},"end":{"line":1891,"column":72}},"518":{"start":{"line":1891,"column":39},"end":{"line":1891,"column":69}},"519":{"start":{"line":1894,"column":8},"end":{"line":1896,"column":9}},"520":{"start":{"line":1895,"column":10},"end":{"line":1895,"column":64}},"521":{"start":{"line":1898,"column":8},"end":{"line":1942,"column":9}},"522":{"start":{"line":1900,"column":10},"end":{"line":1900,"column":33}},"523":{"start":{"line":1902,"column":10},"end":{"line":1902,"column":66}},"524":{"start":{"line":1904,"column":10},"end":{"line":1904,"column":30}},"525":{"start":{"line":1906,"column":10},"end":{"line":1906,"column":32}},"526":{"start":{"line":1908,"column":10},"end":{"line":1908,"column":24}},"527":{"start":{"line":1910,"column":10},"end":{"line":1910,"column":68}},"528":{"start":{"line":1912,"column":10},"end":{"line":1912,"column":31}},"529":{"start":{"line":1914,"column":10},"end":{"line":1914,"column":40}},"530":{"start":{"line":1916,"column":10},"end":{"line":1923,"column":13}},"531":{"start":{"line":1930,"column":10},"end":{"line":1936,"column":11}},"532":{"start":{"line":1932,"column":12},"end":{"line":1932,"column":40}},"533":{"start":{"line":1933,"column":12},"end":{"line":1933,"column":34}},"534":{"start":{"line":1934,"column":12},"end":{"line":1934,"column":24}},"535":{"start":{"line":1935,"column":12},"end":{"line":1935,"column":58}},"536":{"start":{"line":1937,"column":10},"end":{"line":1941,"column":11}},"537":{"start":{"line":1938,"column":12},"end":{"line":1938,"column":32}},"538":{"start":{"line":1939,"column":12},"end":{"line":1939,"column":45}},"539":{"start":{"line":1940,"column":12},"end":{"line":1940,"column":32}},"540":{"start":{"line":1944,"column":8},"end":{"line":1946,"column":9}},"541":{"start":{"line":1945,"column":10},"end":{"line":1945,"column":20}},"542":{"start":{"line":1948,"column":8},"end":{"line":1948,"column":29}},"543":{"start":{"line":1952,"column":6},"end":{"line":1952,"column":16}},"544":{"start":{"line":1953,"column":6},"end":{"line":1959,"column":9}},"545":{"start":{"line":1958,"column":35},"end":{"line":1958,"column":58}},"546":{"start":{"line":1971,"column":4},"end":{"line":2062,"column":5}},"547":{"start":{"line":1972,"column":6},"end":{"line":1972,"column":32}},"548":{"start":{"line":1974,"column":6},"end":{"line":1974,"column":19}},"549":{"start":{"line":1975,"column":6},"end":{"line":1978,"column":7}},"550":{"start":{"line":1976,"column":8},"end":{"line":1976,"column":25}},"551":{"start":{"line":1977,"column":8},"end":{"line":1977,"column":32}},"552":{"start":{"line":1979,"column":6},"end":{"line":1988,"column":30}},"553":{"start":{"line":1991,"column":6},"end":{"line":2008,"column":7}},"554":{"start":{"line":1993,"column":8},"end":{"line":1993,"column":32}},"555":{"start":{"line":1994,"column":8},"end":{"line":1994,"column":61}},"556":{"start":{"line":1995,"column":8},"end":{"line":1995,"column":32}},"557":{"start":{"line":1997,"column":8},"end":{"line":1999,"column":9}},"558":{"start":{"line":1998,"column":10},"end":{"line":1998,"column":32}},"559":{"start":{"line":2000,"column":8},"end":{"line":2007,"column":9}},"560":{"start":{"line":2001,"column":10},"end":{"line":2001,"column":33}},"561":{"start":{"line":2002,"column":10},"end":{"line":2002,"column":38}},"562":{"start":{"line":2003,"column":10},"end":{"line":2003,"column":28}},"563":{"start":{"line":2004,"column":10},"end":{"line":2006,"column":11}},"564":{"start":{"line":2005,"column":12},"end":{"line":2005,"column":26}},"565":{"start":{"line":2010,"column":6},"end":{"line":2034,"column":7}},"566":{"start":{"line":2012,"column":8},"end":{"line":2012,"column":50}},"567":{"start":{"line":2014,"column":8},"end":{"line":2014,"column":69}},"568":{"start":{"line":2016,"column":8},"end":{"line":2016,"column":41}},"569":{"start":{"line":2018,"column":8},"end":{"line":2018,"column":50}},"570":{"start":{"line":2020,"column":8},"end":{"line":2020,"column":42}},"571":{"start":{"line":2022,"column":8},"end":{"line":2033,"column":9}},"572":{"start":{"line":2025,"column":10},"end":{"line":2027,"column":11}},"573":{"start":{"line":2026,"column":12},"end":{"line":2026,"column":41}},"574":{"start":{"line":2029,"column":10},"end":{"line":2031,"column":11}},"575":{"start":{"line":2030,"column":12},"end":{"line":2030,"column":61}},"576":{"start":{"line":2032,"column":10},"end":{"line":2032,"column":44}},"577":{"start":{"line":2036,"column":6},"end":{"line":2036,"column":29}},"578":{"start":{"line":2037,"column":6},"end":{"line":2037,"column":24}},"579":{"start":{"line":2038,"column":6},"end":{"line":2040,"column":7}},"580":{"start":{"line":2039,"column":8},"end":{"line":2039,"column":22}},"581":{"start":{"line":2042,"column":6},"end":{"line":2061,"column":7}},"582":{"start":{"line":2044,"column":8},"end":{"line":2044,"column":28}},"583":{"start":{"line":2045,"column":8},"end":{"line":2051,"column":9}},"584":{"start":{"line":2046,"column":10},"end":{"line":2046,"column":56}},"585":{"start":{"line":2047,"column":15},"end":{"line":2051,"column":9}},"586":{"start":{"line":2048,"column":10},"end":{"line":2048,"column":62}},"587":{"start":{"line":2048,"column":36},"end":{"line":2048,"column":58}},"588":{"start":{"line":2050,"column":10},"end":{"line":2050,"column":23}},"589":{"start":{"line":2056,"column":8},"end":{"line":2058,"column":9}},"590":{"start":{"line":2057,"column":10},"end":{"line":2057,"column":46}},"591":{"start":{"line":2060,"column":8},"end":{"line":2060,"column":31}},"592":{"start":{"line":2080,"column":4},"end":{"line":2110,"column":5}},"593":{"start":{"line":2081,"column":6},"end":{"line":2082,"column":33}},"594":{"start":{"line":2085,"column":6},"end":{"line":2085,"column":28}},"595":{"start":{"line":2086,"column":6},"end":{"line":2086,"column":20}},"596":{"start":{"line":2087,"column":6},"end":{"line":2087,"column":27}},"597":{"start":{"line":2089,"column":6},"end":{"line":2089,"column":36}},"598":{"start":{"line":2090,"column":6},"end":{"line":2090,"column":38}},"599":{"start":{"line":2091,"column":6},"end":{"line":2091,"column":24}},"600":{"start":{"line":2093,"column":6},"end":{"line":2108,"column":7}},"601":{"start":{"line":2094,"column":8},"end":{"line":2094,"column":121}},"602":{"start":{"line":2097,"column":8},"end":{"line":2107,"column":9}},"603":{"start":{"line":2098,"column":10},"end":{"line":2102,"column":11}},"604":{"start":{"line":2099,"column":12},"end":{"line":2099,"column":28}},"605":{"start":{"line":2101,"column":12},"end":{"line":2101,"column":34}},"606":{"start":{"line":2106,"column":10},"end":{"line":2106,"column":34}},"607":{"start":{"line":2109,"column":6},"end":{"line":2109,"column":19}},"608":{"start":{"line":2120,"column":4},"end":{"line":2285,"column":7}},"609":{"start":{"line":2273,"column":10},"end":{"line":2273,"column":40}},"610":{"start":{"line":2287,"column":4},"end":{"line":2294,"column":7}},"611":{"start":{"line":2297,"column":4},"end":{"line":2299,"column":7}},"612":{"start":{"line":2298,"column":6},"end":{"line":2298,"column":44}},"613":{"start":{"line":2303,"column":4},"end":{"line":2545,"column":7}},"614":{"start":{"line":2547,"column":4},"end":{"line":2558,"column":7}},"615":{"start":{"line":2562,"column":4},"end":{"line":2595,"column":7}},"616":{"start":{"line":2597,"column":4},"end":{"line":2599,"column":7}},"617":{"start":{"line":2603,"column":4},"end":{"line":2660,"column":7}},"618":{"start":{"line":2671,"column":4},"end":{"line":2680,"column":6}},"619":{"start":{"line":2684,"column":4},"end":{"line":2709,"column":7}},"620":{"start":{"line":2711,"column":4},"end":{"line":2731,"column":7}},"621":{"start":{"line":2736,"column":4},"end":{"line":2740,"column":7}},"622":{"start":{"line":2745,"column":4},"end":{"line":2752,"column":7}},"623":{"start":{"line":2746,"column":6},"end":{"line":2746,"column":31}},"624":{"start":{"line":2747,"column":6},"end":{"line":2751,"column":8}},"625":{"start":{"line":2748,"column":8},"end":{"line":2748,"column":26}},"626":{"start":{"line":2749,"column":8},"end":{"line":2749,"column":36}},"627":{"start":{"line":2750,"column":8},"end":{"line":2750,"column":35}},"628":{"start":{"line":2756,"column":4},"end":{"line":2768,"column":7}},"629":{"start":{"line":2757,"column":6},"end":{"line":2757,"column":38}},"630":{"start":{"line":2759,"column":6},"end":{"line":2767,"column":8}},"631":{"start":{"line":2760,"column":8},"end":{"line":2761,"column":50}},"632":{"start":{"line":2763,"column":8},"end":{"line":2765,"column":9}},"633":{"start":{"line":2764,"column":10},"end":{"line":2764,"column":26}},"634":{"start":{"line":2766,"column":8},"end":{"line":2766,"column":22}},"635":{"start":{"line":2772,"column":4},"end":{"line":2776,"column":6}},"636":{"start":{"line":2773,"column":6},"end":{"line":2773,"column":23}},"637":{"start":{"line":2774,"column":6},"end":{"line":2774,"column":38}},"638":{"start":{"line":2775,"column":6},"end":{"line":2775,"column":26}},"639":{"start":{"line":2778,"column":4},"end":{"line":2778,"column":21}},"640":{"start":{"line":2785,"column":2},"end":{"line":2810,"column":3}},"641":{"start":{"line":2787,"column":4},"end":{"line":2792,"column":7}},"642":{"start":{"line":2788,"column":6},"end":{"line":2791,"column":9}},"643":{"start":{"line":2795,"column":4},"end":{"line":2795,"column":35}},"644":{"start":{"line":2798,"column":4},"end":{"line":2809,"column":5}},"645":{"start":{"line":2800,"column":6},"end":{"line":2802,"column":7}},"646":{"start":{"line":2801,"column":8},"end":{"line":2801,"column":63}},"647":{"start":{"line":2804,"column":6},"end":{"line":2804,"column":40}},"648":{"start":{"line":2808,"column":6},"end":{"line":2808,"column":33}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":14},"end":{"line":21,"column":40}},{"start":{"line":21,"column":44},"end":{"line":21,"column":50}},{"start":{"line":21,"column":55},"end":{"line":21,"column":59}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":19},"end":{"line":24,"column":46}},{"start":{"line":24,"column":50},"end":{"line":24,"column":79}},{"start":{"line":24,"column":83},"end":{"line":24,"column":93}},{"start":{"line":24,"column":97},"end":{"line":24,"column":103}}]},"3":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":20},"end":{"line":27,"column":47}},{"start":{"line":27,"column":51},"end":{"line":27,"column":58}},{"start":{"line":27,"column":62},"end":{"line":27,"column":79}},{"start":{"line":27,"column":83},"end":{"line":27,"column":90}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":19},"end":{"line":30,"column":45}},{"start":{"line":30,"column":49},"end":{"line":30,"column":55}},{"start":{"line":30,"column":59},"end":{"line":30,"column":75}},{"start":{"line":30,"column":79},"end":{"line":30,"column":85}}]},"5":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":19},"end":{"line":33,"column":30}},{"start":{"line":33,"column":34},"end":{"line":33,"column":44}},{"start":{"line":33,"column":48},"end":{"line":33,"column":73}},{"start":{"line":33,"column":77},"end":{"line":33,"column":83}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"7":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":16}},{"start":{"line":34,"column":21},"end":{"line":34,"column":53}},{"start":{"line":34,"column":57},"end":{"line":34,"column":89}},{"start":{"line":34,"column":93},"end":{"line":34,"column":123}}]},"8":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":20},"end":{"line":39,"column":48}},{"start":{"line":39,"column":52},"end":{"line":39,"column":59}}]},"9":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":22},"end":{"line":45,"column":32}},{"start":{"line":45,"column":36},"end":{"line":45,"column":70}},{"start":{"line":45,"column":74},"end":{"line":45,"column":85}}]},"10":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":19}},{"start":{"line":127,"column":23},"end":{"line":127,"column":32}},{"start":{"line":127,"column":36},"end":{"line":127,"column":53}},{"start":{"line":127,"column":57},"end":{"line":127,"column":63}}]},"11":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"12":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":24},"end":{"line":136,"column":86}},{"start":{"line":136,"column":89},"end":{"line":136,"column":93}}]},"13":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":14},"end":{"line":171,"column":45}},{"start":{"line":171,"column":49},"end":{"line":171,"column":65}}]},"14":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":24},"end":{"line":177,"column":54}},{"start":{"line":177,"column":58},"end":{"line":177,"column":73}}]},"15":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":16},"end":{"line":180,"column":19}},{"start":{"line":180,"column":23},"end":{"line":180,"column":47}}]},"16":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":24},"end":{"line":205,"column":27}},{"start":{"line":205,"column":31},"end":{"line":205,"column":63}},{"start":{"line":205,"column":67},"end":{"line":205,"column":98}}]},"17":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":24},"end":{"line":213,"column":57}},{"start":{"line":213,"column":61},"end":{"line":213,"column":96}}]},"18":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":6},"end":{"line":360,"column":6}},{"start":{"line":360,"column":6},"end":{"line":360,"column":6}}]},"19":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":6},"end":{"line":364,"column":6}},{"start":{"line":364,"column":6},"end":{"line":364,"column":6}}]},"20":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":11},"end":{"line":368,"column":11}},{"start":{"line":368,"column":11},"end":{"line":368,"column":11}}]},"21":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":11},"end":{"line":373,"column":11}},{"start":{"line":373,"column":11},"end":{"line":373,"column":11}}]},"22":{"line":385,"type":"binary-expr","locations":[{"start":{"line":385,"column":6},"end":{"line":385,"column":14}},{"start":{"line":385,"column":19},"end":{"line":385,"column":39}}]},"23":{"line":386,"type":"binary-expr","locations":[{"start":{"line":386,"column":6},"end":{"line":386,"column":22}},{"start":{"line":386,"column":27},"end":{"line":386,"column":40}}]},"24":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":6},"end":{"line":401,"column":6}},{"start":{"line":401,"column":6},"end":{"line":401,"column":6}}]},"25":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":6},"end":{"line":417,"column":6}},{"start":{"line":417,"column":6},"end":{"line":417,"column":6}}]},"26":{"line":420,"type":"cond-expr","locations":[{"start":{"line":421,"column":10},"end":{"line":421,"column":102}},{"start":{"line":422,"column":10},"end":{"line":422,"column":25}}]},"27":{"line":421,"type":"cond-expr","locations":[{"start":{"line":421,"column":78},"end":{"line":421,"column":94}},{"start":{"line":421,"column":97},"end":{"line":421,"column":101}}]},"28":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":6},"end":{"line":471,"column":6}},{"start":{"line":471,"column":6},"end":{"line":471,"column":6}}]},"29":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":6},"end":{"line":475,"column":6}},{"start":{"line":475,"column":6},"end":{"line":475,"column":6}}]},"30":{"line":497,"type":"cond-expr","locations":[{"start":{"line":498,"column":10},"end":{"line":498,"column":15}},{"start":{"line":499,"column":10},"end":{"line":499,"column":19}}]},"31":{"line":497,"type":"binary-expr","locations":[{"start":{"line":497,"column":14},"end":{"line":497,"column":31}},{"start":{"line":497,"column":35},"end":{"line":497,"column":52}},{"start":{"line":497,"column":56},"end":{"line":497,"column":79}}]},"32":{"line":514,"type":"cond-expr","locations":[{"start":{"line":514,"column":34},"end":{"line":514,"column":48}},{"start":{"line":514,"column":51},"end":{"line":514,"column":60}}]},"33":{"line":517,"type":"cond-expr","locations":[{"start":{"line":517,"column":32},"end":{"line":517,"column":45}},{"start":{"line":517,"column":48},"end":{"line":517,"column":60}}]},"34":{"line":524,"type":"cond-expr","locations":[{"start":{"line":524,"column":107},"end":{"line":524,"column":121}},{"start":{"line":524,"column":124},"end":{"line":524,"column":132}}]},"35":{"line":524,"type":"binary-expr","locations":[{"start":{"line":524,"column":23},"end":{"line":524,"column":38}},{"start":{"line":524,"column":42},"end":{"line":524,"column":104}}]},"36":{"line":524,"type":"binary-expr","locations":[{"start":{"line":524,"column":43},"end":{"line":524,"column":84}},{"start":{"line":524,"column":88},"end":{"line":524,"column":94}}]},"37":{"line":558,"type":"binary-expr","locations":[{"start":{"line":558,"column":14},"end":{"line":558,"column":36}},{"start":{"line":559,"column":8},"end":{"line":559,"column":61}},{"start":{"line":559,"column":66},"end":{"line":559,"column":68}}]},"38":{"line":559,"type":"binary-expr","locations":[{"start":{"line":559,"column":9},"end":{"line":559,"column":52}},{"start":{"line":559,"column":56},"end":{"line":559,"column":57}}]},"39":{"line":570,"type":"binary-expr","locations":[{"start":{"line":570,"column":14},"end":{"line":572,"column":24}},{"start":{"line":572,"column":29},"end":{"line":572,"column":30}}]},"40":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":6},"end":{"line":584,"column":6}},{"start":{"line":584,"column":6},"end":{"line":584,"column":6}}]},"41":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":13},"end":{"line":586,"column":13}},{"start":{"line":586,"column":13},"end":{"line":586,"column":13}}]},"42":{"line":591,"type":"binary-expr","locations":[{"start":{"line":591,"column":16},"end":{"line":591,"column":22}},{"start":{"line":591,"column":26},"end":{"line":591,"column":28}}]},"43":{"line":594,"type":"cond-expr","locations":[{"start":{"line":595,"column":10},"end":{"line":595,"column":12}},{"start":{"line":596,"column":10},"end":{"line":596,"column":16}}]},"44":{"line":608,"type":"binary-expr","locations":[{"start":{"line":608,"column":13},"end":{"line":608,"column":26}},{"start":{"line":608,"column":30},"end":{"line":608,"column":77}}]},"45":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":6},"end":{"line":622,"column":6}},{"start":{"line":622,"column":6},"end":{"line":622,"column":6}}]},"46":{"line":626,"type":"binary-expr","locations":[{"start":{"line":626,"column":13},"end":{"line":626,"column":36}},{"start":{"line":626,"column":41},"end":{"line":626,"column":57}},{"start":{"line":626,"column":61},"end":{"line":626,"column":79}}]},"47":{"line":637,"type":"binary-expr","locations":[{"start":{"line":637,"column":13},"end":{"line":637,"column":30}},{"start":{"line":637,"column":35},"end":{"line":637,"column":59}},{"start":{"line":637,"column":63},"end":{"line":637,"column":91}}]},"48":{"line":649,"type":"binary-expr","locations":[{"start":{"line":649,"column":21},"end":{"line":649,"column":32}},{"start":{"line":649,"column":36},"end":{"line":649,"column":51}}]},"49":{"line":651,"type":"binary-expr","locations":[{"start":{"line":651,"column":13},"end":{"line":651,"column":19}},{"start":{"line":651,"column":23},"end":{"line":651,"column":27}}]},"50":{"line":661,"type":"cond-expr","locations":[{"start":{"line":661,"column":32},"end":{"line":661,"column":42}},{"start":{"line":661,"column":45},"end":{"line":661,"column":54}}]},"51":{"line":666,"type":"cond-expr","locations":[{"start":{"line":666,"column":39},"end":{"line":666,"column":52}},{"start":{"line":666,"column":55},"end":{"line":666,"column":67}}]},"52":{"line":696,"type":"if","locations":[{"start":{"line":696,"column":8},"end":{"line":696,"column":8}},{"start":{"line":696,"column":8},"end":{"line":696,"column":8}}]},"53":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":10},"end":{"line":698,"column":10}},{"start":{"line":698,"column":10},"end":{"line":698,"column":10}}]},"54":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":17},"end":{"line":702,"column":17}},{"start":{"line":702,"column":17},"end":{"line":702,"column":17}}]},"55":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":6},"end":{"line":721,"column":6}},{"start":{"line":721,"column":6},"end":{"line":721,"column":6}}]},"56":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":11},"end":{"line":727,"column":11}},{"start":{"line":727,"column":11},"end":{"line":727,"column":11}}]},"57":{"line":764,"type":"if","locations":[{"start":{"line":764,"column":6},"end":{"line":764,"column":6}},{"start":{"line":764,"column":6},"end":{"line":764,"column":6}}]},"58":{"line":767,"type":"binary-expr","locations":[{"start":{"line":767,"column":17},"end":{"line":767,"column":29}},{"start":{"line":767,"column":33},"end":{"line":767,"column":53}},{"start":{"line":767,"column":57},"end":{"line":767,"column":69}}]},"59":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":11},"end":{"line":770,"column":11}},{"start":{"line":770,"column":11},"end":{"line":770,"column":11}}]},"60":{"line":770,"type":"binary-expr","locations":[{"start":{"line":770,"column":15},"end":{"line":770,"column":37}},{"start":{"line":770,"column":41},"end":{"line":770,"column":63}}]},"61":{"line":774,"type":"cond-expr","locations":[{"start":{"line":774,"column":52},"end":{"line":774,"column":53}},{"start":{"line":774,"column":56},"end":{"line":774,"column":58}}]},"62":{"line":774,"type":"cond-expr","locations":[{"start":{"line":774,"column":88},"end":{"line":774,"column":89}},{"start":{"line":774,"column":92},"end":{"line":774,"column":94}}]},"63":{"line":795,"type":"cond-expr","locations":[{"start":{"line":795,"column":21},"end":{"line":795,"column":36}},{"start":{"line":795,"column":39},"end":{"line":795,"column":41}}]},"64":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":8},"end":{"line":853,"column":8}},{"start":{"line":853,"column":8},"end":{"line":853,"column":8}}]},"65":{"line":860,"type":"cond-expr","locations":[{"start":{"line":860,"column":61},"end":{"line":860,"column":91}},{"start":{"line":860,"column":94},"end":{"line":860,"column":103}}]},"66":{"line":860,"type":"binary-expr","locations":[{"start":{"line":860,"column":37},"end":{"line":860,"column":42}},{"start":{"line":860,"column":46},"end":{"line":860,"column":57}}]},"67":{"line":862,"type":"binary-expr","locations":[{"start":{"line":862,"column":15},"end":{"line":862,"column":21}},{"start":{"line":862,"column":25},"end":{"line":862,"column":34}}]},"68":{"line":873,"type":"if","locations":[{"start":{"line":873,"column":8},"end":{"line":873,"column":8}},{"start":{"line":873,"column":8},"end":{"line":873,"column":8}}]},"69":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":8},"end":{"line":884,"column":8}},{"start":{"line":884,"column":8},"end":{"line":884,"column":8}}]},"70":{"line":884,"type":"binary-expr","locations":[{"start":{"line":884,"column":12},"end":{"line":884,"column":31}},{"start":{"line":884,"column":35},"end":{"line":884,"column":57}}]},"71":{"line":885,"type":"cond-expr","locations":[{"start":{"line":885,"column":27},"end":{"line":885,"column":37}},{"start":{"line":885,"column":40},"end":{"line":885,"column":53}}]},"72":{"line":886,"type":"if","locations":[{"start":{"line":886,"column":10},"end":{"line":886,"column":10}},{"start":{"line":886,"column":10},"end":{"line":886,"column":10}}]},"73":{"line":889,"type":"if","locations":[{"start":{"line":889,"column":15},"end":{"line":889,"column":15}},{"start":{"line":889,"column":15},"end":{"line":889,"column":15}}]},"74":{"line":905,"type":"if","locations":[{"start":{"line":905,"column":8},"end":{"line":905,"column":8}},{"start":{"line":905,"column":8},"end":{"line":905,"column":8}}]},"75":{"line":917,"type":"binary-expr","locations":[{"start":{"line":917,"column":20},"end":{"line":917,"column":27}},{"start":{"line":917,"column":31},"end":{"line":917,"column":44}}]},"76":{"line":918,"type":"binary-expr","locations":[{"start":{"line":918,"column":15},"end":{"line":918,"column":28}},{"start":{"line":918,"column":33},"end":{"line":918,"column":60}},{"start":{"line":919,"column":12},"end":{"line":919,"column":56}},{"start":{"line":919,"column":61},"end":{"line":919,"column":76}},{"start":{"line":919,"column":80},"end":{"line":919,"column":92}}]},"77":{"line":919,"type":"cond-expr","locations":[{"start":{"line":919,"column":28},"end":{"line":919,"column":48}},{"start":{"line":919,"column":51},"end":{"line":919,"column":56}}]},"78":{"line":929,"type":"if","locations":[{"start":{"line":929,"column":8},"end":{"line":929,"column":8}},{"start":{"line":929,"column":8},"end":{"line":929,"column":8}}]},"79":{"line":929,"type":"binary-expr","locations":[{"start":{"line":929,"column":12},"end":{"line":929,"column":18}},{"start":{"line":929,"column":22},"end":{"line":929,"column":31}}]},"80":{"line":933,"type":"cond-expr","locations":[{"start":{"line":934,"column":12},"end":{"line":934,"column":17}},{"start":{"line":935,"column":13},"end":{"line":935,"column":26}}]},"81":{"line":933,"type":"cond-expr","locations":[{"start":{"line":933,"column":25},"end":{"line":933,"column":39}},{"start":{"line":933,"column":42},"end":{"line":933,"column":63}}]},"82":{"line":938,"type":"if","locations":[{"start":{"line":938,"column":6},"end":{"line":938,"column":6}},{"start":{"line":938,"column":6},"end":{"line":938,"column":6}}]},"83":{"line":945,"type":"cond-expr","locations":[{"start":{"line":945,"column":73},"end":{"line":945,"column":77}},{"start":{"line":945,"column":80},"end":{"line":945,"column":86}}]},"84":{"line":945,"type":"cond-expr","locations":[{"start":{"line":945,"column":52},"end":{"line":945,"column":64}},{"start":{"line":945,"column":67},"end":{"line":945,"column":69}}]},"85":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":6},"end":{"line":949,"column":6}},{"start":{"line":949,"column":6},"end":{"line":949,"column":6}}]},"86":{"line":957,"type":"if","locations":[{"start":{"line":957,"column":8},"end":{"line":957,"column":8}},{"start":{"line":957,"column":8},"end":{"line":957,"column":8}}]},"87":{"line":957,"type":"binary-expr","locations":[{"start":{"line":957,"column":12},"end":{"line":957,"column":25}},{"start":{"line":957,"column":30},"end":{"line":957,"column":54}},{"start":{"line":957,"column":59},"end":{"line":957,"column":74}}]},"88":{"line":967,"type":"if","locations":[{"start":{"line":967,"column":10},"end":{"line":967,"column":10}},{"start":{"line":967,"column":10},"end":{"line":967,"column":10}}]},"89":{"line":992,"type":"binary-expr","locations":[{"start":{"line":992,"column":6},"end":{"line":992,"column":16}},{"start":{"line":992,"column":21},"end":{"line":992,"column":38}}]},"90":{"line":994,"type":"cond-expr","locations":[{"start":{"line":994,"column":32},"end":{"line":994,"column":37}},{"start":{"line":994,"column":40},"end":{"line":994,"column":64}}]},"91":{"line":996,"type":"binary-expr","locations":[{"start":{"line":996,"column":25},"end":{"line":996,"column":35}},{"start":{"line":996,"column":39},"end":{"line":996,"column":42}}]},"92":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":6},"end":{"line":1013,"column":6}},{"start":{"line":1013,"column":6},"end":{"line":1013,"column":6}}]},"93":{"line":1016,"type":"if","locations":[{"start":{"line":1016,"column":8},"end":{"line":1016,"column":8}},{"start":{"line":1016,"column":8},"end":{"line":1016,"column":8}}]},"94":{"line":1016,"type":"binary-expr","locations":[{"start":{"line":1016,"column":12},"end":{"line":1016,"column":28}},{"start":{"line":1016,"column":32},"end":{"line":1016,"column":41}}]},"95":{"line":1022,"type":"if","locations":[{"start":{"line":1022,"column":10},"end":{"line":1022,"column":10}},{"start":{"line":1022,"column":10},"end":{"line":1022,"column":10}}]},"96":{"line":1073,"type":"if","locations":[{"start":{"line":1073,"column":6},"end":{"line":1073,"column":6}},{"start":{"line":1073,"column":6},"end":{"line":1073,"column":6}}]},"97":{"line":1093,"type":"if","locations":[{"start":{"line":1093,"column":8},"end":{"line":1093,"column":8}},{"start":{"line":1093,"column":8},"end":{"line":1093,"column":8}}]},"98":{"line":1094,"type":"cond-expr","locations":[{"start":{"line":1095,"column":14},"end":{"line":1095,"column":27}},{"start":{"line":1096,"column":14},"end":{"line":1096,"column":30}}]},"99":{"line":1094,"type":"binary-expr","locations":[{"start":{"line":1094,"column":24},"end":{"line":1094,"column":29}},{"start":{"line":1094,"column":33},"end":{"line":1094,"column":58}}]},"100":{"line":1130,"type":"if","locations":[{"start":{"line":1130,"column":6},"end":{"line":1130,"column":6}},{"start":{"line":1130,"column":6},"end":{"line":1130,"column":6}}]},"101":{"line":1130,"type":"binary-expr","locations":[{"start":{"line":1130,"column":10},"end":{"line":1130,"column":23}},{"start":{"line":1130,"column":27},"end":{"line":1130,"column":36}}]},"102":{"line":1137,"type":"if","locations":[{"start":{"line":1137,"column":11},"end":{"line":1137,"column":11}},{"start":{"line":1137,"column":11},"end":{"line":1137,"column":11}}]},"103":{"line":1137,"type":"binary-expr","locations":[{"start":{"line":1137,"column":16},"end":{"line":1137,"column":29}},{"start":{"line":1137,"column":33},"end":{"line":1137,"column":46}},{"start":{"line":1138,"column":11},"end":{"line":1138,"column":63}}]},"104":{"line":1140,"type":"if","locations":[{"start":{"line":1140,"column":8},"end":{"line":1140,"column":8}},{"start":{"line":1140,"column":8},"end":{"line":1140,"column":8}}]},"105":{"line":1167,"type":"binary-expr","locations":[{"start":{"line":1167,"column":6},"end":{"line":1167,"column":13}},{"start":{"line":1167,"column":18},"end":{"line":1167,"column":30}}]},"106":{"line":1178,"type":"if","locations":[{"start":{"line":1178,"column":10},"end":{"line":1178,"column":10}},{"start":{"line":1178,"column":10},"end":{"line":1178,"column":10}}]},"107":{"line":1209,"type":"binary-expr","locations":[{"start":{"line":1209,"column":6},"end":{"line":1209,"column":25}},{"start":{"line":1209,"column":30},"end":{"line":1209,"column":58}}]},"108":{"line":1210,"type":"binary-expr","locations":[{"start":{"line":1210,"column":6},"end":{"line":1210,"column":18}},{"start":{"line":1210,"column":23},"end":{"line":1210,"column":44}}]},"109":{"line":1213,"type":"if","locations":[{"start":{"line":1213,"column":6},"end":{"line":1213,"column":6}},{"start":{"line":1213,"column":6},"end":{"line":1213,"column":6}}]},"110":{"line":1213,"type":"binary-expr","locations":[{"start":{"line":1213,"column":10},"end":{"line":1213,"column":16}},{"start":{"line":1213,"column":21},"end":{"line":1213,"column":80}}]},"111":{"line":1213,"type":"binary-expr","locations":[{"start":{"line":1213,"column":33},"end":{"line":1213,"column":58}},{"start":{"line":1213,"column":62},"end":{"line":1213,"column":80}}]},"112":{"line":1215,"type":"if","locations":[{"start":{"line":1215,"column":10},"end":{"line":1215,"column":10}},{"start":{"line":1215,"column":10},"end":{"line":1215,"column":10}}]},"113":{"line":1234,"type":"binary-expr","locations":[{"start":{"line":1234,"column":19},"end":{"line":1234,"column":32}},{"start":{"line":1234,"column":37},"end":{"line":1234,"column":55}}]},"114":{"line":1236,"type":"cond-expr","locations":[{"start":{"line":1236,"column":35},"end":{"line":1236,"column":47}},{"start":{"line":1236,"column":51},"end":{"line":1236,"column":68}}]},"115":{"line":1269,"type":"if","locations":[{"start":{"line":1269,"column":6},"end":{"line":1269,"column":6}},{"start":{"line":1269,"column":6},"end":{"line":1269,"column":6}}]},"116":{"line":1272,"type":"cond-expr","locations":[{"start":{"line":1272,"column":20},"end":{"line":1272,"column":35}},{"start":{"line":1272,"column":38},"end":{"line":1272,"column":44}}]},"117":{"line":1274,"type":"if","locations":[{"start":{"line":1274,"column":8},"end":{"line":1274,"column":8}},{"start":{"line":1274,"column":8},"end":{"line":1274,"column":8}}]},"118":{"line":1276,"type":"binary-expr","locations":[{"start":{"line":1276,"column":22},"end":{"line":1276,"column":41}},{"start":{"line":1276,"column":45},"end":{"line":1276,"column":57}}]},"119":{"line":1278,"type":"if","locations":[{"start":{"line":1278,"column":8},"end":{"line":1278,"column":8}},{"start":{"line":1278,"column":8},"end":{"line":1278,"column":8}}]},"120":{"line":1279,"type":"if","locations":[{"start":{"line":1279,"column":10},"end":{"line":1279,"column":10}},{"start":{"line":1279,"column":10},"end":{"line":1279,"column":10}}]},"121":{"line":1281,"type":"if","locations":[{"start":{"line":1281,"column":12},"end":{"line":1281,"column":12}},{"start":{"line":1281,"column":12},"end":{"line":1281,"column":12}}]},"122":{"line":1309,"type":"binary-expr","locations":[{"start":{"line":1309,"column":19},"end":{"line":1309,"column":32}},{"start":{"line":1309,"column":37},"end":{"line":1309,"column":55}}]},"123":{"line":1312,"type":"cond-expr","locations":[{"start":{"line":1313,"column":12},"end":{"line":1313,"column":24}},{"start":{"line":1314,"column":13},"end":{"line":1314,"column":30}}]},"124":{"line":1333,"type":"if","locations":[{"start":{"line":1333,"column":6},"end":{"line":1333,"column":6}},{"start":{"line":1333,"column":6},"end":{"line":1333,"column":6}}]},"125":{"line":1336,"type":"if","locations":[{"start":{"line":1336,"column":8},"end":{"line":1336,"column":8}},{"start":{"line":1336,"column":8},"end":{"line":1336,"column":8}}]},"126":{"line":1336,"type":"binary-expr","locations":[{"start":{"line":1336,"column":12},"end":{"line":1336,"column":28}},{"start":{"line":1336,"column":32},"end":{"line":1336,"column":41}}]},"127":{"line":1342,"type":"if","locations":[{"start":{"line":1342,"column":10},"end":{"line":1342,"column":10}},{"start":{"line":1342,"column":10},"end":{"line":1342,"column":10}}]},"128":{"line":1346,"type":"if","locations":[{"start":{"line":1346,"column":10},"end":{"line":1346,"column":10}},{"start":{"line":1346,"column":10},"end":{"line":1346,"column":10}}]},"129":{"line":1376,"type":"if","locations":[{"start":{"line":1376,"column":8},"end":{"line":1376,"column":8}},{"start":{"line":1376,"column":8},"end":{"line":1376,"column":8}}]},"130":{"line":1395,"type":"if","locations":[{"start":{"line":1395,"column":6},"end":{"line":1395,"column":6}},{"start":{"line":1395,"column":6},"end":{"line":1395,"column":6}}]},"131":{"line":1412,"type":"cond-expr","locations":[{"start":{"line":1412,"column":36},"end":{"line":1412,"column":37}},{"start":{"line":1412,"column":40},"end":{"line":1412,"column":57}}]},"132":{"line":1412,"type":"cond-expr","locations":[{"start":{"line":1412,"column":50},"end":{"line":1412,"column":51}},{"start":{"line":1412,"column":54},"end":{"line":1412,"column":57}}]},"133":{"line":1427,"type":"if","locations":[{"start":{"line":1427,"column":6},"end":{"line":1427,"column":6}},{"start":{"line":1427,"column":6},"end":{"line":1427,"column":6}}]},"134":{"line":1431,"type":"cond-expr","locations":[{"start":{"line":1431,"column":36},"end":{"line":1431,"column":52}},{"start":{"line":1431,"column":56},"end":{"line":1431,"column":57}}]},"135":{"line":1431,"type":"cond-expr","locations":[{"start":{"line":1431,"column":46},"end":{"line":1431,"column":47}},{"start":{"line":1431,"column":50},"end":{"line":1431,"column":52}}]},"136":{"line":1434,"type":"cond-expr","locations":[{"start":{"line":1434,"column":46},"end":{"line":1434,"column":47}},{"start":{"line":1434,"column":50},"end":{"line":1434,"column":78}}]},"137":{"line":1434,"type":"binary-expr","locations":[{"start":{"line":1434,"column":17},"end":{"line":1434,"column":28}},{"start":{"line":1434,"column":32},"end":{"line":1434,"column":43}}]},"138":{"line":1435,"type":"cond-expr","locations":[{"start":{"line":1435,"column":30},"end":{"line":1435,"column":46}},{"start":{"line":1435,"column":50},"end":{"line":1435,"column":51}}]},"139":{"line":1435,"type":"cond-expr","locations":[{"start":{"line":1435,"column":40},"end":{"line":1435,"column":41}},{"start":{"line":1435,"column":44},"end":{"line":1435,"column":46}}]},"140":{"line":1446,"type":"if","locations":[{"start":{"line":1446,"column":6},"end":{"line":1446,"column":6}},{"start":{"line":1446,"column":6},"end":{"line":1446,"column":6}}]},"141":{"line":1446,"type":"binary-expr","locations":[{"start":{"line":1446,"column":10},"end":{"line":1446,"column":23}},{"start":{"line":1446,"column":27},"end":{"line":1446,"column":42}}]},"142":{"line":1473,"type":"if","locations":[{"start":{"line":1473,"column":10},"end":{"line":1473,"column":10}},{"start":{"line":1473,"column":10},"end":{"line":1473,"column":10}}]},"143":{"line":1476,"type":"if","locations":[{"start":{"line":1476,"column":10},"end":{"line":1476,"column":10}},{"start":{"line":1476,"column":10},"end":{"line":1476,"column":10}}]},"144":{"line":1476,"type":"binary-expr","locations":[{"start":{"line":1476,"column":14},"end":{"line":1476,"column":19}},{"start":{"line":1476,"column":23},"end":{"line":1476,"column":47}}]},"145":{"line":1477,"type":"if","locations":[{"start":{"line":1477,"column":12},"end":{"line":1477,"column":12}},{"start":{"line":1477,"column":12},"end":{"line":1477,"column":12}}]},"146":{"line":1479,"type":"if","locations":[{"start":{"line":1479,"column":14},"end":{"line":1479,"column":14}},{"start":{"line":1479,"column":14},"end":{"line":1479,"column":14}}]},"147":{"line":1483,"type":"if","locations":[{"start":{"line":1483,"column":14},"end":{"line":1483,"column":14}},{"start":{"line":1483,"column":14},"end":{"line":1483,"column":14}}]},"148":{"line":1489,"type":"if","locations":[{"start":{"line":1489,"column":17},"end":{"line":1489,"column":17}},{"start":{"line":1489,"column":17},"end":{"line":1489,"column":17}}]},"149":{"line":1489,"type":"binary-expr","locations":[{"start":{"line":1489,"column":21},"end":{"line":1489,"column":31}},{"start":{"line":1489,"column":35},"end":{"line":1489,"column":63}}]},"150":{"line":1493,"type":"if","locations":[{"start":{"line":1493,"column":12},"end":{"line":1493,"column":12}},{"start":{"line":1493,"column":12},"end":{"line":1493,"column":12}}]},"151":{"line":1499,"type":"if","locations":[{"start":{"line":1499,"column":15},"end":{"line":1499,"column":15}},{"start":{"line":1499,"column":15},"end":{"line":1499,"column":15}}]},"152":{"line":1499,"type":"binary-expr","locations":[{"start":{"line":1499,"column":19},"end":{"line":1499,"column":38}},{"start":{"line":1499,"column":42},"end":{"line":1499,"column":81}}]},"153":{"line":1499,"type":"binary-expr","locations":[{"start":{"line":1499,"column":44},"end":{"line":1499,"column":57}},{"start":{"line":1499,"column":61},"end":{"line":1499,"column":80}}]},"154":{"line":1507,"type":"if","locations":[{"start":{"line":1507,"column":6},"end":{"line":1507,"column":6}},{"start":{"line":1507,"column":6},"end":{"line":1507,"column":6}}]},"155":{"line":1507,"type":"binary-expr","locations":[{"start":{"line":1507,"column":10},"end":{"line":1507,"column":24}},{"start":{"line":1507,"column":29},"end":{"line":1507,"column":81}}]},"156":{"line":1530,"type":"binary-expr","locations":[{"start":{"line":1530,"column":19},"end":{"line":1530,"column":29}},{"start":{"line":1530,"column":34},"end":{"line":1530,"column":73}}]},"157":{"line":1530,"type":"cond-expr","locations":[{"start":{"line":1530,"column":48},"end":{"line":1530,"column":50}},{"start":{"line":1530,"column":53},"end":{"line":1530,"column":73}}]},"158":{"line":1532,"type":"if","locations":[{"start":{"line":1532,"column":6},"end":{"line":1532,"column":6}},{"start":{"line":1532,"column":6},"end":{"line":1532,"column":6}}]},"159":{"line":1535,"type":"cond-expr","locations":[{"start":{"line":1535,"column":61},"end":{"line":1535,"column":62}},{"start":{"line":1535,"column":65},"end":{"line":1535,"column":66}}]},"160":{"line":1536,"type":"cond-expr","locations":[{"start":{"line":1536,"column":70},"end":{"line":1536,"column":72}},{"start":{"line":1536,"column":75},"end":{"line":1536,"column":78}}]},"161":{"line":1559,"type":"if","locations":[{"start":{"line":1559,"column":8},"end":{"line":1559,"column":8}},{"start":{"line":1559,"column":8},"end":{"line":1559,"column":8}}]},"162":{"line":1566,"type":"binary-expr","locations":[{"start":{"line":1566,"column":27},"end":{"line":1566,"column":37}},{"start":{"line":1566,"column":42},"end":{"line":1566,"column":63}},{"start":{"line":1566,"column":68},"end":{"line":1566,"column":90}},{"start":{"line":1566,"column":94},"end":{"line":1566,"column":119}}]},"163":{"line":1568,"type":"binary-expr","locations":[{"start":{"line":1568,"column":19},"end":{"line":1568,"column":29}},{"start":{"line":1568,"column":34},"end":{"line":1568,"column":83}}]},"164":{"line":1568,"type":"cond-expr","locations":[{"start":{"line":1568,"column":58},"end":{"line":1568,"column":78}},{"start":{"line":1568,"column":81},"end":{"line":1568,"column":83}}]},"165":{"line":1572,"type":"binary-expr","locations":[{"start":{"line":1572,"column":24},"end":{"line":1572,"column":37}},{"start":{"line":1572,"column":42},"end":{"line":1572,"column":97}}]},"166":{"line":1577,"type":"cond-expr","locations":[{"start":{"line":1578,"column":12},"end":{"line":1590,"column":43}},{"start":{"line":1592,"column":12},"end":{"line":1593,"column":85}}]},"167":{"line":1596,"type":"binary-expr","locations":[{"start":{"line":1596,"column":24},"end":{"line":1596,"column":39}},{"start":{"line":1596,"column":43},"end":{"line":1596,"column":53}}]},"168":{"line":1599,"type":"if","locations":[{"start":{"line":1599,"column":10},"end":{"line":1599,"column":10}},{"start":{"line":1599,"column":10},"end":{"line":1599,"column":10}}]},"169":{"line":1604,"type":"if","locations":[{"start":{"line":1604,"column":15},"end":{"line":1604,"column":15}},{"start":{"line":1604,"column":15},"end":{"line":1604,"column":15}}]},"170":{"line":1608,"type":"binary-expr","locations":[{"start":{"line":1608,"column":23},"end":{"line":1608,"column":35}},{"start":{"line":1608,"column":39},"end":{"line":1608,"column":107}},{"start":{"line":1608,"column":111},"end":{"line":1608,"column":119}}]},"171":{"line":1608,"type":"binary-expr","locations":[{"start":{"line":1608,"column":40},"end":{"line":1608,"column":76}},{"start":{"line":1608,"column":80},"end":{"line":1608,"column":82}}]},"172":{"line":1613,"type":"binary-expr","locations":[{"start":{"line":1613,"column":24},"end":{"line":1613,"column":25}},{"start":{"line":1613,"column":29},"end":{"line":1613,"column":49}}]},"173":{"line":1617,"type":"if","locations":[{"start":{"line":1617,"column":8},"end":{"line":1617,"column":8}},{"start":{"line":1617,"column":8},"end":{"line":1617,"column":8}}]},"174":{"line":1617,"type":"binary-expr","locations":[{"start":{"line":1617,"column":12},"end":{"line":1617,"column":21}},{"start":{"line":1617,"column":25},"end":{"line":1617,"column":34}},{"start":{"line":1617,"column":38},"end":{"line":1617,"column":46}}]},"175":{"line":1619,"type":"cond-expr","locations":[{"start":{"line":1620,"column":16},"end":{"line":1620,"column":69}},{"start":{"line":1621,"column":16},"end":{"line":1621,"column":56}}]},"176":{"line":1619,"type":"binary-expr","locations":[{"start":{"line":1619,"column":12},"end":{"line":1619,"column":22}},{"start":{"line":1619,"column":27},"end":{"line":1619,"column":39}},{"start":{"line":1619,"column":43},"end":{"line":1619,"column":55}}]},"177":{"line":1637,"type":"if","locations":[{"start":{"line":1637,"column":12},"end":{"line":1637,"column":12}},{"start":{"line":1637,"column":12},"end":{"line":1637,"column":12}}]},"178":{"line":1638,"type":"binary-expr","locations":[{"start":{"line":1638,"column":28},"end":{"line":1638,"column":29}},{"start":{"line":1638,"column":33},"end":{"line":1638,"column":53}}]},"179":{"line":1643,"type":"if","locations":[{"start":{"line":1643,"column":8},"end":{"line":1643,"column":8}},{"start":{"line":1643,"column":8},"end":{"line":1643,"column":8}}]},"180":{"line":1645,"type":"binary-expr","locations":[{"start":{"line":1645,"column":33},"end":{"line":1645,"column":41}},{"start":{"line":1645,"column":45},"end":{"line":1645,"column":50}}]},"181":{"line":1657,"type":"cond-expr","locations":[{"start":{"line":1657,"column":31},"end":{"line":1657,"column":65}},{"start":{"line":1657,"column":68},"end":{"line":1657,"column":70}}]},"182":{"line":1657,"type":"binary-expr","locations":[{"start":{"line":1657,"column":31},"end":{"line":1657,"column":51}},{"start":{"line":1657,"column":55},"end":{"line":1657,"column":65}}]},"183":{"line":1662,"type":"cond-expr","locations":[{"start":{"line":1662,"column":34},"end":{"line":1662,"column":56}},{"start":{"line":1662,"column":59},"end":{"line":1662,"column":84}}]},"184":{"line":1663,"type":"cond-expr","locations":[{"start":{"line":1663,"column":31},"end":{"line":1663,"column":44}},{"start":{"line":1663,"column":47},"end":{"line":1663,"column":82}}]},"185":{"line":1665,"type":"cond-expr","locations":[{"start":{"line":1665,"column":37},"end":{"line":1665,"column":62}},{"start":{"line":1665,"column":65},"end":{"line":1665,"column":93}}]},"186":{"line":1669,"type":"if","locations":[{"start":{"line":1669,"column":8},"end":{"line":1669,"column":8}},{"start":{"line":1669,"column":8},"end":{"line":1669,"column":8}}]},"187":{"line":1675,"type":"if","locations":[{"start":{"line":1675,"column":13},"end":{"line":1675,"column":13}},{"start":{"line":1675,"column":13},"end":{"line":1675,"column":13}}]},"188":{"line":1676,"type":"if","locations":[{"start":{"line":1676,"column":10},"end":{"line":1676,"column":10}},{"start":{"line":1676,"column":10},"end":{"line":1676,"column":10}}]},"189":{"line":1688,"type":"if","locations":[{"start":{"line":1688,"column":13},"end":{"line":1688,"column":13}},{"start":{"line":1688,"column":13},"end":{"line":1688,"column":13}}]},"190":{"line":1732,"type":"if","locations":[{"start":{"line":1732,"column":10},"end":{"line":1732,"column":10}},{"start":{"line":1732,"column":10},"end":{"line":1732,"column":10}}]},"191":{"line":1734,"type":"if","locations":[{"start":{"line":1734,"column":12},"end":{"line":1734,"column":12}},{"start":{"line":1734,"column":12},"end":{"line":1734,"column":12}}]},"192":{"line":1742,"type":"if","locations":[{"start":{"line":1742,"column":15},"end":{"line":1742,"column":15}},{"start":{"line":1742,"column":15},"end":{"line":1742,"column":15}}]},"193":{"line":1748,"type":"if","locations":[{"start":{"line":1748,"column":15},"end":{"line":1748,"column":15}},{"start":{"line":1748,"column":15},"end":{"line":1748,"column":15}}]},"194":{"line":1757,"type":"if","locations":[{"start":{"line":1757,"column":10},"end":{"line":1757,"column":10}},{"start":{"line":1757,"column":10},"end":{"line":1757,"column":10}}]},"195":{"line":1782,"type":"if","locations":[{"start":{"line":1782,"column":8},"end":{"line":1782,"column":8}},{"start":{"line":1782,"column":8},"end":{"line":1782,"column":8}}]},"196":{"line":1782,"type":"binary-expr","locations":[{"start":{"line":1782,"column":29},"end":{"line":1782,"column":43}},{"start":{"line":1782,"column":47},"end":{"line":1782,"column":63}}]},"197":{"line":1788,"type":"if","locations":[{"start":{"line":1788,"column":6},"end":{"line":1788,"column":6}},{"start":{"line":1788,"column":6},"end":{"line":1788,"column":6}}]},"198":{"line":1788,"type":"binary-expr","locations":[{"start":{"line":1788,"column":10},"end":{"line":1788,"column":23}},{"start":{"line":1788,"column":27},"end":{"line":1788,"column":81}}]},"199":{"line":1792,"type":"if","locations":[{"start":{"line":1792,"column":6},"end":{"line":1792,"column":6}},{"start":{"line":1792,"column":6},"end":{"line":1792,"column":6}}]},"200":{"line":1792,"type":"binary-expr","locations":[{"start":{"line":1792,"column":10},"end":{"line":1792,"column":25}},{"start":{"line":1792,"column":29},"end":{"line":1792,"column":82}}]},"201":{"line":1799,"type":"if","locations":[{"start":{"line":1799,"column":6},"end":{"line":1799,"column":6}},{"start":{"line":1799,"column":6},"end":{"line":1799,"column":6}}]},"202":{"line":1804,"type":"binary-expr","locations":[{"start":{"line":1804,"column":6},"end":{"line":1804,"column":21}},{"start":{"line":1804,"column":26},"end":{"line":1804,"column":75}}]},"203":{"line":1818,"type":"binary-expr","locations":[{"start":{"line":1818,"column":6},"end":{"line":1818,"column":13}},{"start":{"line":1818,"column":18},"end":{"line":1818,"column":30}}]},"204":{"line":1849,"type":"if","locations":[{"start":{"line":1849,"column":8},"end":{"line":1849,"column":8}},{"start":{"line":1849,"column":8},"end":{"line":1849,"column":8}}]},"205":{"line":1850,"type":"if","locations":[{"start":{"line":1850,"column":10},"end":{"line":1850,"column":10}},{"start":{"line":1850,"column":10},"end":{"line":1850,"column":10}}]},"206":{"line":1855,"type":"if","locations":[{"start":{"line":1855,"column":12},"end":{"line":1855,"column":12}},{"start":{"line":1855,"column":12},"end":{"line":1855,"column":12}}]},"207":{"line":1858,"type":"if","locations":[{"start":{"line":1858,"column":12},"end":{"line":1858,"column":12}},{"start":{"line":1858,"column":12},"end":{"line":1858,"column":12}}]},"208":{"line":1866,"type":"if","locations":[{"start":{"line":1866,"column":15},"end":{"line":1866,"column":15}},{"start":{"line":1866,"column":15},"end":{"line":1866,"column":15}}]},"209":{"line":1889,"type":"binary-expr","locations":[{"start":{"line":1889,"column":23},"end":{"line":1889,"column":41}},{"start":{"line":1889,"column":45},"end":{"line":1889,"column":107}}]},"210":{"line":1894,"type":"if","locations":[{"start":{"line":1894,"column":8},"end":{"line":1894,"column":8}},{"start":{"line":1894,"column":8},"end":{"line":1894,"column":8}}]},"211":{"line":1894,"type":"binary-expr","locations":[{"start":{"line":1894,"column":12},"end":{"line":1894,"column":16}},{"start":{"line":1894,"column":20},"end":{"line":1894,"column":40}}]},"212":{"line":1898,"type":"if","locations":[{"start":{"line":1898,"column":8},"end":{"line":1898,"column":8}},{"start":{"line":1898,"column":8},"end":{"line":1898,"column":8}}]},"213":{"line":1902,"type":"binary-expr","locations":[{"start":{"line":1902,"column":21},"end":{"line":1902,"column":60}},{"start":{"line":1902,"column":64},"end":{"line":1902,"column":65}}]},"214":{"line":1910,"type":"binary-expr","locations":[{"start":{"line":1910,"column":21},"end":{"line":1910,"column":48}},{"start":{"line":1910,"column":52},"end":{"line":1910,"column":67}}]},"215":{"line":1910,"type":"binary-expr","locations":[{"start":{"line":1910,"column":28},"end":{"line":1910,"column":42}},{"start":{"line":1910,"column":46},"end":{"line":1910,"column":47}}]},"216":{"line":1914,"type":"binary-expr","locations":[{"start":{"line":1914,"column":16},"end":{"line":1914,"column":34}},{"start":{"line":1914,"column":38},"end":{"line":1914,"column":39}}]},"217":{"line":1930,"type":"if","locations":[{"start":{"line":1930,"column":10},"end":{"line":1930,"column":10}},{"start":{"line":1930,"column":10},"end":{"line":1930,"column":10}}]},"218":{"line":1937,"type":"if","locations":[{"start":{"line":1937,"column":10},"end":{"line":1937,"column":10}},{"start":{"line":1937,"column":10},"end":{"line":1937,"column":10}}]},"219":{"line":1944,"type":"if","locations":[{"start":{"line":1944,"column":8},"end":{"line":1944,"column":8}},{"start":{"line":1944,"column":8},"end":{"line":1944,"column":8}}]},"220":{"line":1944,"type":"binary-expr","locations":[{"start":{"line":1944,"column":12},"end":{"line":1944,"column":28}},{"start":{"line":1944,"column":32},"end":{"line":1944,"column":41}}]},"221":{"line":1972,"type":"binary-expr","locations":[{"start":{"line":1972,"column":6},"end":{"line":1972,"column":13}},{"start":{"line":1972,"column":18},"end":{"line":1972,"column":30}}]},"222":{"line":1975,"type":"if","locations":[{"start":{"line":1975,"column":6},"end":{"line":1975,"column":6}},{"start":{"line":1975,"column":6},"end":{"line":1975,"column":6}}]},"223":{"line":1991,"type":"if","locations":[{"start":{"line":1991,"column":6},"end":{"line":1991,"column":6}},{"start":{"line":1991,"column":6},"end":{"line":1991,"column":6}}]},"224":{"line":1994,"type":"cond-expr","locations":[{"start":{"line":1994,"column":29},"end":{"line":1994,"column":45}},{"start":{"line":1994,"column":48},"end":{"line":1994,"column":60}}]},"225":{"line":1997,"type":"if","locations":[{"start":{"line":1997,"column":8},"end":{"line":1997,"column":8}},{"start":{"line":1997,"column":8},"end":{"line":1997,"column":8}}]},"226":{"line":2000,"type":"if","locations":[{"start":{"line":2000,"column":8},"end":{"line":2000,"column":8}},{"start":{"line":2000,"column":8},"end":{"line":2000,"column":8}}]},"227":{"line":2004,"type":"if","locations":[{"start":{"line":2004,"column":10},"end":{"line":2004,"column":10}},{"start":{"line":2004,"column":10},"end":{"line":2004,"column":10}}]},"228":{"line":2010,"type":"if","locations":[{"start":{"line":2010,"column":6},"end":{"line":2010,"column":6}},{"start":{"line":2010,"column":6},"end":{"line":2010,"column":6}}]},"229":{"line":2022,"type":"if","locations":[{"start":{"line":2022,"column":8},"end":{"line":2022,"column":8}},{"start":{"line":2022,"column":8},"end":{"line":2022,"column":8}}]},"230":{"line":2025,"type":"if","locations":[{"start":{"line":2025,"column":10},"end":{"line":2025,"column":10}},{"start":{"line":2025,"column":10},"end":{"line":2025,"column":10}}]},"231":{"line":2025,"type":"binary-expr","locations":[{"start":{"line":2025,"column":14},"end":{"line":2025,"column":22}},{"start":{"line":2025,"column":26},"end":{"line":2025,"column":68}}]},"232":{"line":2029,"type":"if","locations":[{"start":{"line":2029,"column":10},"end":{"line":2029,"column":10}},{"start":{"line":2029,"column":10},"end":{"line":2029,"column":10}}]},"233":{"line":2038,"type":"if","locations":[{"start":{"line":2038,"column":6},"end":{"line":2038,"column":6}},{"start":{"line":2038,"column":6},"end":{"line":2038,"column":6}}]},"234":{"line":2042,"type":"if","locations":[{"start":{"line":2042,"column":6},"end":{"line":2042,"column":6}},{"start":{"line":2042,"column":6},"end":{"line":2042,"column":6}}]},"235":{"line":2045,"type":"if","locations":[{"start":{"line":2045,"column":8},"end":{"line":2045,"column":8}},{"start":{"line":2045,"column":8},"end":{"line":2045,"column":8}}]},"236":{"line":2047,"type":"if","locations":[{"start":{"line":2047,"column":15},"end":{"line":2047,"column":15}},{"start":{"line":2047,"column":15},"end":{"line":2047,"column":15}}]},"237":{"line":2056,"type":"if","locations":[{"start":{"line":2056,"column":8},"end":{"line":2056,"column":8}},{"start":{"line":2056,"column":8},"end":{"line":2056,"column":8}}]},"238":{"line":2093,"type":"if","locations":[{"start":{"line":2093,"column":6},"end":{"line":2093,"column":6}},{"start":{"line":2093,"column":6},"end":{"line":2093,"column":6}}]},"239":{"line":2094,"type":"binary-expr","locations":[{"start":{"line":2094,"column":30},"end":{"line":2094,"column":98}},{"start":{"line":2094,"column":103},"end":{"line":2094,"column":118}}]},"240":{"line":2094,"type":"cond-expr","locations":[{"start":{"line":2094,"column":77},"end":{"line":2094,"column":88}},{"start":{"line":2094,"column":91},"end":{"line":2094,"column":98}}]},"241":{"line":2094,"type":"binary-expr","locations":[{"start":{"line":2094,"column":41},"end":{"line":2094,"column":48}},{"start":{"line":2094,"column":52},"end":{"line":2094,"column":65}}]},"242":{"line":2097,"type":"if","locations":[{"start":{"line":2097,"column":8},"end":{"line":2097,"column":8}},{"start":{"line":2097,"column":8},"end":{"line":2097,"column":8}}]},"243":{"line":2098,"type":"if","locations":[{"start":{"line":2098,"column":10},"end":{"line":2098,"column":10}},{"start":{"line":2098,"column":10},"end":{"line":2098,"column":10}}]},"244":{"line":2263,"type":"binary-expr","locations":[{"start":{"line":2263,"column":18},"end":{"line":2263,"column":34}},{"start":{"line":2263,"column":38},"end":{"line":2263,"column":57}},{"start":{"line":2263,"column":62},"end":{"line":2275,"column":7}}]},"245":{"line":2264,"type":"binary-expr","locations":[{"start":{"line":2264,"column":23},"end":{"line":2264,"column":40}},{"start":{"line":2264,"column":44},"end":{"line":2264,"column":71}},{"start":{"line":2264,"column":75},"end":{"line":2264,"column":79}}]},"246":{"line":2273,"type":"binary-expr","locations":[{"start":{"line":2273,"column":17},"end":{"line":2273,"column":33}},{"start":{"line":2273,"column":37},"end":{"line":2273,"column":39}}]},"247":{"line":2763,"type":"if","locations":[{"start":{"line":2763,"column":8},"end":{"line":2763,"column":8}},{"start":{"line":2763,"column":8},"end":{"line":2763,"column":8}}]},"248":{"line":2785,"type":"if","locations":[{"start":{"line":2785,"column":2},"end":{"line":2785,"column":2}},{"start":{"line":2785,"column":2},"end":{"line":2785,"column":2}}]},"249":{"line":2785,"type":"binary-expr","locations":[{"start":{"line":2785,"column":6},"end":{"line":2785,"column":33}},{"start":{"line":2785,"column":37},"end":{"line":2785,"column":66}},{"start":{"line":2785,"column":70},"end":{"line":2785,"column":80}}]},"250":{"line":2798,"type":"if","locations":[{"start":{"line":2798,"column":4},"end":{"line":2798,"column":4}},{"start":{"line":2798,"column":4},"end":{"line":2798,"column":4}}]},"251":{"line":2798,"type":"binary-expr","locations":[{"start":{"line":2798,"column":8},"end":{"line":2798,"column":19}},{"start":{"line":2798,"column":23},"end":{"line":2798,"column":33}}]},"252":{"line":2800,"type":"if","locations":[{"start":{"line":2800,"column":6},"end":{"line":2800,"column":6}},{"start":{"line":2800,"column":6},"end":{"line":2800,"column":6}}]}},"code":["/*!"," * Benchmark.js <https://benchmarkjs.com/>"," * Copyright 2010-2016 Mathias Bynens <https://mths.be/>"," * Based on JSLitmus.js, copyright Robert Kieffer <http://broofa.com/>"," * Modified by John-David Dalton <http://allyoucanleet.com/>"," * Available under MIT license <https://mths.be/mit>"," */",";(function() {","  'use strict';","","  /** Used as a safe reference for `undefined` in pre ES5 environments. */","  var undefined;","","  /** Used to determine if values are of the language type Object. */","  var objectTypes = {","    'function': true,","    'object': true","  };","","  /** Used as a reference to the global object. */","  var root = (objectTypes[typeof window] && window) || this;","","  /** Detect free variable `define`. */","  var freeDefine = typeof define == 'function' && typeof define.amd == 'object' && define.amd && define;","","  /** Detect free variable `exports`. */","  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;","","  /** Detect free variable `module`. */","  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;","","  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */","  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;","  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {","    root = freeGlobal;","  }","","  /** Detect free variable `require`. */","  var freeRequire = typeof require == 'function' && require;","","  /** Used to assign each benchmark an incremented id. */","  var counter = 0;","","  /** Detect the popular CommonJS extension `module.exports`. */","  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;","","  /** Used to detect primitive types. */","  var rePrimitive = /^(?:boolean|number|string|undefined)$/;","","  /** Used to make every compiled test unique. */","  var uidCounter = 0;","","  /** Used to assign default `context` object properties. */","  var contextProps = [","    'Array', 'Date', 'Function', 'Math', 'Object', 'RegExp', 'String', '_',","    'clearTimeout', 'chrome', 'chromium', 'document', 'navigator', 'phantom',","    'platform', 'process', 'runtime', 'setTimeout'","  ];","","  /** Used to avoid hz of Infinity. */","  var divisors = {","    '1': 4096,","    '2': 512,","    '3': 64,","    '4': 8,","    '5': 0","  };","","  /**","   * T-Distribution two-tailed critical values for 95% confidence.","   * For more info see http://www.itl.nist.gov/div898/handbook/eda/section3/eda3672.htm.","   */","  var tTable = {","    '1':  12.706, '2':  4.303, '3':  3.182, '4':  2.776, '5':  2.571, '6':  2.447,","    '7':  2.365,  '8':  2.306, '9':  2.262, '10': 2.228, '11': 2.201, '12': 2.179,","    '13': 2.16,   '14': 2.145, '15': 2.131, '16': 2.12,  '17': 2.11,  '18': 2.101,","    '19': 2.093,  '20': 2.086, '21': 2.08,  '22': 2.074, '23': 2.069, '24': 2.064,","    '25': 2.06,   '26': 2.056, '27': 2.052, '28': 2.048, '29': 2.045, '30': 2.042,","    'infinity': 1.96","  };","","  /**","   * Critical Mann-Whitney U-values for 95% confidence.","   * For more info see http://www.saburchill.com/IBbiology/stats/003.html.","   */","  var uTable = {","    '5':  [0, 1, 2],","    '6':  [1, 2, 3, 5],","    '7':  [1, 3, 5, 6, 8],","    '8':  [2, 4, 6, 8, 10, 13],","    '9':  [2, 4, 7, 10, 12, 15, 17],","    '10': [3, 5, 8, 11, 14, 17, 20, 23],","    '11': [3, 6, 9, 13, 16, 19, 23, 26, 30],","    '12': [4, 7, 11, 14, 18, 22, 26, 29, 33, 37],","    '13': [4, 8, 12, 16, 20, 24, 28, 33, 37, 41, 45],","    '14': [5, 9, 13, 17, 22, 26, 31, 36, 40, 45, 50, 55],","    '15': [5, 10, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64],","    '16': [6, 11, 15, 21, 26, 31, 37, 42, 47, 53, 59, 64, 70, 75],","    '17': [6, 11, 17, 22, 28, 34, 39, 45, 51, 57, 63, 67, 75, 81, 87],","    '18': [7, 12, 18, 24, 30, 36, 42, 48, 55, 61, 67, 74, 80, 86, 93, 99],","    '19': [7, 13, 19, 25, 32, 38, 45, 52, 58, 65, 72, 78, 85, 92, 99, 106, 113],","    '20': [8, 14, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, 98, 105, 112, 119, 127],","    '21': [8, 15, 22, 29, 36, 43, 50, 58, 65, 73, 80, 88, 96, 103, 111, 119, 126, 134, 142],","    '22': [9, 16, 23, 30, 38, 45, 53, 61, 69, 77, 85, 93, 101, 109, 117, 125, 133, 141, 150, 158],","    '23': [9, 17, 24, 32, 40, 48, 56, 64, 73, 81, 89, 98, 106, 115, 123, 132, 140, 149, 157, 166, 175],","    '24': [10, 17, 25, 33, 42, 50, 59, 67, 76, 85, 94, 102, 111, 120, 129, 138, 147, 156, 165, 174, 183, 192],","    '25': [10, 18, 27, 35, 44, 53, 62, 71, 80, 89, 98, 107, 117, 126, 135, 145, 154, 163, 173, 182, 192, 201, 211],","    '26': [11, 19, 28, 37, 46, 55, 64, 74, 83, 93, 102, 112, 122, 132, 141, 151, 161, 171, 181, 191, 200, 210, 220, 230],","    '27': [11, 20, 29, 38, 48, 57, 67, 77, 87, 97, 107, 118, 125, 138, 147, 158, 168, 178, 188, 199, 209, 219, 230, 240, 250],","    '28': [12, 21, 30, 40, 50, 60, 70, 80, 90, 101, 111, 122, 132, 143, 154, 164, 175, 186, 196, 207, 218, 228, 239, 250, 261, 272],","    '29': [13, 22, 32, 42, 52, 62, 73, 83, 94, 105, 116, 127, 138, 149, 160, 171, 182, 193, 204, 215, 226, 238, 249, 260, 271, 282, 294],","    '30': [13, 23, 33, 43, 54, 65, 76, 87, 98, 109, 120, 131, 143, 154, 166, 177, 189, 200, 212, 223, 235, 247, 258, 270, 282, 293, 305, 317]","  };","","  /*--------------------------------------------------------------------------*/","","  /**","   * Create a new `Benchmark` function using the given `context` object.","   *","   * @static","   * @memberOf Benchmark","   * @param {Object} [context=root] The context object.","   * @returns {Function} Returns a new `Benchmark` function.","   */","  function runInContext(context) {","    // Exit early if unable to acquire lodash.","    var _ = context && context._ || require('lodash') || root._;","    if (!_) {","      Benchmark.runInContext = runInContext;","      return Benchmark;","    }","    // Avoid issues with some ES3 environments that attempt to use values, named","    // after built-in constructors like `Object`, for the creation of literals.","    // ES5 clears this up by stating that literals must use built-in constructors.","    // See http://es5.github.io/#x11.1.5.","    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;","","    /** Native constructor references. */","    var Array = context.Array,","        Date = context.Date,","        Function = context.Function,","        Math = context.Math,","        Object = context.Object,","        RegExp = context.RegExp,","        String = context.String;","","    /** Used for `Array` and `Object` method references. */","    var arrayRef = [],","        objectProto = Object.prototype;","","    /** Native method shortcuts. */","    var abs = Math.abs,","        clearTimeout = context.clearTimeout,","        floor = Math.floor,","        log = Math.log,","        max = Math.max,","        min = Math.min,","        pow = Math.pow,","        push = arrayRef.push,","        setTimeout = context.setTimeout,","        shift = arrayRef.shift,","        slice = arrayRef.slice,","        sqrt = Math.sqrt,","        toString = objectProto.toString,","        unshift = arrayRef.unshift;","","    /** Used to avoid inclusion in Browserified bundles. */","    var req = require;","","    /** Detect DOM document object. */","    var doc = isHostType(context, 'document') && context.document;","","    /** Used to access Wade Simmons' Node.js `microtime` module. */","    var microtimeObject = req('microtime');","","    /** Used to access Node.js's high resolution timer. */","    var processObject = isHostType(context, 'process') && context.process;","","    /** Used to prevent a `removeChild` memory leak in IE < 9. */","    var trash = doc && doc.createElement('div');","","    /** Used to integrity check compiled tests. */","    var uid = 'uid' + _.now();","","    /** Used to avoid infinite recursion when methods call each other. */","    var calledBy = {};","","    /**","     * An object used to flag environments/features.","     *","     * @static","     * @memberOf Benchmark","     * @type Object","     */","    var support = {};","","    (function() {","","      /**","       * Detect if running in a browser environment.","       *","       * @memberOf Benchmark.support","       * @type boolean","       */","      support.browser = doc && isHostType(context, 'navigator') && !isHostType(context, 'phantom');","","      /**","       * Detect if the Timers API exists.","       *","       * @memberOf Benchmark.support","       * @type boolean","       */","      support.timeout = isHostType(context, 'setTimeout') && isHostType(context, 'clearTimeout');","","      /**","       * Detect if function decompilation is support.","       *","       * @name decompilation","       * @memberOf Benchmark.support","       * @type boolean","       */","      try {","        // Safari 2.x removes commas in object literals from `Function#toString` results.","        // See http://webk.it/11609 for more details.","        // Firefox 3.6 and Opera 9.25 strip grouping parentheses from `Function#toString` results.","        // See http://bugzil.la/559438 for more details.","        support.decompilation = Function(","          ('return (' + (function(x) { return { 'x': '' + (1 + x) + '', 'y': 0 }; }) + ')')","          // Avoid issues with code added by Istanbul.","          .replace(/__cov__[^;]+;/g, '')","        )()(0).x === '1';","      } catch(e) {","        support.decompilation = false;","      }","    }());","","    /**","     * Timer object used by `clock()` and `Deferred#resolve`.","     *","     * @private","     * @type Object","     */","    var timer = {","","      /**","       * The timer namespace object or constructor.","       *","       * @private","       * @memberOf timer","       * @type {Function|Object}","       */","      'ns': Date,","","      /**","       * Starts the deferred timer.","       *","       * @private","       * @memberOf timer","       * @param {Object} deferred The deferred instance.","       */","      'start': null, // Lazy defined in `clock()`.","","      /**","       * Stops the deferred timer.","       *","       * @private","       * @memberOf timer","       * @param {Object} deferred The deferred instance.","       */","      'stop': null // Lazy defined in `clock()`.","    };","","    /*------------------------------------------------------------------------*/","","    /**","     * The Benchmark constructor.","     *","     * Note: The Benchmark constructor exposes a handful of lodash methods to","     * make working with arrays, collections, and objects easier. The lodash","     * methods are:","     * [`each/forEach`](https://lodash.com/docs#forEach), [`forOwn`](https://lodash.com/docs#forOwn),","     * [`has`](https://lodash.com/docs#has), [`indexOf`](https://lodash.com/docs#indexOf),","     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)","     *","     * @constructor","     * @param {string} name A name to identify the benchmark.","     * @param {Function|string} fn The test to benchmark.","     * @param {Object} [options={}] Options object.","     * @example","     *","     * // basic usage (the `new` operator is optional)","     * var bench = new Benchmark(fn);","     *","     * // or using a name first","     * var bench = new Benchmark('foo', fn);","     *","     * // or with options","     * var bench = new Benchmark('foo', fn, {","     *","     *   // displayed by `Benchmark#toString` if `name` is not available","     *   'id': 'xyz',","     *","     *   // called when the benchmark starts running","     *   'onStart': onStart,","     *","     *   // called after each run cycle","     *   'onCycle': onCycle,","     *","     *   // called when aborted","     *   'onAbort': onAbort,","     *","     *   // called when a test errors","     *   'onError': onError,","     *","     *   // called when reset","     *   'onReset': onReset,","     *","     *   // called when the benchmark completes running","     *   'onComplete': onComplete,","     *","     *   // compiled/called before the test loop","     *   'setup': setup,","     *","     *   // compiled/called after the test loop","     *   'teardown': teardown","     * });","     *","     * // or name and options","     * var bench = new Benchmark('foo', {","     *","     *   // a flag to indicate the benchmark is deferred","     *   'defer': true,","     *","     *   // benchmark test function","     *   'fn': function(deferred) {","     *     // call `Deferred#resolve` when the deferred test is finished","     *     deferred.resolve();","     *   }","     * });","     *","     * // or options only","     * var bench = new Benchmark({","     *","     *   // benchmark name","     *   'name': 'foo',","     *","     *   // benchmark test as a string","     *   'fn': '[1,2,3,4].sort()'","     * });","     *","     * // a test's `this` binding is set to the benchmark instance","     * var bench = new Benchmark('foo', function() {","     *   'My name is '.concat(this.name); // \"My name is foo\"","     * });","     */","    function Benchmark(name, fn, options) {","      var bench = this;","","      // Allow instance creation without the `new` operator.","      if (!(bench instanceof Benchmark)) {","        return new Benchmark(name, fn, options);","      }","      // Juggle arguments.","      if (_.isPlainObject(name)) {","        // 1 argument (options).","        options = name;","      }","      else if (_.isFunction(name)) {","        // 2 arguments (fn, options).","        options = fn;","        fn = name;","      }","      else if (_.isPlainObject(fn)) {","        // 2 arguments (name, options).","        options = fn;","        fn = null;","        bench.name = name;","      }","      else {","        // 3 arguments (name, fn [, options]).","        bench.name = name;","      }","      setOptions(bench, options);","","      bench.id || (bench.id = ++counter);","      bench.fn == null && (bench.fn = fn);","","      bench.stats = cloneDeep(bench.stats);","      bench.times = cloneDeep(bench.times);","    }","","    /**","     * The Deferred constructor.","     *","     * @constructor","     * @memberOf Benchmark","     * @param {Object} clone The cloned benchmark instance.","     */","    function Deferred(clone) {","      var deferred = this;","      if (!(deferred instanceof Deferred)) {","        return new Deferred(clone);","      }","      deferred.benchmark = clone;","      clock(deferred);","    }","","    /**","     * The Event constructor.","     *","     * @constructor","     * @memberOf Benchmark","     * @param {Object|string} type The event type.","     */","    function Event(type) {","      var event = this;","      if (type instanceof Event) {","        return type;","      }","      return (event instanceof Event)","        ? _.assign(event, { 'timeStamp': _.now() }, typeof type == 'string' ? { 'type': type } : type)","        : new Event(type);","    }","","    /**","     * The Suite constructor.","     *","     * Note: Each Suite instance has a handful of wrapped lodash methods to","     * make working with Suites easier. The wrapped lodash methods are:","     * [`each/forEach`](https://lodash.com/docs#forEach), [`indexOf`](https://lodash.com/docs#indexOf),","     * [`map`](https://lodash.com/docs#map), and [`reduce`](https://lodash.com/docs#reduce)","     *","     * @constructor","     * @memberOf Benchmark","     * @param {string} name A name to identify the suite.","     * @param {Object} [options={}] Options object.","     * @example","     *","     * // basic usage (the `new` operator is optional)","     * var suite = new Benchmark.Suite;","     *","     * // or using a name first","     * var suite = new Benchmark.Suite('foo');","     *","     * // or with options","     * var suite = new Benchmark.Suite('foo', {","     *","     *   // called when the suite starts running","     *   'onStart': onStart,","     *","     *   // called between running benchmarks","     *   'onCycle': onCycle,","     *","     *   // called when aborted","     *   'onAbort': onAbort,","     *","     *   // called when a test errors","     *   'onError': onError,","     *","     *   // called when reset","     *   'onReset': onReset,","     *","     *   // called when the suite completes running","     *   'onComplete': onComplete","     * });","     */","    function Suite(name, options) {","      var suite = this;","","      // Allow instance creation without the `new` operator.","      if (!(suite instanceof Suite)) {","        return new Suite(name, options);","      }","      // Juggle arguments.","      if (_.isPlainObject(name)) {","        // 1 argument (options).","        options = name;","      } else {","        // 2 arguments (name [, options]).","        suite.name = name;","      }","      setOptions(suite, options);","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * A specialized version of `_.cloneDeep` which only clones arrays and plain","     * objects assigning all other values by reference.","     *","     * @private","     * @param {*} value The value to clone.","     * @returns {*} The cloned value.","     */","    var cloneDeep = _.partial(_.cloneDeepWith, _, function(value) {","      // Only clone primitives, arrays, and plain objects.","      return (_.isObject(value) && !_.isArray(value) && !_.isPlainObject(value))","        ? value","        : undefined;","    });","","    /**","     * Creates a function from the given arguments string and body.","     *","     * @private","     * @param {string} args The comma separated function arguments.","     * @param {string} body The function body.","     * @returns {Function} The new function.","     */","    function createFunction() {","      // Lazy define.","      createFunction = function(args, body) {","        var result,","            anchor = freeDefine ? freeDefine.amd : Benchmark,","            prop = uid + 'createFunction';","","        runScript((freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '=function(' + args + '){' + body + '}');","        result = anchor[prop];","        delete anchor[prop];","        return result;","      };","      // Fix JaegerMonkey bug.","      // For more information see http://bugzil.la/639720.","      createFunction = support.browser && (createFunction('', 'return\"' + uid + '\"') || _.noop)() == uid ? createFunction : Function;","      return createFunction.apply(null, arguments);","    }","","    /**","     * Delay the execution of a function based on the benchmark's `delay` property.","     *","     * @private","     * @param {Object} bench The benchmark instance.","     * @param {Object} fn The function to execute.","     */","    function delay(bench, fn) {","      bench._timerId = _.delay(fn, bench.delay * 1e3);","    }","","    /**","     * Destroys the given element.","     *","     * @private","     * @param {Element} element The element to destroy.","     */","    function destroyElement(element) {","      trash.appendChild(element);","      trash.innerHTML = '';","    }","","    /**","     * Gets the name of the first argument from a function's source.","     *","     * @private","     * @param {Function} fn The function.","     * @returns {string} The argument name.","     */","    function getFirstArgument(fn) {","      return (!_.has(fn, 'toString') &&","        (/^[\\s(]*function[^(]*\\(([^\\s,)]+)/.exec(fn) || 0)[1]) || '';","    }","","    /**","     * Computes the arithmetic mean of a sample.","     *","     * @private","     * @param {Array} sample The sample.","     * @returns {number} The mean.","     */","    function getMean(sample) {","      return (_.reduce(sample, function(sum, x) {","        return sum + x;","      }) / sample.length) || 0;","    }","","    /**","     * Gets the source code of a function.","     *","     * @private","     * @param {Function} fn The function.","     * @returns {string} The function's source code.","     */","    function getSource(fn) {","      var result = '';","      if (isStringable(fn)) {","        result = String(fn);","      } else if (support.decompilation) {","        // Escape the `{` for Firefox 1.","        result = _.result(/^[^{]+\\{([\\s\\S]*)\\}\\s*$/.exec(fn), 1);","      }","      // Trim string.","      result = (result || '').replace(/^\\s+|\\s+$/g, '');","","      // Detect strings containing only the \"use strict\" directive.","      return /^(?:\\/\\*+[\\w\\W]*?\\*\\/|\\/\\/.*?[\\n\\r\\u2028\\u2029]|\\s)*([\"'])use strict\\1;?$/.test(result)","        ? ''","        : result;","    }","","    /**","     * Checks if an object is of the specified class.","     *","     * @private","     * @param {*} value The value to check.","     * @param {string} name The name of the class.","     * @returns {boolean} Returns `true` if the value is of the specified class, else `false`.","     */","    function isClassOf(value, name) {","      return value != null && toString.call(value) == '[object ' + name + ']';","    }","","    /**","     * Host objects can return type values that are different from their actual","     * data type. The objects we are concerned with usually return non-primitive","     * types of \"object\", \"function\", or \"unknown\".","     *","     * @private","     * @param {*} object The owner of the property.","     * @param {string} property The property to check.","     * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.","     */","    function isHostType(object, property) {","      if (object == null) {","        return false;","      }","      var type = typeof object[property];","      return !rePrimitive.test(type) && (type != 'object' || !!object[property]);","    }","","    /**","     * Checks if a value can be safely coerced to a string.","     *","     * @private","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the value can be coerced, else `false`.","     */","    function isStringable(value) {","      return _.isString(value) || (_.has(value, 'toString') && _.isFunction(value.toString));","    }","","    /**","     * A wrapper around `require` to suppress `module missing` errors.","     *","     * @private","     * @param {string} id The module id.","     * @returns {*} The exported module or `null`.","     */","    function require(id) {","      try {","        var result = freeExports && freeRequire(id);","      } catch(e) {}","      return result || null;","    }","","    /**","     * Runs a snippet of JavaScript via script injection.","     *","     * @private","     * @param {string} code The code to run.","     */","    function runScript(code) {","      var anchor = freeDefine ? define.amd : Benchmark,","          script = doc.createElement('script'),","          sibling = doc.getElementsByTagName('script')[0],","          parent = sibling.parentNode,","          prop = uid + 'runScript',","          prefix = '(' + (freeDefine ? 'define.amd.' : 'Benchmark.') + prop + '||function(){})();';","","      // Firefox 2.0.0.2 cannot use script injection as intended because it executes","      // asynchronously, but that's OK because script injection is only used to avoid","      // the previously commented JaegerMonkey bug.","      try {","        // Remove the inserted script *before* running the code to avoid differences","        // in the expected script element count/order of the document.","        script.appendChild(doc.createTextNode(prefix + code));","        anchor[prop] = function() { destroyElement(script); };","      } catch(e) {","        parent = parent.cloneNode(false);","        sibling = null;","        script.text = code;","      }","      parent.insertBefore(script, sibling);","      delete anchor[prop];","    }","","    /**","     * A helper function for setting options/event handlers.","     *","     * @private","     * @param {Object} object The benchmark or suite instance.","     * @param {Object} [options={}] Options object.","     */","    function setOptions(object, options) {","      options = object.options = _.assign({}, cloneDeep(object.constructor.options), cloneDeep(options));","","      _.forOwn(options, function(value, key) {","        if (value != null) {","          // Add event listeners.","          if (/^on[A-Z]/.test(key)) {","            _.each(key.split(' '), function(key) {","              object.on(key.slice(2).toLowerCase(), value);","            });","          } else if (!_.has(object, key)) {","            object[key] = cloneDeep(value);","          }","        }","      });","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Handles cycling/completing the deferred benchmark.","     *","     * @memberOf Benchmark.Deferred","     */","    function resolve() {","      var deferred = this,","          clone = deferred.benchmark,","          bench = clone._original;","","      if (bench.aborted) {","        // cycle() -> clone cycle/complete event -> compute()'s invoked bench.run() cycle/complete.","        deferred.teardown();","        clone.running = false;","        cycle(deferred);","      }","      else if (++deferred.cycles < clone.count) {","        clone.compiled.call(deferred, context, timer);","      }","      else {","        timer.stop(deferred);","        deferred.teardown();","        delay(clone, function() { cycle(deferred); });","      }","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * A generic `Array#filter` like method.","     *","     * @static","     * @memberOf Benchmark","     * @param {Array} array The array to iterate over.","     * @param {Function|string} callback The function/alias called per iteration.","     * @returns {Array} A new array of values that passed callback filter.","     * @example","     *","     * // get odd numbers","     * Benchmark.filter([1, 2, 3, 4, 5], function(n) {","     *   return n % 2;","     * }); // -> [1, 3, 5];","     *","     * // get fastest benchmarks","     * Benchmark.filter(benches, 'fastest');","     *","     * // get slowest benchmarks","     * Benchmark.filter(benches, 'slowest');","     *","     * // get benchmarks that completed without erroring","     * Benchmark.filter(benches, 'successful');","     */","    function filter(array, callback) {","      if (callback === 'successful') {","        // Callback to exclude those that are errored, unrun, or have hz of Infinity.","        callback = function(bench) {","          return bench.cycles && _.isFinite(bench.hz) && !bench.error;","        };","      }","      else if (callback === 'fastest' || callback === 'slowest') {","        // Get successful, sort by period + margin of error, and filter fastest/slowest.","        var result = filter(array, 'successful').sort(function(a, b) {","          a = a.stats; b = b.stats;","          return (a.mean + a.moe > b.mean + b.moe ? 1 : -1) * (callback === 'fastest' ? 1 : -1);","        });","","        return _.filter(result, function(bench) {","          return result[0].compare(bench) == 0;","        });","      }","      return _.filter(array, callback);","    }","","    /**","     * Converts a number to a more readable comma-separated string representation.","     *","     * @static","     * @memberOf Benchmark","     * @param {number} number The number to convert.","     * @returns {string} The more readable string representation.","     */","    function formatNumber(number) {","      number = String(number).split('.');","      return number[0].replace(/(?=(?:\\d{3})+$)(?!\\b)/g, ',') +","        (number[1] ? '.' + number[1] : '');","    }","","    /**","     * Invokes a method on all items in an array.","     *","     * @static","     * @memberOf Benchmark","     * @param {Array} benches Array of benchmarks to iterate over.","     * @param {Object|string} name The name of the method to invoke OR options object.","     * @param {...*} [args] Arguments to invoke the method with.","     * @returns {Array} A new array of values returned from each method invoked.","     * @example","     *","     * // invoke `reset` on all benchmarks","     * Benchmark.invoke(benches, 'reset');","     *","     * // invoke `emit` with arguments","     * Benchmark.invoke(benches, 'emit', 'complete', listener);","     *","     * // invoke `run(true)`, treat benchmarks as a queue, and register invoke callbacks","     * Benchmark.invoke(benches, {","     *","     *   // invoke the `run` method","     *   'name': 'run',","     *","     *   // pass a single argument","     *   'args': true,","     *","     *   // treat as queue, removing benchmarks from front of `benches` until empty","     *   'queued': true,","     *","     *   // called before any benchmarks have been invoked.","     *   'onStart': onStart,","     *","     *   // called between invoking benchmarks","     *   'onCycle': onCycle,","     *","     *   // called after all benchmarks have been invoked.","     *   'onComplete': onComplete","     * });","     */","    function invoke(benches, name) {","      var args,","          bench,","          queued,","          index = -1,","          eventProps = { 'currentTarget': benches },","          options = { 'onStart': _.noop, 'onCycle': _.noop, 'onComplete': _.noop },","          result = _.toArray(benches);","","      /**","       * Invokes the method of the current object and if synchronous, fetches the next.","       */","      function execute() {","        var listeners,","            async = isAsync(bench);","","        if (async) {","          // Use `getNext` as the first listener.","          bench.on('complete', getNext);","          listeners = bench.events.complete;","          listeners.splice(0, 0, listeners.pop());","        }","        // Execute method.","        result[index] = _.isFunction(bench && bench[name]) ? bench[name].apply(bench, args) : undefined;","        // If synchronous return `true` until finished.","        return !async && getNext();","      }","","      /**","       * Fetches the next bench or executes `onComplete` callback.","       */","      function getNext(event) {","        var cycleEvent,","            last = bench,","            async = isAsync(last);","","        if (async) {","          last.off('complete', getNext);","          last.emit('complete');","        }","        // Emit \"cycle\" event.","        eventProps.type = 'cycle';","        eventProps.target = last;","        cycleEvent = Event(eventProps);","        options.onCycle.call(benches, cycleEvent);","","        // Choose next benchmark if not exiting early.","        if (!cycleEvent.aborted && raiseIndex() !== false) {","          bench = queued ? benches[0] : result[index];","          if (isAsync(bench)) {","            delay(bench, execute);","          }","          else if (async) {","            // Resume execution if previously asynchronous but now synchronous.","            while (execute()) {}","          }","          else {","            // Continue synchronous execution.","            return true;","          }","        } else {","          // Emit \"complete\" event.","          eventProps.type = 'complete';","          options.onComplete.call(benches, Event(eventProps));","        }","        // When used as a listener `event.aborted = true` will cancel the rest of","        // the \"complete\" listeners because they were already called above and when","        // used as part of `getNext` the `return false` will exit the execution while-loop.","        if (event) {","          event.aborted = true;","        } else {","          return false;","        }","      }","","      /**","       * Checks if invoking `Benchmark#run` with asynchronous cycles.","       */","      function isAsync(object) {","        // Avoid using `instanceof` here because of IE memory leak issues with host objects.","        var async = args[0] && args[0].async;","        return name == 'run' && (object instanceof Benchmark) &&","          ((async == null ? object.options.async : async) && support.timeout || object.defer);","      }","","      /**","       * Raises `index` to the next defined index or returns `false`.","       */","      function raiseIndex() {","        index++;","","        // If queued remove the previous bench.","        if (queued && index > 0) {","          shift.call(benches);","        }","        // If we reached the last index then return `false`.","        return (queued ? benches.length : index < result.length)","          ? index","          : (index = false);","      }","      // Juggle arguments.","      if (_.isString(name)) {","        // 2 arguments (array, name).","        args = slice.call(arguments, 2);","      } else {","        // 2 arguments (array, options).","        options = _.assign(options, name);","        name = options.name;","        args = _.isArray(args = 'args' in options ? options.args : []) ? args : [args];","        queued = options.queued;","      }","      // Start iterating over the array.","      if (raiseIndex() !== false) {","        // Emit \"start\" event.","        bench = result[index];","        eventProps.type = 'start';","        eventProps.target = bench;","        options.onStart.call(benches, Event(eventProps));","","        // End early if the suite was aborted in an \"onStart\" listener.","        if (name == 'run' && (benches instanceof Suite) && benches.aborted) {","          // Emit \"cycle\" event.","          eventProps.type = 'cycle';","          options.onCycle.call(benches, Event(eventProps));","          // Emit \"complete\" event.","          eventProps.type = 'complete';","          options.onComplete.call(benches, Event(eventProps));","        }","        // Start method execution.","        else {","          if (isAsync(bench)) {","            delay(bench, execute);","          } else {","            while (execute()) {}","          }","        }","      }","      return result;","    }","","    /**","     * Creates a string of joined array values or object key-value pairs.","     *","     * @static","     * @memberOf Benchmark","     * @param {Array|Object} object The object to operate on.","     * @param {string} [separator1=','] The separator used between key-value pairs.","     * @param {string} [separator2=': '] The separator used between keys and values.","     * @returns {string} The joined result.","     */","    function join(object, separator1, separator2) {","      var result = [],","          length = (object = Object(object)).length,","          arrayLike = length === length >>> 0;","","      separator2 || (separator2 = ': ');","      _.each(object, function(value, key) {","        result.push(arrayLike ? value : key + separator2 + value);","      });","      return result.join(separator1 || ',');","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Aborts all benchmarks in the suite.","     *","     * @name abort","     * @memberOf Benchmark.Suite","     * @returns {Object} The suite instance.","     */","    function abortSuite() {","      var event,","          suite = this,","          resetting = calledBy.resetSuite;","","      if (suite.running) {","        event = Event('abort');","        suite.emit(event);","        if (!event.cancelled || resetting) {","          // Avoid infinite recursion.","          calledBy.abortSuite = true;","          suite.reset();","          delete calledBy.abortSuite;","","          if (!resetting) {","            suite.aborted = true;","            invoke(suite, 'abort');","          }","        }","      }","      return suite;","    }","","    /**","     * Adds a test to the benchmark suite.","     *","     * @memberOf Benchmark.Suite","     * @param {string} name A name to identify the benchmark.","     * @param {Function|string} fn The test to benchmark.","     * @param {Object} [options={}] Options object.","     * @returns {Object} The suite instance.","     * @example","     *","     * // basic usage","     * suite.add(fn);","     *","     * // or using a name first","     * suite.add('foo', fn);","     *","     * // or with options","     * suite.add('foo', fn, {","     *   'onCycle': onCycle,","     *   'onComplete': onComplete","     * });","     *","     * // or name and options","     * suite.add('foo', {","     *   'fn': fn,","     *   'onCycle': onCycle,","     *   'onComplete': onComplete","     * });","     *","     * // or options only","     * suite.add({","     *   'name': 'foo',","     *   'fn': fn,","     *   'onCycle': onCycle,","     *   'onComplete': onComplete","     * });","     */","    function add(name, fn, options) {","      var suite = this,","          bench = new Benchmark(name, fn, options),","          event = Event({ 'type': 'add', 'target': bench });","","      if (suite.emit(event), !event.cancelled) {","        suite.push(bench);","      }","      return suite;","    }","","    /**","     * Creates a new suite with cloned benchmarks.","     *","     * @name clone","     * @memberOf Benchmark.Suite","     * @param {Object} options Options object to overwrite cloned options.","     * @returns {Object} The new suite instance.","     */","    function cloneSuite(options) {","      var suite = this,","          result = new suite.constructor(_.assign({}, suite.options, options));","","      // Copy own properties.","      _.forOwn(suite, function(value, key) {","        if (!_.has(result, key)) {","          result[key] = value && _.isFunction(value.clone)","            ? value.clone()","            : cloneDeep(value);","        }","      });","      return result;","    }","","    /**","     * An `Array#filter` like method.","     *","     * @name filter","     * @memberOf Benchmark.Suite","     * @param {Function|string} callback The function/alias called per iteration.","     * @returns {Object} A new suite of benchmarks that passed callback filter.","     */","    function filterSuite(callback) {","      var suite = this,","          result = new suite.constructor(suite.options);","","      result.push.apply(result, filter(suite, callback));","      return result;","    }","","    /**","     * Resets all benchmarks in the suite.","     *","     * @name reset","     * @memberOf Benchmark.Suite","     * @returns {Object} The suite instance.","     */","    function resetSuite() {","      var event,","          suite = this,","          aborting = calledBy.abortSuite;","","      if (suite.running && !aborting) {","        // No worries, `resetSuite()` is called within `abortSuite()`.","        calledBy.resetSuite = true;","        suite.abort();","        delete calledBy.resetSuite;","      }","      // Reset if the state has changed.","      else if ((suite.aborted || suite.running) &&","          (suite.emit(event = Event('reset')), !event.cancelled)) {","        suite.aborted = suite.running = false;","        if (!aborting) {","          invoke(suite, 'reset');","        }","      }","      return suite;","    }","","    /**","     * Runs the suite.","     *","     * @name run","     * @memberOf Benchmark.Suite","     * @param {Object} [options={}] Options object.","     * @returns {Object} The suite instance.","     * @example","     *","     * // basic usage","     * suite.run();","     *","     * // or with options","     * suite.run({ 'async': true, 'queued': true });","     */","    function runSuite(options) {","      var suite = this;","","      suite.reset();","      suite.running = true;","      options || (options = {});","","      invoke(suite, {","        'name': 'run',","        'args': options,","        'queued': options.queued,","        'onStart': function(event) {","          suite.emit(event);","        },","        'onCycle': function(event) {","          var bench = event.target;","          if (bench.error) {","            suite.emit({ 'type': 'error', 'target': bench });","          }","          suite.emit(event);","          event.aborted = suite.aborted;","        },","        'onComplete': function(event) {","          suite.running = false;","          suite.emit(event);","        }","      });","      return suite;","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Executes all registered listeners of the specified event type.","     *","     * @memberOf Benchmark, Benchmark.Suite","     * @param {Object|string} type The event type or object.","     * @param {...*} [args] Arguments to invoke the listener with.","     * @returns {*} Returns the return value of the last listener executed.","     */","    function emit(type) {","      var listeners,","          object = this,","          event = Event(type),","          events = object.events,","          args = (arguments[0] = event, arguments);","","      event.currentTarget || (event.currentTarget = object);","      event.target || (event.target = object);","      delete event.result;","","      if (events && (listeners = _.has(events, event.type) && events[event.type])) {","        _.each(listeners.slice(), function(listener) {","          if ((event.result = listener.apply(object, args)) === false) {","            event.cancelled = true;","          }","          return !event.aborted;","        });","      }","      return event.result;","    }","","    /**","     * Returns an array of event listeners for a given type that can be manipulated","     * to add or remove listeners.","     *","     * @memberOf Benchmark, Benchmark.Suite","     * @param {string} type The event type.","     * @returns {Array} The listeners array.","     */","    function listeners(type) {","      var object = this,","          events = object.events || (object.events = {});","","      return _.has(events, type) ? events[type] : (events[type] = []);","    }","","    /**","     * Unregisters a listener for the specified event type(s),","     * or unregisters all listeners for the specified event type(s),","     * or unregisters all listeners for all event types.","     *","     * @memberOf Benchmark, Benchmark.Suite","     * @param {string} [type] The event type.","     * @param {Function} [listener] The function to unregister.","     * @returns {Object} The current instance.","     * @example","     *","     * // unregister a listener for an event type","     * bench.off('cycle', listener);","     *","     * // unregister a listener for multiple event types","     * bench.off('start cycle', listener);","     *","     * // unregister all listeners for an event type","     * bench.off('cycle');","     *","     * // unregister all listeners for multiple event types","     * bench.off('start cycle complete');","     *","     * // unregister all listeners for all event types","     * bench.off();","     */","    function off(type, listener) {","      var object = this,","          events = object.events;","","      if (!events) {","        return object;","      }","      _.each(type ? type.split(' ') : events, function(listeners, type) {","        var index;","        if (typeof listeners == 'string') {","          type = listeners;","          listeners = _.has(events, type) && events[type];","        }","        if (listeners) {","          if (listener) {","            index = _.indexOf(listeners, listener);","            if (index > -1) {","              listeners.splice(index, 1);","            }","          } else {","            listeners.length = 0;","          }","        }","      });","      return object;","    }","","    /**","     * Registers a listener for the specified event type(s).","     *","     * @memberOf Benchmark, Benchmark.Suite","     * @param {string} type The event type.","     * @param {Function} listener The function to register.","     * @returns {Object} The current instance.","     * @example","     *","     * // register a listener for an event type","     * bench.on('cycle', listener);","     *","     * // register a listener for multiple event types","     * bench.on('start cycle', listener);","     */","    function on(type, listener) {","      var object = this,","          events = object.events || (object.events = {});","","      _.each(type.split(' '), function(type) {","        (_.has(events, type)","          ? events[type]","          : (events[type] = [])","        ).push(listener);","      });","      return object;","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Aborts the benchmark without recording times.","     *","     * @memberOf Benchmark","     * @returns {Object} The benchmark instance.","     */","    function abort() {","      var event,","          bench = this,","          resetting = calledBy.reset;","","      if (bench.running) {","        event = Event('abort');","        bench.emit(event);","        if (!event.cancelled || resetting) {","          // Avoid infinite recursion.","          calledBy.abort = true;","          bench.reset();","          delete calledBy.abort;","","          if (support.timeout) {","            clearTimeout(bench._timerId);","            delete bench._timerId;","          }","          if (!resetting) {","            bench.aborted = true;","            bench.running = false;","          }","        }","      }","      return bench;","    }","","    /**","     * Creates a new benchmark using the same test and options.","     *","     * @memberOf Benchmark","     * @param {Object} options Options object to overwrite cloned options.","     * @returns {Object} The new benchmark instance.","     * @example","     *","     * var bizarro = bench.clone({","     *   'name': 'doppelganger'","     * });","     */","    function clone(options) {","      var bench = this,","          result = new bench.constructor(_.assign({}, bench, options));","","      // Correct the `options` object.","      result.options = _.assign({}, cloneDeep(bench.options), cloneDeep(options));","","      // Copy own custom properties.","      _.forOwn(bench, function(value, key) {","        if (!_.has(result, key)) {","          result[key] = cloneDeep(value);","        }","      });","","      return result;","    }","","    /**","     * Determines if a benchmark is faster than another.","     *","     * @memberOf Benchmark","     * @param {Object} other The benchmark to compare.","     * @returns {number} Returns `-1` if slower, `1` if faster, and `0` if indeterminate.","     */","    function compare(other) {","      var bench = this;","","      // Exit early if comparing the same benchmark.","      if (bench == other) {","        return 0;","      }","      var critical,","          zStat,","          sample1 = bench.stats.sample,","          sample2 = other.stats.sample,","          size1 = sample1.length,","          size2 = sample2.length,","          maxSize = max(size1, size2),","          minSize = min(size1, size2),","          u1 = getU(sample1, sample2),","          u2 = getU(sample2, sample1),","          u = min(u1, u2);","","      function getScore(xA, sampleB) {","        return _.reduce(sampleB, function(total, xB) {","          return total + (xB > xA ? 0 : xB < xA ? 1 : 0.5);","        }, 0);","      }","","      function getU(sampleA, sampleB) {","        return _.reduce(sampleA, function(total, xA) {","          return total + getScore(xA, sampleB);","        }, 0);","      }","","      function getZ(u) {","        return (u - ((size1 * size2) / 2)) / sqrt((size1 * size2 * (size1 + size2 + 1)) / 12);","      }","      // Reject the null hypothesis the two samples come from the","      // same population (i.e. have the same median) if...","      if (size1 + size2 > 30) {","        // ...the z-stat is greater than 1.96 or less than -1.96","        // http://www.statisticslectures.com/topics/mannwhitneyu/","        zStat = getZ(u);","        return abs(zStat) > 1.96 ? (u == u1 ? 1 : -1) : 0;","      }","      // ...the U value is less than or equal the critical U value.","      critical = maxSize < 5 || minSize < 3 ? 0 : uTable[maxSize][minSize - 3];","      return u <= critical ? (u == u1 ? 1 : -1) : 0;","    }","","    /**","     * Reset properties and abort if running.","     *","     * @memberOf Benchmark","     * @returns {Object} The benchmark instance.","     */","    function reset() {","      var bench = this;","      if (bench.running && !calledBy.abort) {","        // No worries, `reset()` is called within `abort()`.","        calledBy.reset = true;","        bench.abort();","        delete calledBy.reset;","        return bench;","      }","      var event,","          index = 0,","          changes = [],","          queue = [];","","      // A non-recursive solution to check if properties have changed.","      // For more information see http://www.jslab.dk/articles/non.recursive.preorder.traversal.part4.","      var data = {","        'destination': bench,","        'source': _.assign({}, cloneDeep(bench.constructor.prototype), cloneDeep(bench.options))","      };","","      do {","        _.forOwn(data.source, function(value, key) {","          var changed,","              destination = data.destination,","              currValue = destination[key];","","          // Skip pseudo private properties like `_timerId` which could be a","          // Java object in environments like RingoJS.","          if (key.charAt(0) == '_') {","            return;","          }","          if (value && typeof value == 'object') {","            if (_.isArray(value)) {","              // Check if an array value has changed to a non-array value.","              if (!_.isArray(currValue)) {","                changed = currValue = [];","              }","              // Check if an array has changed its length.","              if (currValue.length != value.length) {","                changed = currValue = currValue.slice(0, value.length);","                currValue.length = value.length;","              }","            }","            // Check if an object has changed to a non-object value.","            else if (!currValue || typeof currValue != 'object') {","              changed = currValue = {};","            }","            // Register a changed object.","            if (changed) {","              changes.push({ 'destination': destination, 'key': key, 'value': currValue });","            }","            queue.push({ 'destination': currValue, 'source': value });","          }","          // Register a changed primitive.","          else if (value !== currValue && !(value == null || _.isFunction(value))) {","            changes.push({ 'destination': destination, 'key': key, 'value': value });","          }","        });","      }","      while ((data = queue[index++]));","","      // If changed emit the `reset` event and if it isn't cancelled reset the benchmark.","      if (changes.length && (bench.emit(event = Event('reset')), !event.cancelled)) {","        _.each(changes, function(data) {","          data.destination[data.key] = data.value;","        });","      }","      return bench;","    }","","    /**","     * Displays relevant benchmark information when coerced to a string.","     *","     * @name toString","     * @memberOf Benchmark","     * @returns {string} A string representation of the benchmark instance.","     */","    function toStringBench() {","      var bench = this,","          error = bench.error,","          hz = bench.hz,","          id = bench.id,","          stats = bench.stats,","          size = stats.sample.length,","          pm = '\\xb1',","          result = bench.name || (_.isNaN(id) ? id : '<Test #' + id + '>');","","      if (error) {","        result += ': ' + join(error);","      } else {","        result += ' x ' + formatNumber(hz.toFixed(hz < 100 ? 2 : 0)) + ' ops/sec ' + pm +","          stats.rme.toFixed(2) + '% (' + size + ' run' + (size == 1 ? '' : 's') + ' sampled)';","      }","      return result;","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Clocks the time taken to execute a test per cycle (secs).","     *","     * @private","     * @param {Object} bench The benchmark instance.","     * @returns {number} The time taken.","     */","    function clock() {","      var options = Benchmark.options,","          templateData = {},","          timers = [{ 'ns': timer.ns, 'res': max(0.0015, getRes('ms')), 'unit': 'ms' }];","","      // Lazy define for hi-res timers.","      clock = function(clone) {","        var deferred;","","        if (clone instanceof Deferred) {","          deferred = clone;","          clone = deferred.benchmark;","        }","        var bench = clone._original,","            stringable = isStringable(bench.fn),","            count = bench.count = clone.count,","            decompilable = stringable || (support.decompilation && (clone.setup !== _.noop || clone.teardown !== _.noop)),","            id = bench.id,","            name = bench.name || (typeof id == 'number' ? '<Test #' + id + '>' : id),","            result = 0;","","        // Init `minTime` if needed.","        clone.minTime = bench.minTime || (bench.minTime = bench.options.minTime = options.minTime);","","        // Compile in setup/teardown functions and the test loop.","        // Create a new compiled test, instead of using the cached `bench.compiled`,","        // to avoid potential engine optimizations enabled over the life of the test.","        var funcBody = deferred","          ? 'var d#=this,${fnArg}=d#,m#=d#.benchmark._original,f#=m#.fn,su#=m#.setup,td#=m#.teardown;' +","            // When `deferred.cycles` is `0` then...","            'if(!d#.cycles){' +","            // set `deferred.fn`,","            'd#.fn=function(){var ${fnArg}=d#;if(typeof f#==\"function\"){try{${fn}\\n}catch(e#){f#(d#)}}else{${fn}\\n}};' +","            // set `deferred.teardown`,","            'd#.teardown=function(){d#.cycles=0;if(typeof td#==\"function\"){try{${teardown}\\n}catch(e#){td#()}}else{${teardown}\\n}};' +","            // execute the benchmark's `setup`,","            'if(typeof su#==\"function\"){try{${setup}\\n}catch(e#){su#()}}else{${setup}\\n};' +","            // start timer,","            't#.start(d#);' +","            // and then execute `deferred.fn` and return a dummy object.","            '}d#.fn();return{uid:\"${uid}\"}'","","          : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count,n#=t#.ns;${setup}\\n${begin};' +","            'while(i#--){${fn}\\n}${end};${teardown}\\nreturn{elapsed:r#,uid:\"${uid}\"}';","","        var compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody),","            isEmpty = !(templateData.fn || stringable);","","        try {","          if (isEmpty) {","            // Firefox may remove dead code from `Function#toString` results.","            // For more information see http://bugzil.la/536085.","            throw new Error('The test \"' + name + '\" is empty. This may be the result of dead code removal.');","          }","          else if (!deferred) {","            // Pretest to determine if compiled code exits early, usually by a","            // rogue `return` statement, by checking for a return object with the uid.","            bench.count = 1;","            compiled = decompilable && (compiled.call(bench, context, timer) || {}).uid == templateData.uid && compiled;","            bench.count = count;","          }","        } catch(e) {","          compiled = null;","          clone.error = e || new Error(String(e));","          bench.count = count;","        }","        // Fallback when a test exits early or errors during pretest.","        if (!compiled && !deferred && !isEmpty) {","          funcBody = (","            stringable || (decompilable && !clone.error)","              ? 'function f#(){${fn}\\n}var r#,s#,m#=this,i#=m#.count'","              : 'var r#,s#,m#=this,f#=m#.fn,i#=m#.count'","            ) +","            ',n#=t#.ns;${setup}\\n${begin};m#.f#=f#;while(i#--){m#.f#()}${end};' +","            'delete m#.f#;${teardown}\\nreturn{elapsed:r#}';","","          compiled = createCompiled(bench, decompilable, deferred, funcBody);","","          try {","            // Pretest one more time to check for errors.","            bench.count = 1;","            compiled.call(bench, context, timer);","            bench.count = count;","            delete clone.error;","          }","          catch(e) {","            bench.count = count;","            if (!clone.error) {","              clone.error = e || new Error(String(e));","            }","          }","        }","        // If no errors run the full test loop.","        if (!clone.error) {","          compiled = bench.compiled = clone.compiled = createCompiled(bench, decompilable, deferred, funcBody);","          result = compiled.call(deferred || bench, context, timer).elapsed;","        }","        return result;","      };","","      /*----------------------------------------------------------------------*/","","      /**","       * Creates a compiled function from the given function `body`.","       */","      function createCompiled(bench, decompilable, deferred, body) {","        var fn = bench.fn,","            fnArg = deferred ? getFirstArgument(fn) || 'deferred' : '';","","        templateData.uid = uid + uidCounter++;","","        _.assign(templateData, {","          'setup': decompilable ? getSource(bench.setup) : interpolate('m#.setup()'),","          'fn': decompilable ? getSource(fn) : interpolate('m#.fn(' + fnArg + ')'),","          'fnArg': fnArg,","          'teardown': decompilable ? getSource(bench.teardown) : interpolate('m#.teardown()')","        });","","        // Use API of chosen timer.","        if (timer.unit == 'ns') {","          _.assign(templateData, {","            'begin': interpolate('s#=n#()'),","            'end': interpolate('r#=n#(s#);r#=r#[0]+(r#[1]/1e9)')","          });","        }","        else if (timer.unit == 'us') {","          if (timer.ns.stop) {","            _.assign(templateData, {","              'begin': interpolate('s#=n#.start()'),","              'end': interpolate('r#=n#.microseconds()/1e6')","            });","          } else {","            _.assign(templateData, {","              'begin': interpolate('s#=n#()'),","              'end': interpolate('r#=(n#()-s#)/1e6')","            });","          }","        }","        else if (timer.ns.now) {","          _.assign(templateData, {","            'begin': interpolate('s#=n#.now()'),","            'end': interpolate('r#=(n#.now()-s#)/1e3')","          });","        }","        else {","          _.assign(templateData, {","            'begin': interpolate('s#=new n#().getTime()'),","            'end': interpolate('r#=(new n#().getTime()-s#)/1e3')","          });","        }","        // Define `timer` methods.","        timer.start = createFunction(","          interpolate('o#'),","          interpolate('var n#=this.ns,${begin};o#.elapsed=0;o#.timeStamp=s#')","        );","","        timer.stop = createFunction(","          interpolate('o#'),","          interpolate('var n#=this.ns,s#=o#.timeStamp,${end};o#.elapsed=r#')","        );","","        // Create compiled test.","        return createFunction(","          interpolate('window,t#'),","          'var global = window, clearTimeout = global.clearTimeout, setTimeout = global.setTimeout;\\n' +","          interpolate(body)","        );","      }","","      /**","       * Gets the current timer's minimum resolution (secs).","       */","      function getRes(unit) {","        var measured,","            begin,","            count = 30,","            divisor = 1e3,","            ns = timer.ns,","            sample = [];","","        // Get average smallest measurable time.","        while (count--) {","          if (unit == 'us') {","            divisor = 1e6;","            if (ns.stop) {","              ns.start();","              while (!(measured = ns.microseconds())) {}","            } else {","              begin = ns();","              while (!(measured = ns() - begin)) {}","            }","          }","          else if (unit == 'ns') {","            divisor = 1e9;","            begin = (begin = ns())[0] + (begin[1] / divisor);","            while (!(measured = ((measured = ns())[0] + (measured[1] / divisor)) - begin)) {}","            divisor = 1;","          }","          else if (ns.now) {","            begin = ns.now();","            while (!(measured = ns.now() - begin)) {}","          }","          else {","            begin = new ns().getTime();","            while (!(measured = new ns().getTime() - begin)) {}","          }","          // Check for broken timers.","          if (measured > 0) {","            sample.push(measured);","          } else {","            sample.push(Infinity);","            break;","          }","        }","        // Convert to seconds.","        return getMean(sample) / divisor;","      }","","      /**","       * Interpolates a given template string.","       */","      function interpolate(string) {","        // Replaces all occurrences of `#` with a unique number and template tokens with content.","        return _.template(string.replace(/\\#/g, /\\d+/.exec(templateData.uid)))(templateData);","      }","","      /*----------------------------------------------------------------------*/","","      // Detect Chrome's microsecond timer:","      // enable benchmarking via the --enable-benchmarking command","      // line switch in at least Chrome 7 to use chrome.Interval","      try {","        if ((timer.ns = new (context.chrome || context.chromium).Interval)) {","          timers.push({ 'ns': timer.ns, 'res': getRes('us'), 'unit': 'us' });","        }","      } catch(e) {}","","      // Detect Node.js's nanosecond resolution timer available in Node.js >= 0.8.","      if (processObject && typeof (timer.ns = processObject.hrtime) == 'function') {","        timers.push({ 'ns': timer.ns, 'res': getRes('ns'), 'unit': 'ns' });","      }","      // Detect Wade Simmons' Node.js `microtime` module.","      if (microtimeObject && typeof (timer.ns = microtimeObject.now) == 'function') {","        timers.push({ 'ns': timer.ns,  'res': getRes('us'), 'unit': 'us' });","      }","      // Pick timer with highest resolution.","      timer = _.minBy(timers, 'res');","","      // Error if there are no working timers.","      if (timer.res == Infinity) {","        throw new Error('Benchmark.js was unable to find a working timer.');","      }","      // Resolve time span required to achieve a percent uncertainty of at most 1%.","      // For more information see http://spiff.rit.edu/classes/phys273/uncert/uncert.html.","      options.minTime || (options.minTime = max(timer.res / 2 / 0.01, 0.05));","      return clock.apply(null, arguments);","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Computes stats on benchmark results.","     *","     * @private","     * @param {Object} bench The benchmark instance.","     * @param {Object} options The options object.","     */","    function compute(bench, options) {","      options || (options = {});","","      var async = options.async,","          elapsed = 0,","          initCount = bench.initCount,","          minSamples = bench.minSamples,","          queue = [],","          sample = bench.stats.sample;","","      /**","       * Adds a clone to the queue.","       */","      function enqueue() {","        queue.push(bench.clone({","          '_original': bench,","          'events': {","            'abort': [update],","            'cycle': [update],","            'error': [update],","            'start': [update]","          }","        }));","      }","","      /**","       * Updates the clone/original benchmarks to keep their data in sync.","       */","      function update(event) {","        var clone = this,","            type = event.type;","","        if (bench.running) {","          if (type == 'start') {","            // Note: `clone.minTime` prop is inited in `clock()`.","            clone.count = bench.initCount;","          }","          else {","            if (type == 'error') {","              bench.error = clone.error;","            }","            if (type == 'abort') {","              bench.abort();","              bench.emit('cycle');","            } else {","              event.currentTarget = event.target = bench;","              bench.emit(event);","            }","          }","        } else if (bench.aborted) {","          // Clear abort listeners to avoid triggering bench's abort/cycle again.","          clone.events.abort.length = 0;","          clone.abort();","        }","      }","","      /**","       * Determines if more clones should be queued or if cycling should stop.","       */","      function evaluate(event) {","        var critical,","            df,","            mean,","            moe,","            rme,","            sd,","            sem,","            variance,","            clone = event.target,","            done = bench.aborted,","            now = _.now(),","            size = sample.push(clone.times.period),","            maxedOut = size >= minSamples && (elapsed += now - clone.times.timeStamp) / 1e3 > bench.maxTime,","            times = bench.times,","            varOf = function(sum, x) { return sum + pow(x - mean, 2); };","","        // Exit early for aborted or unclockable tests.","        if (done || clone.hz == Infinity) {","          maxedOut = !(size = sample.length = queue.length = 0);","        }","","        if (!done) {","          // Compute the sample mean (estimate of the population mean).","          mean = getMean(sample);","          // Compute the sample variance (estimate of the population variance).","          variance = _.reduce(sample, varOf, 0) / (size - 1) || 0;","          // Compute the sample standard deviation (estimate of the population standard deviation).","          sd = sqrt(variance);","          // Compute the standard error of the mean (a.k.a. the standard deviation of the sampling distribution of the sample mean).","          sem = sd / sqrt(size);","          // Compute the degrees of freedom.","          df = size - 1;","          // Compute the critical value.","          critical = tTable[Math.round(df) || 1] || tTable.infinity;","          // Compute the margin of error.","          moe = sem * critical;","          // Compute the relative margin of error.","          rme = (moe / mean) * 100 || 0;","","          _.assign(bench.stats, {","            'deviation': sd,","            'mean': mean,","            'moe': moe,","            'rme': rme,","            'sem': sem,","            'variance': variance","          });","","          // Abort the cycle loop when the minimum sample size has been collected","          // and the elapsed time exceeds the maximum time allowed per benchmark.","          // We don't count cycle delays toward the max time because delays may be","          // increased by browsers that clamp timeouts for inactive tabs. For more","          // information see https://developer.mozilla.org/en/window.setTimeout#Inactive_tabs.","          if (maxedOut) {","            // Reset the `initCount` in case the benchmark is rerun.","            bench.initCount = initCount;","            bench.running = false;","            done = true;","            times.elapsed = (now - times.timeStamp) / 1e3;","          }","          if (bench.hz != Infinity) {","            bench.hz = 1 / mean;","            times.cycle = mean * bench.count;","            times.period = mean;","          }","        }","        // If time permits, increase sample size to reduce the margin of error.","        if (queue.length < 2 && !maxedOut) {","          enqueue();","        }","        // Abort the `invoke` cycle when done.","        event.aborted = done;","      }","","      // Init queue and begin.","      enqueue();","      invoke(queue, {","        'name': 'run',","        'args': { 'async': async },","        'queued': true,","        'onCycle': evaluate,","        'onComplete': function() { bench.emit('complete'); }","      });","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Cycles a benchmark until a run `count` can be established.","     *","     * @private","     * @param {Object} clone The cloned benchmark instance.","     * @param {Object} options The options object.","     */","    function cycle(clone, options) {","      options || (options = {});","","      var deferred;","      if (clone instanceof Deferred) {","        deferred = clone;","        clone = clone.benchmark;","      }","      var clocked,","          cycles,","          divisor,","          event,","          minTime,","          period,","          async = options.async,","          bench = clone._original,","          count = clone.count,","          times = clone.times;","","      // Continue, if not aborted between cycles.","      if (clone.running) {","        // `minTime` is set to `Benchmark.options.minTime` in `clock()`.","        cycles = ++clone.cycles;","        clocked = deferred ? deferred.elapsed : clock(clone);","        minTime = clone.minTime;","","        if (cycles > bench.cycles) {","          bench.cycles = cycles;","        }","        if (clone.error) {","          event = Event('error');","          event.message = clone.error;","          clone.emit(event);","          if (!event.cancelled) {","            clone.abort();","          }","        }","      }","      // Continue, if not errored.","      if (clone.running) {","        // Compute the time taken to complete last test cycle.","        bench.times.cycle = times.cycle = clocked;","        // Compute the seconds per operation.","        period = bench.times.period = times.period = clocked / count;","        // Compute the ops per second.","        bench.hz = clone.hz = 1 / period;","        // Avoid working our way up to this next time.","        bench.initCount = clone.initCount = count;","        // Do we need to do another cycle?","        clone.running = clocked < minTime;","","        if (clone.running) {","          // Tests may clock at `0` when `initCount` is a small number,","          // to avoid that we set its count to something a bit higher.","          if (!clocked && (divisor = divisors[clone.cycles]) != null) {","            count = floor(4e6 / divisor);","          }","          // Calculate how many more iterations it will take to achieve the `minTime`.","          if (count <= clone.count) {","            count += Math.ceil((minTime - clocked) / period);","          }","          clone.running = count != Infinity;","        }","      }","      // Should we exit early?","      event = Event('cycle');","      clone.emit(event);","      if (event.aborted) {","        clone.abort();","      }","      // Figure out what to do next.","      if (clone.running) {","        // Start a new cycle.","        clone.count = count;","        if (deferred) {","          clone.compiled.call(deferred, context, timer);","        } else if (async) {","          delay(clone, function() { cycle(clone, options); });","        } else {","          cycle(clone);","        }","      }","      else {","        // Fix TraceMonkey bug associated with clock fallbacks.","        // For more information see http://bugzil.la/509069.","        if (support.browser) {","          runScript(uid + '=1;delete ' + uid);","        }","        // We're done.","        clone.emit('complete');","      }","    }","","    /*------------------------------------------------------------------------*/","","    /**","     * Runs the benchmark.","     *","     * @memberOf Benchmark","     * @param {Object} [options={}] Options object.","     * @returns {Object} The benchmark instance.","     * @example","     *","     * // basic usage","     * bench.run();","     *","     * // or with options","     * bench.run({ 'async': true });","     */","    function run(options) {","      var bench = this,","          event = Event('start');","","      // Set `running` to `false` so `reset()` won't call `abort()`.","      bench.running = false;","      bench.reset();","      bench.running = true;","","      bench.count = bench.initCount;","      bench.times.timeStamp = _.now();","      bench.emit(event);","","      if (!event.cancelled) {","        options = { 'async': ((options = options && options.async) == null ? bench.async : options) && support.timeout };","","        // For clones created within `compute()`.","        if (bench._original) {","          if (bench.defer) {","            Deferred(bench);","          } else {","            cycle(bench, options);","          }","        }","        // For original benchmarks.","        else {","          compute(bench, options);","        }","      }","      return bench;","    }","","    /*------------------------------------------------------------------------*/","","    // Firefox 1 erroneously defines variable and argument names of functions on","    // the function itself as non-configurable properties with `undefined` values.","    // The bugginess continues as the `Benchmark` constructor has an argument","    // named `options` and Firefox 1 will not assign a value to `Benchmark.options`,","    // making it non-writable in the process, unless it is the first property","    // assigned by for-in loop of `_.assign()`.","    _.assign(Benchmark, {","","      /**","       * The default options copied by benchmark instances.","       *","       * @static","       * @memberOf Benchmark","       * @type Object","       */","      'options': {","","        /**","         * A flag to indicate that benchmark cycles will execute asynchronously","         * by default.","         *","         * @memberOf Benchmark.options","         * @type boolean","         */","        'async': false,","","        /**","         * A flag to indicate that the benchmark clock is deferred.","         *","         * @memberOf Benchmark.options","         * @type boolean","         */","        'defer': false,","","        /**","         * The delay between test cycles (secs).","         * @memberOf Benchmark.options","         * @type number","         */","        'delay': 0.005,","","        /**","         * Displayed by `Benchmark#toString` when a `name` is not available","         * (auto-generated if absent).","         *","         * @memberOf Benchmark.options","         * @type string","         */","        'id': undefined,","","        /**","         * The default number of times to execute a test on a benchmark's first cycle.","         *","         * @memberOf Benchmark.options","         * @type number","         */","        'initCount': 1,","","        /**","         * The maximum time a benchmark is allowed to run before finishing (secs).","         *","         * Note: Cycle delays aren't counted toward the maximum time.","         *","         * @memberOf Benchmark.options","         * @type number","         */","        'maxTime': 5,","","        /**","         * The minimum sample size required to perform statistical analysis.","         *","         * @memberOf Benchmark.options","         * @type number","         */","        'minSamples': 5,","","        /**","         * The time needed to reduce the percent uncertainty of measurement to 1% (secs).","         *","         * @memberOf Benchmark.options","         * @type number","         */","        'minTime': 0,","","        /**","         * The name of the benchmark.","         *","         * @memberOf Benchmark.options","         * @type string","         */","        'name': undefined,","","        /**","         * An event listener called when the benchmark is aborted.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onAbort': undefined,","","        /**","         * An event listener called when the benchmark completes running.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onComplete': undefined,","","        /**","         * An event listener called after each run cycle.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onCycle': undefined,","","        /**","         * An event listener called when a test errors.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onError': undefined,","","        /**","         * An event listener called when the benchmark is reset.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onReset': undefined,","","        /**","         * An event listener called when the benchmark starts running.","         *","         * @memberOf Benchmark.options","         * @type Function","         */","        'onStart': undefined","      },","","      /**","       * Platform object with properties describing things like browser name,","       * version, and operating system. See [`platform.js`](https://mths.be/platform).","       *","       * @static","       * @memberOf Benchmark","       * @type Object","       */","      'platform': context.platform || require('platform') || ({","        'description': context.navigator && context.navigator.userAgent || null,","        'layout': null,","        'product': null,","        'name': null,","        'manufacturer': null,","        'os': null,","        'prerelease': null,","        'version': null,","        'toString': function() {","          return this.description || '';","        }","      }),","","      /**","       * The semantic version number.","       *","       * @static","       * @memberOf Benchmark","       * @type string","       */","      'version': '2.1.1'","    });","","    _.assign(Benchmark, {","      'filter': filter,","      'formatNumber': formatNumber,","      'invoke': invoke,","      'join': join,","      'runInContext': runInContext,","      'support': support","    });","","    // Add lodash methods to Benchmark.","    _.each(['each', 'forEach', 'forOwn', 'has', 'indexOf', 'map', 'reduce'], function(methodName) {","      Benchmark[methodName] = _[methodName];","    });","","    /*------------------------------------------------------------------------*/","","    _.assign(Benchmark.prototype, {","","      /**","       * The number of times a test was executed.","       *","       * @memberOf Benchmark","       * @type number","       */","      'count': 0,","","      /**","       * The number of cycles performed while benchmarking.","       *","       * @memberOf Benchmark","       * @type number","       */","      'cycles': 0,","","      /**","       * The number of executions per second.","       *","       * @memberOf Benchmark","       * @type number","       */","      'hz': 0,","","      /**","       * The compiled test function.","       *","       * @memberOf Benchmark","       * @type {Function|string}","       */","      'compiled': undefined,","","      /**","       * The error object if the test failed.","       *","       * @memberOf Benchmark","       * @type Object","       */","      'error': undefined,","","      /**","       * The test to benchmark.","       *","       * @memberOf Benchmark","       * @type {Function|string}","       */","      'fn': undefined,","","      /**","       * A flag to indicate if the benchmark is aborted.","       *","       * @memberOf Benchmark","       * @type boolean","       */","      'aborted': false,","","      /**","       * A flag to indicate if the benchmark is running.","       *","       * @memberOf Benchmark","       * @type boolean","       */","      'running': false,","","      /**","       * Compiled into the test and executed immediately **before** the test loop.","       *","       * @memberOf Benchmark","       * @type {Function|string}","       * @example","       *","       * // basic usage","       * var bench = Benchmark({","       *   'setup': function() {","       *     var c = this.count,","       *         element = document.getElementById('container');","       *     while (c--) {","       *       element.appendChild(document.createElement('div'));","       *     }","       *   },","       *   'fn': function() {","       *     element.removeChild(element.lastChild);","       *   }","       * });","       *","       * // compiles to something like:","       * var c = this.count,","       *     element = document.getElementById('container');","       * while (c--) {","       *   element.appendChild(document.createElement('div'));","       * }","       * var start = new Date;","       * while (count--) {","       *   element.removeChild(element.lastChild);","       * }","       * var end = new Date - start;","       *","       * // or using strings","       * var bench = Benchmark({","       *   'setup': '\\","       *     var a = 0;\\n\\","       *     (function() {\\n\\","       *       (function() {\\n\\","       *         (function() {',","       *   'fn': 'a += 1;',","       *   'teardown': '\\","       *          }())\\n\\","       *        }())\\n\\","       *      }())'","       * });","       *","       * // compiles to something like:","       * var a = 0;","       * (function() {","       *   (function() {","       *     (function() {","       *       var start = new Date;","       *       while (count--) {","       *         a += 1;","       *       }","       *       var end = new Date - start;","       *     }())","       *   }())","       * }())","       */","      'setup': _.noop,","","      /**","       * Compiled into the test and executed immediately **after** the test loop.","       *","       * @memberOf Benchmark","       * @type {Function|string}","       */","      'teardown': _.noop,","","      /**","       * An object of stats including mean, margin or error, and standard deviation.","       *","       * @memberOf Benchmark","       * @type Object","       */","      'stats': {","","        /**","         * The margin of error.","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'moe': 0,","","        /**","         * The relative margin of error (expressed as a percentage of the mean).","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'rme': 0,","","        /**","         * The standard error of the mean.","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'sem': 0,","","        /**","         * The sample standard deviation.","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'deviation': 0,","","        /**","         * The sample arithmetic mean (secs).","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'mean': 0,","","        /**","         * The array of sampled periods.","         *","         * @memberOf Benchmark#stats","         * @type Array","         */","        'sample': [],","","        /**","         * The sample variance.","         *","         * @memberOf Benchmark#stats","         * @type number","         */","        'variance': 0","      },","","      /**","       * An object of timing data including cycle, elapsed, period, start, and stop.","       *","       * @memberOf Benchmark","       * @type Object","       */","      'times': {","","        /**","         * The time taken to complete the last cycle (secs).","         *","         * @memberOf Benchmark#times","         * @type number","         */","        'cycle': 0,","","        /**","         * The time taken to complete the benchmark (secs).","         *","         * @memberOf Benchmark#times","         * @type number","         */","        'elapsed': 0,","","        /**","         * The time taken to execute the test once (secs).","         *","         * @memberOf Benchmark#times","         * @type number","         */","        'period': 0,","","        /**","         * A timestamp of when the benchmark started (ms).","         *","         * @memberOf Benchmark#times","         * @type number","         */","        'timeStamp': 0","      }","    });","","    _.assign(Benchmark.prototype, {","      'abort': abort,","      'clone': clone,","      'compare': compare,","      'emit': emit,","      'listeners': listeners,","      'off': off,","      'on': on,","      'reset': reset,","      'run': run,","      'toString': toStringBench","    });","","    /*------------------------------------------------------------------------*/","","    _.assign(Deferred.prototype, {","","      /**","       * The deferred benchmark instance.","       *","       * @memberOf Benchmark.Deferred","       * @type Object","       */","      'benchmark': null,","","      /**","       * The number of deferred cycles performed while benchmarking.","       *","       * @memberOf Benchmark.Deferred","       * @type number","       */","      'cycles': 0,","","      /**","       * The time taken to complete the deferred benchmark (secs).","       *","       * @memberOf Benchmark.Deferred","       * @type number","       */","      'elapsed': 0,","","      /**","       * A timestamp of when the deferred benchmark started (ms).","       *","       * @memberOf Benchmark.Deferred","       * @type number","       */","      'timeStamp': 0","    });","","    _.assign(Deferred.prototype, {","      'resolve': resolve","    });","","    /*------------------------------------------------------------------------*/","","    _.assign(Event.prototype, {","","      /**","       * A flag to indicate if the emitters listener iteration is aborted.","       *","       * @memberOf Benchmark.Event","       * @type boolean","       */","      'aborted': false,","","      /**","       * A flag to indicate if the default action is cancelled.","       *","       * @memberOf Benchmark.Event","       * @type boolean","       */","      'cancelled': false,","","      /**","       * The object whose listeners are currently being processed.","       *","       * @memberOf Benchmark.Event","       * @type Object","       */","      'currentTarget': undefined,","","      /**","       * The return value of the last executed listener.","       *","       * @memberOf Benchmark.Event","       * @type Mixed","       */","      'result': undefined,","","      /**","       * The object to which the event was originally emitted.","       *","       * @memberOf Benchmark.Event","       * @type Object","       */","      'target': undefined,","","      /**","       * A timestamp of when the event was created (ms).","       *","       * @memberOf Benchmark.Event","       * @type number","       */","      'timeStamp': 0,","","      /**","       * The event type.","       *","       * @memberOf Benchmark.Event","       * @type string","       */","      'type': ''","    });","","    /*------------------------------------------------------------------------*/","","    /**","     * The default options copied by suite instances.","     *","     * @static","     * @memberOf Benchmark.Suite","     * @type Object","     */","    Suite.options = {","","      /**","       * The name of the suite.","       *","       * @memberOf Benchmark.Suite.options","       * @type string","       */","      'name': undefined","    };","","    /*------------------------------------------------------------------------*/","","    _.assign(Suite.prototype, {","","      /**","       * The number of benchmarks in the suite.","       *","       * @memberOf Benchmark.Suite","       * @type number","       */","      'length': 0,","","      /**","       * A flag to indicate if the suite is aborted.","       *","       * @memberOf Benchmark.Suite","       * @type boolean","       */","      'aborted': false,","","      /**","       * A flag to indicate if the suite is running.","       *","       * @memberOf Benchmark.Suite","       * @type boolean","       */","      'running': false","    });","","    _.assign(Suite.prototype, {","      'abort': abortSuite,","      'add': add,","      'clone': cloneSuite,","      'emit': emit,","      'filter': filterSuite,","      'join': arrayRef.join,","      'listeners': listeners,","      'off': off,","      'on': on,","      'pop': arrayRef.pop,","      'push': push,","      'reset': resetSuite,","      'run': runSuite,","      'reverse': arrayRef.reverse,","      'shift': shift,","      'slice': slice,","      'sort': arrayRef.sort,","      'splice': arrayRef.splice,","      'unshift': unshift","    });","","    /*------------------------------------------------------------------------*/","","    // Expose Deferred, Event, and Suite.","    _.assign(Benchmark, {","      'Deferred': Deferred,","      'Event': Event,","      'Suite': Suite","    });","","    /*------------------------------------------------------------------------*/","","    // Add lodash methods as Suite methods.","    _.each(['each', 'forEach', 'indexOf', 'map', 'reduce'], function(methodName) {","      var func = _[methodName];","      Suite.prototype[methodName] = function() {","        var args = [this];","        push.apply(args, arguments);","        return func.apply(_, args);","      };","    });","","    // Avoid array-like object bugs with `Array#shift` and `Array#splice`","    // in Firefox < 10 and IE < 9.","    _.each(['pop', 'shift', 'splice'], function(methodName) {","      var func = arrayRef[methodName];","","      Suite.prototype[methodName] = function() {","        var value = this,","            result = func.apply(value, arguments);","","        if (value.length === 0) {","          delete value[0];","        }","        return result;","      };","    });","","    // Avoid buggy `Array#unshift` in IE < 8 which doesn't return the new","    // length of the array.","    Suite.prototype.unshift = function() {","      var value = this;","      unshift.apply(value, arguments);","      return value.length;","    };","","    return Benchmark;","  }","","  /*--------------------------------------------------------------------------*/","","  // Export Benchmark.","  // Some AMD build optimizers, like r.js, check for condition patterns like the following:","  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {","    // Define as an anonymous module so, through path mapping, it can be aliased.","    define(['lodash', 'platform'], function(_, platform) {","      return runInContext({","        '_': _,","        'platform': platform","      });","    });","  }","  else {","    var Benchmark = runInContext();","","    // Check for `exports` after `define` in case a build optimizer adds an `exports` object.","    if (freeExports && freeModule) {","      // Export for Node.js.","      if (moduleExports) {","        (freeModule.exports = Benchmark).Benchmark = Benchmark;","      }","      // Export for CommonJS support.","      freeExports.Benchmark = Benchmark;","    }","    else {","      // Export to the global object.","      root.Benchmark = Benchmark;","    }","  }","}.call(this));",""],"l":{"8":1,"12":1,"15":1,"21":1,"24":1,"27":1,"30":1,"33":1,"34":1,"35":1,"39":1,"42":1,"45":1,"48":1,"51":1,"54":1,"61":1,"73":1,"86":1,"125":1,"127":1,"128":1,"129":0,"130":0,"136":1,"139":0,"148":0,"152":0,"168":0,"171":0,"174":0,"177":0,"180":0,"183":0,"186":0,"195":0,"197":0,"205":0,"213":0,"222":0,"227":0,"228":0,"233":0,"243":0,"356":1,"357":0,"360":0,"361":0,"364":0,"366":0,"368":0,"370":0,"371":0,"373":0,"375":0,"376":0,"377":0,"381":0,"383":0,"385":0,"386":0,"388":0,"389":0,"399":1,"400":0,"401":0,"402":0,"404":0,"405":0,"415":1,"416":0,"417":0,"418":0,"420":0,"467":1,"468":0,"471":0,"472":0,"475":0,"477":0,"480":0,"482":0,"495":0,"497":0,"510":1,"512":0,"513":0,"517":0,"518":0,"519":0,"520":0,"524":0,"525":0,"535":1,"536":0,"545":1,"546":0,"547":0,"557":1,"558":0,"569":1,"570":0,"571":0,"582":1,"583":0,"584":0,"585":0,"586":0,"588":0,"591":0,"594":0,"607":1,"608":0,"621":1,"622":0,"623":0,"625":0,"626":0,"636":1,"637":0,"647":1,"648":0,"649":0,"651":0,"660":1,"661":0,"671":0,"674":0,"675":0,"677":0,"678":0,"679":0,"681":0,"682":0,"692":1,"693":0,"695":0,"696":0,"698":0,"699":0,"700":0,"702":0,"703":0,"716":1,"717":0,"721":0,"723":0,"724":0,"725":0,"727":0,"728":0,"731":0,"732":0,"733":0,"763":1,"764":0,"766":0,"767":0,"770":0,"772":0,"773":0,"774":0,"777":0,"778":0,"781":0,"792":1,"793":0,"794":0,"837":1,"838":0,"849":1,"850":0,"853":0,"855":0,"856":0,"857":0,"860":0,"862":0,"868":1,"869":0,"873":0,"874":0,"875":0,"878":0,"879":0,"880":0,"881":0,"884":0,"885":0,"886":0,"887":0,"889":0,"891":0,"895":0,"899":0,"900":0,"905":0,"906":0,"908":0,"915":1,"917":0,"918":0,"925":1,"926":0,"929":0,"930":0,"933":0,"938":0,"940":0,"943":0,"944":0,"945":0,"946":0,"949":0,"951":0,"952":0,"953":0,"954":0,"957":0,"959":0,"960":0,"962":0,"963":0,"967":0,"968":0,"970":0,"974":0,"987":1,"988":0,"992":0,"993":0,"994":0,"996":0,"1008":1,"1009":0,"1013":0,"1014":0,"1015":0,"1016":0,"1018":0,"1019":0,"1020":0,"1022":0,"1023":0,"1024":0,"1028":0,"1068":1,"1069":0,"1073":0,"1074":0,"1076":0,"1087":1,"1088":0,"1092":0,"1093":0,"1094":0,"1099":0,"1110":1,"1111":0,"1114":0,"1115":0,"1125":1,"1126":0,"1130":0,"1132":0,"1133":0,"1134":0,"1137":0,"1139":0,"1140":0,"1141":0,"1144":0,"1162":1,"1163":0,"1165":0,"1166":0,"1167":0,"1169":0,"1174":0,"1177":0,"1178":0,"1179":0,"1181":0,"1182":0,"1185":0,"1186":0,"1189":0,"1202":1,"1203":0,"1209":0,"1210":0,"1211":0,"1213":0,"1214":0,"1215":0,"1216":0,"1218":0,"1221":0,"1232":1,"1233":0,"1236":0,"1265":1,"1266":0,"1269":0,"1270":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1285":0,"1289":0,"1307":1,"1308":0,"1311":0,"1312":0,"1317":0,"1328":1,"1329":0,"1333":0,"1334":0,"1335":0,"1336":0,"1338":0,"1339":0,"1340":0,"1342":0,"1343":0,"1344":0,"1346":0,"1347":0,"1348":0,"1352":0,"1367":1,"1368":0,"1372":0,"1375":0,"1376":0,"1377":0,"1381":0,"1391":1,"1392":0,"1395":0,"1396":0,"1398":0,"1410":1,"1411":0,"1412":0,"1416":1,"1417":0,"1418":0,"1422":1,"1423":0,"1427":0,"1430":0,"1431":0,"1434":0,"1435":0,"1444":1,"1445":0,"1446":0,"1448":0,"1449":0,"1450":0,"1451":0,"1453":0,"1460":0,"1465":0,"1466":0,"1467":0,"1473":0,"1474":0,"1476":0,"1477":0,"1479":0,"1480":0,"1483":0,"1484":0,"1485":0,"1489":0,"1490":0,"1493":0,"1494":0,"1496":0,"1499":0,"1500":0,"1507":0,"1508":0,"1509":0,"1512":0,"1522":1,"1523":0,"1532":0,"1533":0,"1535":0,"1538":0,"1550":1,"1551":0,"1556":0,"1557":0,"1559":0,"1560":0,"1561":0,"1563":0,"1572":0,"1577":0,"1595":0,"1598":0,"1599":0,"1602":0,"1604":0,"1607":0,"1608":0,"1609":0,"1612":0,"1613":0,"1614":0,"1617":0,"1618":0,"1626":0,"1628":0,"1630":0,"1631":0,"1632":0,"1633":0,"1636":0,"1637":0,"1638":0,"1643":0,"1644":0,"1645":0,"1647":0,"1655":1,"1656":0,"1659":0,"1661":0,"1669":0,"1670":0,"1675":0,"1676":0,"1677":0,"1682":0,"1688":0,"1689":0,"1695":0,"1701":0,"1706":0,"1712":0,"1722":1,"1723":0,"1731":0,"1732":0,"1733":0,"1734":0,"1735":0,"1736":0,"1738":0,"1739":0,"1742":0,"1743":0,"1744":0,"1745":0,"1746":0,"1748":0,"1749":0,"1750":0,"1753":0,"1754":0,"1757":0,"1758":0,"1760":0,"1761":0,"1765":0,"1771":1,"1773":0,"1781":0,"1782":0,"1783":0,"1788":0,"1789":0,"1792":0,"1793":0,"1796":0,"1799":0,"1800":0,"1804":0,"1805":0,"1817":1,"1818":0,"1820":0,"1830":1,"1831":0,"1845":1,"1846":0,"1849":0,"1850":0,"1852":0,"1855":0,"1856":0,"1858":0,"1859":0,"1860":0,"1862":0,"1863":0,"1866":0,"1868":0,"1869":0,"1876":1,"1877":0,"1891":0,"1894":0,"1895":0,"1898":0,"1900":0,"1902":0,"1904":0,"1906":0,"1908":0,"1910":0,"1912":0,"1914":0,"1916":0,"1930":0,"1932":0,"1933":0,"1934":0,"1935":0,"1937":0,"1938":0,"1939":0,"1940":0,"1944":0,"1945":0,"1948":0,"1952":0,"1953":0,"1958":0,"1971":1,"1972":0,"1974":0,"1975":0,"1976":0,"1977":0,"1979":0,"1991":0,"1993":0,"1994":0,"1995":0,"1997":0,"1998":0,"2000":0,"2001":0,"2002":0,"2003":0,"2004":0,"2005":0,"2010":0,"2012":0,"2014":0,"2016":0,"2018":0,"2020":0,"2022":0,"2025":0,"2026":0,"2029":0,"2030":0,"2032":0,"2036":0,"2037":0,"2038":0,"2039":0,"2042":0,"2044":0,"2045":0,"2046":0,"2047":0,"2048":0,"2050":0,"2056":0,"2057":0,"2060":0,"2080":1,"2081":0,"2085":0,"2086":0,"2087":0,"2089":0,"2090":0,"2091":0,"2093":0,"2094":0,"2097":0,"2098":0,"2099":0,"2101":0,"2106":0,"2109":0,"2120":0,"2273":0,"2287":0,"2297":0,"2298":0,"2303":0,"2547":0,"2562":0,"2597":0,"2603":0,"2671":0,"2684":0,"2711":0,"2736":0,"2745":0,"2746":0,"2747":0,"2748":0,"2749":0,"2750":0,"2756":0,"2757":0,"2759":0,"2760":0,"2763":0,"2764":0,"2766":0,"2772":0,"2773":0,"2774":0,"2775":0,"2778":0,"2785":1,"2787":1,"2788":1,"2795":0,"2798":0,"2800":0,"2801":0,"2804":0,"2808":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/chai/karma.conf.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/chai/karma.conf.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":28,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":18,"column":5}},"3":{"start":{"line":20,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":22,"column":6},"end":{"line":22,"column":39}},"5":{"start":{"line":23,"column":6},"end":{"line":23,"column":12}},"6":{"start":{"line":26,"column":6},"end":{"line":26,"column":12}}},"branchMap":{"1":{"line":20,"type":"switch","locations":[{"start":{"line":21,"column":4},"end":{"line":23,"column":12}},{"start":{"line":24,"column":4},"end":{"line":26,"column":12}}]}},"code":["module.exports = function(config) {","  config.set({","      frameworks: [ 'mocha' ]","    , files: [","          'chai.js'","        , 'test/bootstrap/karma.js'","        , 'test/*.js'","      ]","    , reporters: [ 'progress' ]","    , colors: true","    , logLevel: config.LOG_INFO","    , autoWatch: false","    , browsers: [ 'PhantomJS' ]","    , browserDisconnectTimeout: 10000","    , browserDisconnectTolerance: 2","    , browserNoActivityTimeout: 20000","    , singleRun: true","  });","","  switch (process.env.CHAI_TEST_ENV) {","    case 'sauce':","      require('./karma.sauce')(config);","      break;","    default:","      // ...","      break;","  };","};",""],"l":{"1":1,"2":0,"20":0,"22":0,"23":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/chai/karma.sauce.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/chai/karma.sauce.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"3":{"start":{"line":4,"column":0},"end":{"line":41,"column":2}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":11}},"5":{"start":{"line":7,"column":2},"end":{"line":13,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":40}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":14}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":61}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":65}},"10":{"start":{"line":15,"column":2},"end":{"line":15,"column":61}},"11":{"start":{"line":15,"column":54},"end":{"line":15,"column":61}},"12":{"start":{"line":16,"column":2},"end":{"line":16,"column":37}},"13":{"start":{"line":16,"column":30},"end":{"line":16,"column":37}},"14":{"start":{"line":18,"column":2},"end":{"line":18,"column":51}},"15":{"start":{"line":19,"column":2},"end":{"line":19,"column":50}},"16":{"start":{"line":20,"column":2},"end":{"line":20,"column":44}},"17":{"start":{"line":21,"column":2},"end":{"line":21,"column":73}},"18":{"start":{"line":22,"column":2},"end":{"line":22,"column":51}},"19":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"20":{"start":{"line":25,"column":4},"end":{"line":25,"column":57}},"21":{"start":{"line":28,"column":2},"end":{"line":28,"column":53}},"22":{"start":{"line":29,"column":2},"end":{"line":29,"column":41}},"23":{"start":{"line":30,"column":2},"end":{"line":30,"column":37}},"24":{"start":{"line":31,"column":2},"end":{"line":31,"column":40}},"25":{"start":{"line":33,"column":2},"end":{"line":40,"column":4}}},"branchMap":{"1":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":26},"end":{"line":11,"column":52}},{"start":{"line":11,"column":56},"end":{"line":11,"column":60}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":28},"end":{"line":12,"column":56}},{"start":{"line":12,"column":60},"end":{"line":12,"column":64}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"4":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":26}},{"start":{"line":15,"column":30},"end":{"line":15,"column":52}}]},"5":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"6":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":15},"end":{"line":18,"column":40}},{"start":{"line":18,"column":44},"end":{"line":18,"column":51}}]},"7":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":15},"end":{"line":22,"column":44}},{"start":{"line":22,"column":48},"end":{"line":22,"column":50}}]},"8":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]}},"code":["var version = require('./package.json').version;","var ts = new Date().getTime();","","module.exports = function(config) {","  var auth;","","  try {","    auth = require('./test/auth/index');","  } catch(ex) {","    auth = {};","    auth.SAUCE_USERNAME = process.env.SAUCE_USERNAME || null;","    auth.SAUCE_ACCESS_KEY = process.env.SAUCE_ACCESS_KEY || null;","  }","","  if (!auth.SAUCE_USERNAME || !auth.SAUCE_ACCESS_KEY) return;","  if (process.env.SKIP_SAUCE) return;","","  var branch = process.env.TRAVIS_BRANCH || 'local'","  var browserConfig = require('./sauce.browsers');","  var browsers = Object.keys(browserConfig);","  var tags = [ 'chaijs_' + version, auth.SAUCE_USERNAME + '@' + branch ];","  var tunnel = process.env.TRAVIS_JOB_NUMBER || ts;","","  if (process.env.TRAVIS_JOB_NUMBER) {","    tags.push('travis@' + process.env.TRAVIS_JOB_NUMBER);","  }","","  config.browsers = config.browsers.concat(browsers);","  config.customLaunchers = browserConfig;","  config.reporters.push('saucelabs');","  config.transports = [ 'xhr-polling' ];","","  config.sauceLabs = {","      username: auth.SAUCE_USERNAME","    , accessKey: auth.SAUCE_ACCESS_KEY","    , startConnect: true","    , tags: tags","    , testName: 'ChaiJS'","    , tunnelIdentifier: tunnel","  };","};",""],"l":{"1":1,"2":1,"4":1,"5":0,"7":0,"8":0,"10":0,"11":0,"12":0,"15":0,"16":0,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"28":0,"29":0,"30":0,"31":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/chai/sauce.browsers.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/chai/sauce.browsers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":28,"column":0},"end":{"line":33,"column":2}},"3":{"start":{"line":39,"column":0},"end":{"line":44,"column":2}},"4":{"start":{"line":46,"column":0},"end":{"line":51,"column":2}},"5":{"start":{"line":57,"column":0},"end":{"line":62,"column":2}},"6":{"start":{"line":68,"column":0},"end":{"line":73,"column":2}},"7":{"start":{"line":75,"column":0},"end":{"line":80,"column":2}}},"branchMap":{},"code":["","/*!"," * Chrome"," */","","exports['SL_Chrome'] = {","    base: 'SauceLabs'","  , browserName: 'chrome'","};","","/*!"," * Firefox"," */","","/*!"," * TODO: Karma doesn't seem to like this, though sauce boots its up"," *","","exports['SL_Firefox_23'] = {","    base: 'SauceLabs'","  , browserName: 'firefox'","  , platform: 'Windows XP'","  , version: '23'","};","","*/","","exports['SL_Firefox_22'] = {","    base: 'SauceLabs'","  , browserName: 'firefox'","  , platform: 'Windows 7'","  , version: '22'","};","","/*!"," * Opera"," */","","exports['SL_Opera_12'] = {","    base: 'SauceLabs'","  , browserName: 'opera'","  , platform: 'Windows 7'","  , version: '12'","};","","exports['SL_Opera_11'] = {","    base: 'SauceLabs'","  , browserName: 'opera'","  , platform: 'Windows 7'","  , version: '11'","};","","/*!"," * Internet Explorer"," */","","exports['SL_IE_10'] = {","    base: 'SauceLabs'","  , browserName: 'internet explorer'","  , platform: 'Windows 2012'","  , version: '10'","};","","/*!"," * Safari"," */","","exports['SL_Safari_6'] = {","    base: 'SauceLabs'","  , browserName: 'safari'","  , platform: 'Mac 10.8'","  , version: '6'","};","","exports['SL_Safari_5'] = {","    base: 'SauceLabs'","  , browserName: 'safari'","  , platform: 'Mac 10.6'","  , version: '5'","};","","/*!"," * iPhone"," */","","/*!"," * TODO: These take forever to boot or shut down. Causes timeout."," *","","exports['SL_iPhone_6'] = {","    base: 'SauceLabs'","  , browserName: 'iphone'","  , platform: 'Mac 10.8'","  , version: '6'","};","","exports['SL_iPhone_5-1'] = {","    base: 'SauceLabs'","  , browserName: 'iphone'","  , platform: 'Mac 10.8'","  , version: '5.1'","};","","exports['SL_iPhone_5'] = {","    base: 'SauceLabs'","  , browserName: 'iphone'","  , platform: 'Mac 10.6'","  , version: '5'","};","","*/","","/*!"," * Android"," */","","/*!"," * TODO: fails because of error serialization"," *","","exports['SL_Android_4'] = {","    base: 'SauceLabs'","  , browserName: 'android'","  , platform: 'Linux'","  , version: '4'","};","","*/",""],"l":{"6":1,"28":1,"39":1,"46":1,"57":1,"68":1,"75":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/diff/diff.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/diff/diff.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":5,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":1,"83":1,"84":1,"85":0,"86":1,"87":1,"88":0,"89":1,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[1,0],"60":[0,0],"61":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":5,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":1},"end":{"line":17,"column":29}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":16},"end":{"line":18,"column":27}}},"3":{"name":"map","line":20,"loc":{"start":{"line":20,"column":4},"end":{"line":20,"column":36}}},"4":{"name":"clonePath","line":32,"loc":{"start":{"line":32,"column":4},"end":{"line":32,"column":29}}},"5":{"name":"removeEmpty","line":35,"loc":{"start":{"line":35,"column":4},"end":{"line":35,"column":32}}},"6":{"name":"escapeHTML","line":44,"loc":{"start":{"line":44,"column":4},"end":{"line":44,"column":27}}},"7":{"name":"(anonymous_7)","line":54,"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":42}}},"8":{"name":"(anonymous_8)","line":58,"loc":{"start":{"line":58,"column":14},"end":{"line":58,"column":45}}},"9":{"name":"(anonymous_9)","line":124,"loc":{"start":{"line":124,"column":23},"end":{"line":124,"column":67}}},"10":{"name":"(anonymous_10)","line":135,"loc":{"start":{"line":135,"column":23},"end":{"line":135,"column":78}}},"11":{"name":"(anonymous_11)","line":150,"loc":{"start":{"line":150,"column":16},"end":{"line":150,"column":38}}},"12":{"name":"(anonymous_12)","line":158,"loc":{"start":{"line":158,"column":14},"end":{"line":158,"column":36}}},"13":{"name":"(anonymous_13)","line":161,"loc":{"start":{"line":161,"column":18},"end":{"line":161,"column":34}}},"14":{"name":"(anonymous_14)","line":170,"loc":{"start":{"line":170,"column":53},"end":{"line":170,"column":69}}},"15":{"name":"(anonymous_15)","line":175,"loc":{"start":{"line":175,"column":23},"end":{"line":175,"column":39}}},"16":{"name":"(anonymous_16)","line":180,"loc":{"start":{"line":180,"column":24},"end":{"line":180,"column":40}}},"17":{"name":"(anonymous_17)","line":202,"loc":{"start":{"line":202,"column":17},"end":{"line":202,"column":42}}},"18":{"name":"(anonymous_18)","line":203,"loc":{"start":{"line":203,"column":17},"end":{"line":203,"column":42}}},"19":{"name":"(anonymous_19)","line":204,"loc":{"start":{"line":204,"column":26},"end":{"line":204,"column":51}}},"20":{"name":"(anonymous_20)","line":205,"loc":{"start":{"line":205,"column":17},"end":{"line":205,"column":42}}},"21":{"name":"(anonymous_21)","line":207,"loc":{"start":{"line":207,"column":15},"end":{"line":207,"column":40}}},"22":{"name":"(anonymous_22)","line":209,"loc":{"start":{"line":209,"column":19},"end":{"line":209,"column":76}}},"23":{"name":"contextLines","line":223,"loc":{"start":{"line":223,"column":8},"end":{"line":223,"column":37}}},"24":{"name":"(anonymous_24)","line":224,"loc":{"start":{"line":224,"column":28},"end":{"line":224,"column":44}}},"25":{"name":"eofNL","line":226,"loc":{"start":{"line":226,"column":8},"end":{"line":226,"column":45}}},"26":{"name":"(anonymous_26)","line":256,"loc":{"start":{"line":256,"column":53},"end":{"line":256,"column":69}}},"27":{"name":"(anonymous_27)","line":294,"loc":{"start":{"line":294,"column":18},"end":{"line":294,"column":44}}},"28":{"name":"(anonymous_28)","line":347,"loc":{"start":{"line":347,"column":27},"end":{"line":347,"column":44}}},"29":{"name":"(anonymous_29)","line":369,"loc":{"start":{"line":369,"column":27},"end":{"line":369,"column":44}}},"30":{"name":"(anonymous_30)","line":384,"loc":{"start":{"line":384,"column":15},"end":{"line":384,"column":26}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":389,"column":9}},"2":{"start":{"line":18,"column":2},"end":{"line":378,"column":7}},"3":{"start":{"line":20,"column":4},"end":{"line":31,"column":5}},"4":{"start":{"line":21,"column":6},"end":{"line":23,"column":7}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":59}},"6":{"start":{"line":25,"column":6},"end":{"line":25,"column":40}},"7":{"start":{"line":27,"column":6},"end":{"line":29,"column":7}},"8":{"start":{"line":28,"column":8},"end":{"line":28,"column":53}},"9":{"start":{"line":30,"column":6},"end":{"line":30,"column":19}},"10":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"11":{"start":{"line":33,"column":6},"end":{"line":33,"column":75}},"12":{"start":{"line":35,"column":4},"end":{"line":43,"column":5}},"13":{"start":{"line":36,"column":6},"end":{"line":36,"column":19}},"14":{"start":{"line":37,"column":6},"end":{"line":41,"column":7}},"15":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"16":{"start":{"line":39,"column":10},"end":{"line":39,"column":29}},"17":{"start":{"line":42,"column":6},"end":{"line":42,"column":17}},"18":{"start":{"line":44,"column":4},"end":{"line":52,"column":5}},"19":{"start":{"line":45,"column":6},"end":{"line":45,"column":16}},"20":{"start":{"line":46,"column":6},"end":{"line":46,"column":35}},"21":{"start":{"line":47,"column":6},"end":{"line":47,"column":34}},"22":{"start":{"line":48,"column":6},"end":{"line":48,"column":34}},"23":{"start":{"line":49,"column":6},"end":{"line":49,"column":36}},"24":{"start":{"line":51,"column":6},"end":{"line":51,"column":15}},"25":{"start":{"line":54,"column":4},"end":{"line":56,"column":6}},"26":{"start":{"line":55,"column":6},"end":{"line":55,"column":47}},"27":{"start":{"line":57,"column":4},"end":{"line":164,"column":6}},"28":{"start":{"line":60,"column":10},"end":{"line":62,"column":11}},"29":{"start":{"line":61,"column":12},"end":{"line":61,"column":42}},"30":{"start":{"line":63,"column":10},"end":{"line":65,"column":11}},"31":{"start":{"line":64,"column":12},"end":{"line":64,"column":57}},"32":{"start":{"line":66,"column":10},"end":{"line":68,"column":11}},"33":{"start":{"line":67,"column":12},"end":{"line":67,"column":55}},"34":{"start":{"line":70,"column":10},"end":{"line":70,"column":47}},"35":{"start":{"line":71,"column":10},"end":{"line":71,"column":47}},"36":{"start":{"line":73,"column":10},"end":{"line":73,"column":67}},"37":{"start":{"line":74,"column":10},"end":{"line":74,"column":46}},"38":{"start":{"line":75,"column":10},"end":{"line":75,"column":58}},"39":{"start":{"line":78,"column":10},"end":{"line":78,"column":80}},"40":{"start":{"line":79,"column":10},"end":{"line":81,"column":11}},"41":{"start":{"line":80,"column":12},"end":{"line":80,"column":42}},"42":{"start":{"line":83,"column":10},"end":{"line":121,"column":11}},"43":{"start":{"line":84,"column":12},"end":{"line":120,"column":13}},"44":{"start":{"line":85,"column":14},"end":{"line":85,"column":27}},"45":{"start":{"line":86,"column":14},"end":{"line":87,"column":56}},"46":{"start":{"line":88,"column":14},"end":{"line":88,"column":75}},"47":{"start":{"line":89,"column":14},"end":{"line":92,"column":15}},"48":{"start":{"line":91,"column":16},"end":{"line":91,"column":53}},"49":{"start":{"line":94,"column":14},"end":{"line":94,"column":64}},"50":{"start":{"line":95,"column":14},"end":{"line":95,"column":75}},"51":{"start":{"line":96,"column":14},"end":{"line":99,"column":15}},"52":{"start":{"line":97,"column":16},"end":{"line":97,"column":51}},"53":{"start":{"line":98,"column":16},"end":{"line":98,"column":25}},"54":{"start":{"line":104,"column":14},"end":{"line":111,"column":15}},"55":{"start":{"line":105,"column":16},"end":{"line":105,"column":49}},"56":{"start":{"line":106,"column":16},"end":{"line":106,"column":92}},"57":{"start":{"line":108,"column":16},"end":{"line":108,"column":46}},"58":{"start":{"line":109,"column":16},"end":{"line":109,"column":34}},"59":{"start":{"line":110,"column":16},"end":{"line":110,"column":101}},"60":{"start":{"line":113,"column":14},"end":{"line":113,"column":92}},"61":{"start":{"line":115,"column":14},"end":{"line":119,"column":15}},"62":{"start":{"line":116,"column":16},"end":{"line":116,"column":43}},"63":{"start":{"line":118,"column":16},"end":{"line":118,"column":50}},"64":{"start":{"line":125,"column":10},"end":{"line":125,"column":53}},"65":{"start":{"line":126,"column":10},"end":{"line":133,"column":11}},"66":{"start":{"line":129,"column":12},"end":{"line":130,"column":85}},"67":{"start":{"line":132,"column":12},"end":{"line":132,"column":77}},"68":{"start":{"line":136,"column":10},"end":{"line":139,"column":45}},"69":{"start":{"line":140,"column":10},"end":{"line":145,"column":11}},"70":{"start":{"line":141,"column":12},"end":{"line":141,"column":21}},"71":{"start":{"line":142,"column":12},"end":{"line":142,"column":21}},"72":{"start":{"line":144,"column":12},"end":{"line":144,"column":93}},"73":{"start":{"line":146,"column":10},"end":{"line":146,"column":35}},"74":{"start":{"line":147,"column":10},"end":{"line":147,"column":24}},"75":{"start":{"line":151,"column":10},"end":{"line":151,"column":34}},"76":{"start":{"line":152,"column":10},"end":{"line":156,"column":11}},"77":{"start":{"line":153,"column":12},"end":{"line":153,"column":24}},"78":{"start":{"line":155,"column":12},"end":{"line":155,"column":34}},"79":{"start":{"line":159,"column":10},"end":{"line":159,"column":30}},"80":{"start":{"line":162,"column":10},"end":{"line":162,"column":23}},"81":{"start":{"line":166,"column":4},"end":{"line":166,"column":30}},"82":{"start":{"line":168,"column":4},"end":{"line":168,"column":34}},"83":{"start":{"line":169,"column":4},"end":{"line":169,"column":39}},"84":{"start":{"line":170,"column":4},"end":{"line":172,"column":6}},"85":{"start":{"line":171,"column":6},"end":{"line":171,"column":50}},"86":{"start":{"line":174,"column":4},"end":{"line":174,"column":33}},"87":{"start":{"line":175,"column":4},"end":{"line":177,"column":6}},"88":{"start":{"line":176,"column":6},"end":{"line":176,"column":55}},"89":{"start":{"line":179,"column":4},"end":{"line":179,"column":30}},"90":{"start":{"line":180,"column":4},"end":{"line":197,"column":6}},"91":{"start":{"line":181,"column":6},"end":{"line":182,"column":36}},"92":{"start":{"line":184,"column":6},"end":{"line":194,"column":7}},"93":{"start":{"line":185,"column":8},"end":{"line":186,"column":36}},"94":{"start":{"line":189,"column":8},"end":{"line":193,"column":9}},"95":{"start":{"line":190,"column":10},"end":{"line":190,"column":48}},"96":{"start":{"line":191,"column":15},"end":{"line":193,"column":9}},"97":{"start":{"line":192,"column":10},"end":{"line":192,"column":30}},"98":{"start":{"line":196,"column":6},"end":{"line":196,"column":22}},"99":{"start":{"line":199,"column":4},"end":{"line":377,"column":6}},"100":{"start":{"line":202,"column":44},"end":{"line":202,"column":81}},"101":{"start":{"line":203,"column":44},"end":{"line":203,"column":81}},"102":{"start":{"line":204,"column":53},"end":{"line":204,"column":99}},"103":{"start":{"line":205,"column":44},"end":{"line":205,"column":81}},"104":{"start":{"line":207,"column":42},"end":{"line":207,"column":78}},"105":{"start":{"line":210,"column":8},"end":{"line":210,"column":21}},"106":{"start":{"line":212,"column":8},"end":{"line":212,"column":39}},"107":{"start":{"line":213,"column":8},"end":{"line":213,"column":88}},"108":{"start":{"line":214,"column":8},"end":{"line":214,"column":97}},"109":{"start":{"line":215,"column":8},"end":{"line":215,"column":97}},"110":{"start":{"line":217,"column":8},"end":{"line":217,"column":49}},"111":{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},"112":{"start":{"line":219,"column":10},"end":{"line":219,"column":21}},"113":{"start":{"line":221,"column":8},"end":{"line":221,"column":42}},"114":{"start":{"line":223,"column":8},"end":{"line":225,"column":9}},"115":{"start":{"line":224,"column":10},"end":{"line":224,"column":69}},"116":{"start":{"line":224,"column":46},"end":{"line":224,"column":65}},"117":{"start":{"line":226,"column":8},"end":{"line":235,"column":9}},"118":{"start":{"line":227,"column":10},"end":{"line":229,"column":119}},"119":{"start":{"line":232,"column":10},"end":{"line":234,"column":11}},"120":{"start":{"line":233,"column":12},"end":{"line":233,"column":58}},"121":{"start":{"line":237,"column":8},"end":{"line":238,"column":37}},"122":{"start":{"line":239,"column":8},"end":{"line":289,"column":9}},"123":{"start":{"line":240,"column":10},"end":{"line":241,"column":84}},"124":{"start":{"line":242,"column":10},"end":{"line":242,"column":32}},"125":{"start":{"line":244,"column":10},"end":{"line":288,"column":11}},"126":{"start":{"line":245,"column":12},"end":{"line":255,"column":13}},"127":{"start":{"line":246,"column":14},"end":{"line":246,"column":35}},"128":{"start":{"line":247,"column":14},"end":{"line":247,"column":38}},"129":{"start":{"line":248,"column":14},"end":{"line":248,"column":38}},"130":{"start":{"line":250,"column":14},"end":{"line":254,"column":15}},"131":{"start":{"line":251,"column":16},"end":{"line":251,"column":62}},"132":{"start":{"line":252,"column":16},"end":{"line":252,"column":49}},"133":{"start":{"line":253,"column":16},"end":{"line":253,"column":49}},"134":{"start":{"line":256,"column":12},"end":{"line":256,"column":115}},"135":{"start":{"line":256,"column":71},"end":{"line":256,"column":110}},"136":{"start":{"line":257,"column":12},"end":{"line":257,"column":40}},"137":{"start":{"line":259,"column":12},"end":{"line":263,"column":13}},"138":{"start":{"line":260,"column":14},"end":{"line":260,"column":38}},"139":{"start":{"line":262,"column":14},"end":{"line":262,"column":38}},"140":{"start":{"line":265,"column":12},"end":{"line":285,"column":13}},"141":{"start":{"line":267,"column":14},"end":{"line":284,"column":15}},"142":{"start":{"line":269,"column":16},"end":{"line":269,"column":67}},"143":{"start":{"line":272,"column":16},"end":{"line":272,"column":60}},"144":{"start":{"line":273,"column":16},"end":{"line":276,"column":29}},"145":{"start":{"line":277,"column":16},"end":{"line":277,"column":46}},"146":{"start":{"line":278,"column":16},"end":{"line":278,"column":79}},"147":{"start":{"line":279,"column":16},"end":{"line":281,"column":17}},"148":{"start":{"line":280,"column":18},"end":{"line":280,"column":41}},"149":{"start":{"line":283,"column":16},"end":{"line":283,"column":34}},"150":{"start":{"line":283,"column":36},"end":{"line":283,"column":54}},"151":{"start":{"line":283,"column":55},"end":{"line":283,"column":69}},"152":{"start":{"line":286,"column":12},"end":{"line":286,"column":36}},"153":{"start":{"line":287,"column":12},"end":{"line":287,"column":36}},"154":{"start":{"line":291,"column":8},"end":{"line":291,"column":37}},"155":{"start":{"line":295,"column":8},"end":{"line":295,"column":42}},"156":{"start":{"line":296,"column":8},"end":{"line":296,"column":22}},"157":{"start":{"line":297,"column":8},"end":{"line":298,"column":29}},"158":{"start":{"line":300,"column":8},"end":{"line":324,"column":9}},"159":{"start":{"line":301,"column":10},"end":{"line":323,"column":11}},"160":{"start":{"line":302,"column":12},"end":{"line":302,"column":75}},"161":{"start":{"line":303,"column":12},"end":{"line":309,"column":15}},"162":{"start":{"line":310,"column":17},"end":{"line":323,"column":11}},"163":{"start":{"line":311,"column":12},"end":{"line":311,"column":56}},"164":{"start":{"line":312,"column":17},"end":{"line":323,"column":11}},"165":{"start":{"line":313,"column":12},"end":{"line":313,"column":56}},"166":{"start":{"line":314,"column":17},"end":{"line":323,"column":11}},"167":{"start":{"line":315,"column":12},"end":{"line":315,"column":56}},"168":{"start":{"line":316,"column":12},"end":{"line":316,"column":56}},"169":{"start":{"line":317,"column":17},"end":{"line":323,"column":11}},"170":{"start":{"line":318,"column":12},"end":{"line":322,"column":13}},"171":{"start":{"line":319,"column":14},"end":{"line":319,"column":30}},"172":{"start":{"line":320,"column":19},"end":{"line":322,"column":13}},"173":{"start":{"line":321,"column":14},"end":{"line":321,"column":30}},"174":{"start":{"line":326,"column":8},"end":{"line":326,"column":37}},"175":{"start":{"line":327,"column":8},"end":{"line":335,"column":9}},"176":{"start":{"line":328,"column":10},"end":{"line":328,"column":26}},"177":{"start":{"line":329,"column":10},"end":{"line":333,"column":11}},"178":{"start":{"line":330,"column":12},"end":{"line":332,"column":13}},"179":{"start":{"line":331,"column":14},"end":{"line":331,"column":27}},"180":{"start":{"line":334,"column":10},"end":{"line":334,"column":88}},"181":{"start":{"line":337,"column":8},"end":{"line":343,"column":9}},"182":{"start":{"line":338,"column":10},"end":{"line":340,"column":11}},"183":{"start":{"line":339,"column":12},"end":{"line":339,"column":22}},"184":{"start":{"line":341,"column":15},"end":{"line":343,"column":9}},"185":{"start":{"line":342,"column":10},"end":{"line":342,"column":23}},"186":{"start":{"line":344,"column":8},"end":{"line":344,"column":30}},"187":{"start":{"line":348,"column":8},"end":{"line":348,"column":21}},"188":{"start":{"line":349,"column":8},"end":{"line":364,"column":9}},"189":{"start":{"line":350,"column":10},"end":{"line":350,"column":34}},"190":{"start":{"line":351,"column":10},"end":{"line":355,"column":11}},"191":{"start":{"line":352,"column":12},"end":{"line":352,"column":30}},"192":{"start":{"line":353,"column":17},"end":{"line":355,"column":11}},"193":{"start":{"line":354,"column":12},"end":{"line":354,"column":30}},"194":{"start":{"line":357,"column":10},"end":{"line":357,"column":45}},"195":{"start":{"line":359,"column":10},"end":{"line":363,"column":11}},"196":{"start":{"line":360,"column":12},"end":{"line":360,"column":31}},"197":{"start":{"line":361,"column":17},"end":{"line":363,"column":11}},"198":{"start":{"line":362,"column":12},"end":{"line":362,"column":31}},"199":{"start":{"line":365,"column":8},"end":{"line":365,"column":28}},"200":{"start":{"line":370,"column":8},"end":{"line":370,"column":29}},"201":{"start":{"line":371,"column":8},"end":{"line":374,"column":9}},"202":{"start":{"line":372,"column":10},"end":{"line":372,"column":30}},"203":{"start":{"line":373,"column":10},"end":{"line":373,"column":81}},"204":{"start":{"line":375,"column":8},"end":{"line":375,"column":19}},"205":{"start":{"line":380,"column":2},"end":{"line":388,"column":3}},"206":{"start":{"line":381,"column":6},"end":{"line":381,"column":30}},"207":{"start":{"line":383,"column":7},"end":{"line":388,"column":3}},"208":{"start":{"line":384,"column":4},"end":{"line":384,"column":46}},"209":{"start":{"line":384,"column":28},"end":{"line":384,"column":42}},"210":{"start":{"line":386,"column":7},"end":{"line":388,"column":3}},"211":{"start":{"line":387,"column":4},"end":{"line":387,"column":27}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":6}},{"start":{"line":21,"column":6},"end":{"line":21,"column":6}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"3":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":10},"end":{"line":60,"column":10}},{"start":{"line":60,"column":10},"end":{"line":60,"column":10}}]},"4":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":10},"end":{"line":63,"column":10}},{"start":{"line":63,"column":10},"end":{"line":63,"column":10}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":10},"end":{"line":66,"column":10}},{"start":{"line":66,"column":10},"end":{"line":66,"column":10}}]},"6":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":10},"end":{"line":79,"column":10}},{"start":{"line":79,"column":10},"end":{"line":79,"column":10}}]},"7":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":14},"end":{"line":79,"column":44}},{"start":{"line":79,"column":48},"end":{"line":79,"column":66}}]},"8":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":37},"end":{"line":88,"column":54}},{"start":{"line":88,"column":57},"end":{"line":88,"column":58}}]},"9":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":14},"end":{"line":89,"column":14}},{"start":{"line":89,"column":14},"end":{"line":89,"column":14}}]},"10":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":27},"end":{"line":94,"column":34}},{"start":{"line":94,"column":38},"end":{"line":94,"column":63}}]},"11":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":30},"end":{"line":95,"column":40}},{"start":{"line":95,"column":44},"end":{"line":95,"column":55}},{"start":{"line":95,"column":59},"end":{"line":95,"column":74}}]},"12":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":14},"end":{"line":96,"column":14}},{"start":{"line":96,"column":14},"end":{"line":96,"column":14}}]},"13":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":18},"end":{"line":96,"column":25}},{"start":{"line":96,"column":29},"end":{"line":96,"column":39}}]},"14":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":14},"end":{"line":104,"column":14}},{"start":{"line":104,"column":14},"end":{"line":104,"column":14}}]},"15":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":18},"end":{"line":104,"column":25}},{"start":{"line":104,"column":30},"end":{"line":104,"column":39}},{"start":{"line":104,"column":43},"end":{"line":104,"column":77}}]},"16":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":14},"end":{"line":115,"column":14}},{"start":{"line":115,"column":14},"end":{"line":115,"column":14}}]},"17":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":18},"end":{"line":115,"column":45}},{"start":{"line":115,"column":49},"end":{"line":115,"column":67}}]},"18":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":10},"end":{"line":126,"column":10}},{"start":{"line":126,"column":10},"end":{"line":126,"column":10}}]},"19":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":14},"end":{"line":126,"column":18}},{"start":{"line":126,"column":22},"end":{"line":126,"column":42}},{"start":{"line":126,"column":46},"end":{"line":126,"column":70}}]},"20":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":17},"end":{"line":140,"column":34}},{"start":{"line":140,"column":38},"end":{"line":140,"column":55}},{"start":{"line":140,"column":59},"end":{"line":140,"column":112}}]},"21":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":10},"end":{"line":152,"column":10}},{"start":{"line":152,"column":10},"end":{"line":152,"column":10}}]},"22":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":14},"end":{"line":152,"column":35}},{"start":{"line":152,"column":39},"end":{"line":152,"column":63}},{"start":{"line":152,"column":67},"end":{"line":152,"column":92}}]},"23":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":8},"end":{"line":189,"column":8}},{"start":{"line":189,"column":8},"end":{"line":189,"column":8}}]},"24":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":12},"end":{"line":189,"column":24}},{"start":{"line":189,"column":28},"end":{"line":189,"column":36}},{"start":{"line":189,"column":40},"end":{"line":189,"column":78}}]},"25":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":15},"end":{"line":191,"column":15}},{"start":{"line":191,"column":15},"end":{"line":191,"column":15}}]},"26":{"line":214,"type":"cond-expr","locations":[{"start":{"line":214,"column":73},"end":{"line":214,"column":75}},{"start":{"line":214,"column":78},"end":{"line":214,"column":94}}]},"27":{"line":215,"type":"cond-expr","locations":[{"start":{"line":215,"column":73},"end":{"line":215,"column":75}},{"start":{"line":215,"column":78},"end":{"line":215,"column":94}}]},"28":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":8}},{"start":{"line":218,"column":8},"end":{"line":218,"column":8}}]},"29":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":29},"end":{"line":229,"column":48}},{"start":{"line":229,"column":53},"end":{"line":229,"column":81}},{"start":{"line":229,"column":85},"end":{"line":229,"column":117}}]},"30":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":10},"end":{"line":232,"column":10}},{"start":{"line":232,"column":10},"end":{"line":232,"column":10}}]},"31":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":14},"end":{"line":232,"column":40}},{"start":{"line":232,"column":45},"end":{"line":232,"column":51}},{"start":{"line":232,"column":55},"end":{"line":232,"column":67}}]},"32":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":22},"end":{"line":241,"column":35}},{"start":{"line":241,"column":39},"end":{"line":241,"column":83}}]},"33":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":10},"end":{"line":244,"column":10}},{"start":{"line":244,"column":10},"end":{"line":244,"column":10}}]},"34":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":14},"end":{"line":244,"column":27}},{"start":{"line":244,"column":31},"end":{"line":244,"column":46}}]},"35":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":12},"end":{"line":245,"column":12}},{"start":{"line":245,"column":12},"end":{"line":245,"column":12}}]},"36":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":14},"end":{"line":250,"column":14}},{"start":{"line":250,"column":14},"end":{"line":250,"column":14}}]},"37":{"line":256,"type":"cond-expr","locations":[{"start":{"line":256,"column":93},"end":{"line":256,"column":96}},{"start":{"line":256,"column":97},"end":{"line":256,"column":100}}]},"38":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":12},"end":{"line":259,"column":12}},{"start":{"line":259,"column":12},"end":{"line":259,"column":12}}]},"39":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":12},"end":{"line":265,"column":12}},{"start":{"line":265,"column":12},"end":{"line":265,"column":12}}]},"40":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":14},"end":{"line":267,"column":14}},{"start":{"line":267,"column":14},"end":{"line":267,"column":14}}]},"41":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":18},"end":{"line":267,"column":35}},{"start":{"line":267,"column":39},"end":{"line":267,"column":56}}]},"42":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":16},"end":{"line":279,"column":16}},{"start":{"line":279,"column":16},"end":{"line":279,"column":16}}]},"43":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":10},"end":{"line":301,"column":10}},{"start":{"line":301,"column":10},"end":{"line":301,"column":10}}]},"44":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":17},"end":{"line":310,"column":17}},{"start":{"line":310,"column":17},"end":{"line":310,"column":17}}]},"45":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":17},"end":{"line":312,"column":17}},{"start":{"line":312,"column":17},"end":{"line":312,"column":17}}]},"46":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":17},"end":{"line":314,"column":17}},{"start":{"line":314,"column":17},"end":{"line":314,"column":17}}]},"47":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":17},"end":{"line":317,"column":17}},{"start":{"line":317,"column":17},"end":{"line":317,"column":17}}]},"48":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":12},"end":{"line":318,"column":12}},{"start":{"line":318,"column":12},"end":{"line":318,"column":12}}]},"49":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":19},"end":{"line":320,"column":19}},{"start":{"line":320,"column":19},"end":{"line":320,"column":19}}]},"50":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":12},"end":{"line":330,"column":12}},{"start":{"line":330,"column":12},"end":{"line":330,"column":12}}]},"51":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":8},"end":{"line":337,"column":8}},{"start":{"line":337,"column":8},"end":{"line":337,"column":8}}]},"52":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":15},"end":{"line":341,"column":15}},{"start":{"line":341,"column":15},"end":{"line":341,"column":15}}]},"53":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":10},"end":{"line":351,"column":10}},{"start":{"line":351,"column":10},"end":{"line":351,"column":10}}]},"54":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":17},"end":{"line":353,"column":17}},{"start":{"line":353,"column":17},"end":{"line":353,"column":17}}]},"55":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":10},"end":{"line":359,"column":10}},{"start":{"line":359,"column":10},"end":{"line":359,"column":10}}]},"56":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":17},"end":{"line":361,"column":17}},{"start":{"line":361,"column":17},"end":{"line":361,"column":17}}]},"57":{"line":373,"type":"cond-expr","locations":[{"start":{"line":373,"column":36},"end":{"line":373,"column":37}},{"start":{"line":373,"column":40},"end":{"line":373,"column":63}}]},"58":{"line":373,"type":"cond-expr","locations":[{"start":{"line":373,"column":57},"end":{"line":373,"column":59}},{"start":{"line":373,"column":62},"end":{"line":373,"column":63}}]},"59":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":2},"end":{"line":380,"column":2}},{"start":{"line":380,"column":2},"end":{"line":380,"column":2}}]},"60":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":7},"end":{"line":383,"column":7}},{"start":{"line":383,"column":7},"end":{"line":383,"column":7}}]},"61":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":7},"end":{"line":386,"column":7}},{"start":{"line":386,"column":7},"end":{"line":386,"column":7}}]}},"code":["/* See LICENSE file for terms of use */","","/*"," * Text diff implementation."," *"," * This library supports the following APIS:"," * JsDiff.diffChars: Character by character diff"," * JsDiff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace"," * JsDiff.diffLines: Line based diff"," *"," * JsDiff.diffCss: Diff targeted at CSS content"," *"," * These methods are based on the implementation proposed in"," * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986)."," * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927"," */","(function(global, undefined) {","  var JsDiff = (function() {","    /*jshint maxparams: 5*/","    function map(arr, mapper, that) {","      if (Array.prototype.map) {","        return Array.prototype.map.call(arr, mapper, that);","      }","","      var other = new Array(arr.length);","","      for (var i = 0, n = arr.length; i < n; i++) {","        other[i] = mapper.call(that, arr[i], i, arr);","      }","      return other;","    }","    function clonePath(path) {","      return { newPos: path.newPos, components: path.components.slice(0) };","    }","    function removeEmpty(array) {","      var ret = [];","      for (var i = 0; i < array.length; i++) {","        if (array[i]) {","          ret.push(array[i]);","        }","      }","      return ret;","    }","    function escapeHTML(s) {","      var n = s;","      n = n.replace(/&/g, '&amp;');","      n = n.replace(/</g, '&lt;');","      n = n.replace(/>/g, '&gt;');","      n = n.replace(/\"/g, '&quot;');","","      return n;","    }","","    var Diff = function(ignoreWhitespace) {","      this.ignoreWhitespace = ignoreWhitespace;","    };","    Diff.prototype = {","        diff: function(oldString, newString) {","          // Handle the identity case (this is due to unrolling editLength == 0","          if (newString === oldString) {","            return [{ value: newString }];","          }","          if (!newString) {","            return [{ value: oldString, removed: true }];","          }","          if (!oldString) {","            return [{ value: newString, added: true }];","          }","","          newString = this.tokenize(newString);","          oldString = this.tokenize(oldString);","","          var newLen = newString.length, oldLen = oldString.length;","          var maxEditLength = newLen + oldLen;","          var bestPath = [{ newPos: -1, components: [] }];","","          // Seed editLength = 0","          var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);","          if (bestPath[0].newPos+1 >= newLen && oldPos+1 >= oldLen) {","            return bestPath[0].components;","          }","","          for (var editLength = 1; editLength <= maxEditLength; editLength++) {","            for (var diagonalPath = -1*editLength; diagonalPath <= editLength; diagonalPath+=2) {","              var basePath;","              var addPath = bestPath[diagonalPath-1],","                  removePath = bestPath[diagonalPath+1];","              oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;","              if (addPath) {","                // No one else is going to attempt to use this value, clear it","                bestPath[diagonalPath-1] = undefined;","              }","","              var canAdd = addPath && addPath.newPos+1 < newLen;","              var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;","              if (!canAdd && !canRemove) {","                bestPath[diagonalPath] = undefined;","                continue;","              }","","              // Select the diagonal that we want to branch from. We select the prior","              // path whose position in the new string is the farthest from the origin","              // and does not pass the bounds of the diff graph","              if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {","                basePath = clonePath(removePath);","                this.pushComponent(basePath.components, oldString[oldPos], undefined, true);","              } else {","                basePath = clonePath(addPath);","                basePath.newPos++;","                this.pushComponent(basePath.components, newString[basePath.newPos], true, undefined);","              }","","              var oldPos = this.extractCommon(basePath, newString, oldString, diagonalPath);","","              if (basePath.newPos+1 >= newLen && oldPos+1 >= oldLen) {","                return basePath.components;","              } else {","                bestPath[diagonalPath] = basePath;","              }","            }","          }","        },","","        pushComponent: function(components, value, added, removed) {","          var last = components[components.length-1];","          if (last && last.added === added && last.removed === removed) {","            // We need to clone here as the component clone operation is just","            // as shallow array clone","            components[components.length-1] =","              {value: this.join(last.value, value), added: added, removed: removed };","          } else {","            components.push({value: value, added: added, removed: removed });","          }","        },","        extractCommon: function(basePath, newString, oldString, diagonalPath) {","          var newLen = newString.length,","              oldLen = oldString.length,","              newPos = basePath.newPos,","              oldPos = newPos - diagonalPath;","          while (newPos+1 < newLen && oldPos+1 < oldLen && this.equals(newString[newPos+1], oldString[oldPos+1])) {","            newPos++;","            oldPos++;","","            this.pushComponent(basePath.components, newString[newPos], undefined, undefined);","          }","          basePath.newPos = newPos;","          return oldPos;","        },","","        equals: function(left, right) {","          var reWhitespace = /\\S/;","          if (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right)) {","            return true;","          } else {","            return left === right;","          }","        },","        join: function(left, right) {","          return left + right;","        },","        tokenize: function(value) {","          return value;","        }","    };","","    var CharDiff = new Diff();","","    var WordDiff = new Diff(true);","    var WordWithSpaceDiff = new Diff();","    WordDiff.tokenize = WordWithSpaceDiff.tokenize = function(value) {","      return removeEmpty(value.split(/(\\s+|\\b)/));","    };","","    var CssDiff = new Diff(true);","    CssDiff.tokenize = function(value) {","      return removeEmpty(value.split(/([{}:;,]|\\s+)/));","    };","","    var LineDiff = new Diff();","    LineDiff.tokenize = function(value) {","      var retLines = [],","          lines = value.split(/^/m);","","      for(var i = 0; i < lines.length; i++) {","        var line = lines[i],","            lastLine = lines[i - 1];","","        // Merge lines that may contain windows new lines","        if (line == '\\n' && lastLine && lastLine[lastLine.length - 1] === '\\r') {","          retLines[retLines.length - 1] += '\\n';","        } else if (line) {","          retLines.push(line);","        }","      }","","      return retLines;","    };","","    return {","      Diff: Diff,","","      diffChars: function(oldStr, newStr) { return CharDiff.diff(oldStr, newStr); },","      diffWords: function(oldStr, newStr) { return WordDiff.diff(oldStr, newStr); },","      diffWordsWithSpace: function(oldStr, newStr) { return WordWithSpaceDiff.diff(oldStr, newStr); },","      diffLines: function(oldStr, newStr) { return LineDiff.diff(oldStr, newStr); },","","      diffCss: function(oldStr, newStr) { return CssDiff.diff(oldStr, newStr); },","","      createPatch: function(fileName, oldStr, newStr, oldHeader, newHeader) {","        var ret = [];","","        ret.push('Index: ' + fileName);","        ret.push('===================================================================');","        ret.push('--- ' + fileName + (typeof oldHeader === 'undefined' ? '' : '\\t' + oldHeader));","        ret.push('+++ ' + fileName + (typeof newHeader === 'undefined' ? '' : '\\t' + newHeader));","","        var diff = LineDiff.diff(oldStr, newStr);","        if (!diff[diff.length-1].value) {","          diff.pop();   // Remove trailing newline add","        }","        diff.push({value: '', lines: []});   // Append an empty value to make cleanup easier","","        function contextLines(lines) {","          return map(lines, function(entry) { return ' ' + entry; });","        }","        function eofNL(curRange, i, current) {","          var last = diff[diff.length-2],","              isLast = i === diff.length-2,","              isLastOfType = i === diff.length-3 && (current.added !== last.added || current.removed !== last.removed);","","          // Figure out if this is the last line for the given file and missing NL","          if (!/\\n$/.test(current.value) && (isLast || isLastOfType)) {","            curRange.push('\\\\ No newline at end of file');","          }","        }","","        var oldRangeStart = 0, newRangeStart = 0, curRange = [],","            oldLine = 1, newLine = 1;","        for (var i = 0; i < diff.length; i++) {","          var current = diff[i],","              lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');","          current.lines = lines;","","          if (current.added || current.removed) {","            if (!oldRangeStart) {","              var prev = diff[i-1];","              oldRangeStart = oldLine;","              newRangeStart = newLine;","","              if (prev) {","                curRange = contextLines(prev.lines.slice(-4));","                oldRangeStart -= curRange.length;","                newRangeStart -= curRange.length;","              }","            }","            curRange.push.apply(curRange, map(lines, function(entry) { return (current.added?'+':'-') + entry; }));","            eofNL(curRange, i, current);","","            if (current.added) {","              newLine += lines.length;","            } else {","              oldLine += lines.length;","            }","          } else {","            if (oldRangeStart) {","              // Close out any changes that have been output (or join overlapping)","              if (lines.length <= 8 && i < diff.length-2) {","                // Overlapping","                curRange.push.apply(curRange, contextLines(lines));","              } else {","                // end the range and output","                var contextSize = Math.min(lines.length, 4);","                ret.push(","                    '@@ -' + oldRangeStart + ',' + (oldLine-oldRangeStart+contextSize)","                    + ' +' + newRangeStart + ',' + (newLine-newRangeStart+contextSize)","                    + ' @@');","                ret.push.apply(ret, curRange);","                ret.push.apply(ret, contextLines(lines.slice(0, contextSize)));","                if (lines.length <= 4) {","                  eofNL(ret, i, current);","                }","","                oldRangeStart = 0;  newRangeStart = 0; curRange = [];","              }","            }","            oldLine += lines.length;","            newLine += lines.length;","          }","        }","","        return ret.join('\\n') + '\\n';","      },","","      applyPatch: function(oldStr, uniDiff) {","        var diffstr = uniDiff.split('\\n');","        var diff = [];","        var remEOFNL = false,","            addEOFNL = false;","","        for (var i = (diffstr[0][0]==='I'?4:0); i < diffstr.length; i++) {","          if(diffstr[i][0] === '@') {","            var meh = diffstr[i].split(/@@ -(\\d+),(\\d+) \\+(\\d+),(\\d+) @@/);","            diff.unshift({","              start:meh[3],","              oldlength:meh[2],","              oldlines:[],","              newlength:meh[4],","              newlines:[]","            });","          } else if(diffstr[i][0] === '+') {","            diff[0].newlines.push(diffstr[i].substr(1));","          } else if(diffstr[i][0] === '-') {","            diff[0].oldlines.push(diffstr[i].substr(1));","          } else if(diffstr[i][0] === ' ') {","            diff[0].newlines.push(diffstr[i].substr(1));","            diff[0].oldlines.push(diffstr[i].substr(1));","          } else if(diffstr[i][0] === '\\\\') {","            if (diffstr[i-1][0] === '+') {","              remEOFNL = true;","            } else if(diffstr[i-1][0] === '-') {","              addEOFNL = true;","            }","          }","        }","","        var str = oldStr.split('\\n');","        for (var i = diff.length - 1; i >= 0; i--) {","          var d = diff[i];","          for (var j = 0; j < d.oldlength; j++) {","            if(str[d.start-1+j] !== d.oldlines[j]) {","              return false;","            }","          }","          Array.prototype.splice.apply(str,[d.start-1,+d.oldlength].concat(d.newlines));","        }","","        if (remEOFNL) {","          while (!str[str.length-1]) {","            str.pop();","          }","        } else if (addEOFNL) {","          str.push('');","        }","        return str.join('\\n');","      },","","      convertChangesToXML: function(changes){","        var ret = [];","        for ( var i = 0; i < changes.length; i++) {","          var change = changes[i];","          if (change.added) {","            ret.push('<ins>');","          } else if (change.removed) {","            ret.push('<del>');","          }","","          ret.push(escapeHTML(change.value));","","          if (change.added) {","            ret.push('</ins>');","          } else if (change.removed) {","            ret.push('</del>');","          }","        }","        return ret.join('');","      },","","      // See: http://code.google.com/p/google-diff-match-patch/wiki/API","      convertChangesToDMP: function(changes){","        var ret = [], change;","        for ( var i = 0; i < changes.length; i++) {","          change = changes[i];","          ret.push([(change.added ? 1 : change.removed ? -1 : 0), change.value]);","        }","        return ret;","      }","    };","  })();","","  if (typeof module !== 'undefined') {","      module.exports = JsDiff;","  }","  else if (typeof define === 'function') {","    define([], function() { return JsDiff; });","  }","  else if (typeof global.JsDiff === 'undefined') {","    global.JsDiff = JsDiff;","  }","})(this);",""],"l":{"17":1,"18":1,"20":1,"21":0,"22":0,"25":0,"27":0,"28":0,"30":0,"32":1,"33":0,"35":1,"36":0,"37":0,"38":0,"39":0,"42":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"54":1,"55":5,"57":1,"60":0,"61":0,"63":0,"64":0,"66":0,"67":0,"70":0,"71":0,"73":0,"74":0,"75":0,"78":0,"79":0,"80":0,"83":0,"84":0,"85":0,"86":0,"88":0,"89":0,"91":0,"94":0,"95":0,"96":0,"97":0,"98":0,"104":0,"105":0,"106":0,"108":0,"109":0,"110":0,"113":0,"115":0,"116":0,"118":0,"125":0,"126":0,"129":0,"132":0,"136":0,"140":0,"141":0,"142":0,"144":0,"146":0,"147":0,"151":0,"152":0,"153":0,"155":0,"159":0,"162":0,"166":1,"168":1,"169":1,"170":1,"171":0,"174":1,"175":1,"176":0,"179":1,"180":1,"181":0,"184":0,"185":0,"189":0,"190":0,"191":0,"192":0,"196":0,"199":1,"202":0,"203":0,"204":0,"205":0,"207":0,"210":0,"212":0,"213":0,"214":0,"215":0,"217":0,"218":0,"219":0,"221":0,"223":1,"224":0,"226":1,"227":0,"232":0,"233":0,"237":0,"239":0,"240":0,"242":0,"244":0,"245":0,"246":0,"247":0,"248":0,"250":0,"251":0,"252":0,"253":0,"256":0,"257":0,"259":0,"260":0,"262":0,"265":0,"267":0,"269":0,"272":0,"273":0,"277":0,"278":0,"279":0,"280":0,"283":0,"286":0,"287":0,"291":0,"295":0,"296":0,"297":0,"300":0,"301":0,"302":0,"303":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"334":0,"337":0,"338":0,"339":0,"341":0,"342":0,"344":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"357":0,"359":0,"360":0,"361":0,"362":0,"365":0,"370":0,"371":0,"372":0,"373":0,"375":0,"380":1,"381":1,"383":0,"384":0,"386":0,"387":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/aspect.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/aspect.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1,"65":0,"66":1,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":1,"80":0,"81":1,"82":1,"83":0,"84":1},"b":{"1":[1,0],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":27},"end":{"line":8,"column":55}}},"3":{"name":"advise","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":64}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":20},"end":{"line":34,"column":32}}},"5":{"name":"getDispatcher","line":56,"loc":{"start":{"line":56,"column":4},"end":{"line":56,"column":47}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":46},"end":{"line":60,"column":58}}},"7":{"name":"(anonymous_7)","line":87,"loc":{"start":{"line":87,"column":28},"end":{"line":87,"column":52}}},"8":{"name":"noop","line":100,"loc":{"start":{"line":100,"column":4},"end":{"line":100,"column":20}}},"9":{"name":"after","line":101,"loc":{"start":{"line":101,"column":4},"end":{"line":101,"column":47}}},"10":{"name":"around","line":105,"loc":{"start":{"line":105,"column":4},"end":{"line":105,"column":48}}},"11":{"name":"(anonymous_11)","line":108,"loc":{"start":{"line":108,"column":29},"end":{"line":108,"column":41}}},"12":{"name":"(anonymous_12)","line":112,"loc":{"start":{"line":112,"column":20},"end":{"line":112,"column":44}}},"13":{"name":"(anonymous_13)","line":120,"loc":{"start":{"line":120,"column":20},"end":{"line":120,"column":32}}},"14":{"name":"before","line":127,"loc":{"start":{"line":127,"column":4},"end":{"line":127,"column":48}}},"15":{"name":"on","line":131,"loc":{"start":{"line":131,"column":4},"end":{"line":131,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":135,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":19}},"9":{"start":{"line":10,"column":4},"end":{"line":55,"column":5}},"10":{"start":{"line":11,"column":8},"end":{"line":11,"column":40}},"11":{"start":{"line":12,"column":8},"end":{"line":16,"column":10}},"12":{"start":{"line":17,"column":8},"end":{"line":31,"column":9}},"13":{"start":{"line":18,"column":12},"end":{"line":27,"column":13}},"14":{"start":{"line":19,"column":16},"end":{"line":19,"column":71}},"15":{"start":{"line":20,"column":16},"end":{"line":20,"column":40}},"16":{"start":{"line":21,"column":16},"end":{"line":21,"column":44}},"17":{"start":{"line":24,"column":16},"end":{"line":24,"column":44}},"18":{"start":{"line":25,"column":16},"end":{"line":25,"column":40}},"19":{"start":{"line":26,"column":16},"end":{"line":26,"column":44}},"20":{"start":{"line":30,"column":12},"end":{"line":30,"column":39}},"21":{"start":{"line":32,"column":8},"end":{"line":32,"column":33}},"22":{"start":{"line":33,"column":8},"end":{"line":54,"column":10}},"23":{"start":{"line":35,"column":16},"end":{"line":35,"column":35}},"24":{"start":{"line":36,"column":16},"end":{"line":36,"column":48}},"25":{"start":{"line":37,"column":16},"end":{"line":37,"column":40}},"26":{"start":{"line":38,"column":16},"end":{"line":51,"column":17}},"27":{"start":{"line":39,"column":20},"end":{"line":39,"column":44}},"28":{"start":{"line":42,"column":20},"end":{"line":47,"column":21}},"29":{"start":{"line":43,"column":24},"end":{"line":43,"column":45}},"30":{"start":{"line":46,"column":24},"end":{"line":46,"column":48}},"31":{"start":{"line":48,"column":20},"end":{"line":50,"column":21}},"32":{"start":{"line":49,"column":24},"end":{"line":49,"column":49}},"33":{"start":{"line":52,"column":16},"end":{"line":52,"column":44}},"34":{"start":{"line":56,"column":4},"end":{"line":99,"column":5}},"35":{"start":{"line":57,"column":8},"end":{"line":57,"column":42}},"36":{"start":{"line":58,"column":8},"end":{"line":58,"column":23}},"37":{"start":{"line":59,"column":8},"end":{"line":96,"column":9}},"38":{"start":{"line":60,"column":12},"end":{"line":84,"column":14}},"39":{"start":{"line":61,"column":16},"end":{"line":61,"column":41}},"40":{"start":{"line":62,"column":16},"end":{"line":62,"column":37}},"41":{"start":{"line":63,"column":16},"end":{"line":63,"column":28}},"42":{"start":{"line":64,"column":16},"end":{"line":64,"column":47}},"43":{"start":{"line":65,"column":16},"end":{"line":68,"column":17}},"44":{"start":{"line":66,"column":20},"end":{"line":66,"column":67}},"45":{"start":{"line":67,"column":20},"end":{"line":67,"column":41}},"46":{"start":{"line":69,"column":16},"end":{"line":71,"column":17}},"47":{"start":{"line":70,"column":20},"end":{"line":70,"column":67}},"48":{"start":{"line":72,"column":16},"end":{"line":72,"column":45}},"49":{"start":{"line":73,"column":16},"end":{"line":82,"column":17}},"50":{"start":{"line":74,"column":20},"end":{"line":80,"column":21}},"51":{"start":{"line":75,"column":24},"end":{"line":75,"column":72}},"52":{"start":{"line":76,"column":24},"end":{"line":76,"column":82}},"53":{"start":{"line":79,"column":24},"end":{"line":79,"column":73}},"54":{"start":{"line":81,"column":20},"end":{"line":81,"column":39}},"55":{"start":{"line":83,"column":16},"end":{"line":83,"column":31}},"56":{"start":{"line":85,"column":12},"end":{"line":91,"column":13}},"57":{"start":{"line":86,"column":16},"end":{"line":90,"column":18}},"58":{"start":{"line":88,"column":24},"end":{"line":88,"column":60}},"59":{"start":{"line":92,"column":12},"end":{"line":92,"column":39}},"60":{"start":{"line":95,"column":12},"end":{"line":95,"column":34}},"61":{"start":{"line":97,"column":8},"end":{"line":97,"column":22}},"62":{"start":{"line":98,"column":8},"end":{"line":98,"column":26}},"63":{"start":{"line":100,"column":4},"end":{"line":100,"column":23}},"64":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"65":{"start":{"line":102,"column":8},"end":{"line":102,"column":74}},"66":{"start":{"line":104,"column":4},"end":{"line":104,"column":26}},"67":{"start":{"line":105,"column":4},"end":{"line":125,"column":5}},"68":{"start":{"line":106,"column":8},"end":{"line":106,"column":59}},"69":{"start":{"line":107,"column":8},"end":{"line":107,"column":41}},"70":{"start":{"line":108,"column":8},"end":{"line":110,"column":11}},"71":{"start":{"line":109,"column":12},"end":{"line":109,"column":52}},"72":{"start":{"line":111,"column":8},"end":{"line":117,"column":10}},"73":{"start":{"line":113,"column":16},"end":{"line":115,"column":50}},"74":{"start":{"line":118,"column":8},"end":{"line":118,"column":22}},"75":{"start":{"line":119,"column":8},"end":{"line":124,"column":10}},"76":{"start":{"line":121,"column":16},"end":{"line":121,"column":35}},"77":{"start":{"line":122,"column":16},"end":{"line":122,"column":44}},"78":{"start":{"line":126,"column":4},"end":{"line":126,"column":28}},"79":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"80":{"start":{"line":128,"column":8},"end":{"line":128,"column":75}},"81":{"start":{"line":130,"column":4},"end":{"line":130,"column":28}},"82":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"83":{"start":{"line":132,"column":8},"end":{"line":132,"column":80}},"84":{"start":{"line":134,"column":4},"end":{"line":134,"column":20}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":8}},{"start":{"line":17,"column":8},"end":{"line":17,"column":8}}]},"7":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":12}},{"start":{"line":18,"column":12},"end":{"line":18,"column":12}}]},"8":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":23},"end":{"line":19,"column":36}},{"start":{"line":19,"column":41},"end":{"line":19,"column":65}}]},"9":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":16},"end":{"line":38,"column":16}},{"start":{"line":38,"column":16},"end":{"line":38,"column":16}}]},"10":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":20},"end":{"line":38,"column":29}},{"start":{"line":38,"column":33},"end":{"line":38,"column":38}}]},"11":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":20},"end":{"line":42,"column":20}},{"start":{"line":42,"column":20},"end":{"line":42,"column":20}}]},"12":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":20},"end":{"line":48,"column":20}},{"start":{"line":48,"column":20},"end":{"line":48,"column":20}}]},"13":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":8}},{"start":{"line":59,"column":8},"end":{"line":59,"column":8}}]},"14":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":21}},{"start":{"line":59,"column":25},"end":{"line":59,"column":51}}]},"15":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":27},"end":{"line":66,"column":58}},{"start":{"line":66,"column":62},"end":{"line":66,"column":66}}]},"16":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":16},"end":{"line":69,"column":16}},{"start":{"line":69,"column":16},"end":{"line":69,"column":16}}]},"17":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":23},"end":{"line":73,"column":28}},{"start":{"line":73,"column":32},"end":{"line":73,"column":54}}]},"18":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":20},"end":{"line":74,"column":20}},{"start":{"line":74,"column":20},"end":{"line":74,"column":20}}]},"19":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":61},"end":{"line":76,"column":68}},{"start":{"line":76,"column":71},"end":{"line":76,"column":81}}]},"20":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":85,"column":12}},{"start":{"line":85,"column":12},"end":{"line":85,"column":12}}]},"21":{"line":113,"type":"cond-expr","locations":[{"start":{"line":114,"column":20},"end":{"line":114,"column":47}},{"start":{"line":115,"column":20},"end":{"line":115,"column":49}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\"], function (require, exports) {","    var nextId = 0;","    function advise(dispatcher, type, advice, receiveArguments) {","        var previous = dispatcher[type];","        var advised = {","            id: nextId++,","            advice: advice,","            receiveArguments: receiveArguments","        };","        if (previous) {","            if (type === 'after') {","                while (previous.next && (previous = previous.next)) { }","                previous.next = advised;","                advised.previous = previous;","            }","            else {","                dispatcher.before = advised;","                advised.next = previous;","                previous.previous = advised;","            }","        }","        else {","            dispatcher[type] = advised;","        }","        advice = previous = null;","        return {","            remove: function () {","                this.remove = noop;","                var previous = advised.previous;","                var next = advised.next;","                if (!previous && !next) {","                    dispatcher[type] = null;","                }","                else {","                    if (previous) {","                        previous.next = next;","                    }","                    else {","                        dispatcher[type] = next;","                    }","                    if (next) {","                        next.previous = previous;","                    }","                }","                dispatcher = advised = null;","            }","        };","    }","    function getDispatcher(target, methodName) {","        var existing = target[methodName];","        var dispatcher;","        if (!existing || existing.target !== target) {","            target[methodName] = dispatcher = function () {","                var executionId = nextId;","                var args = arguments;","                var results;","                var before = dispatcher.before;","                while (before) {","                    args = before.advice.apply(this, args) || args;","                    before = before.next;","                }","                if (dispatcher.around) {","                    results = dispatcher.around.advice(this, args);","                }","                var after = dispatcher.after;","                while (after && after.id < executionId) {","                    if (after.receiveArguments) {","                        var newResults = after.advice.apply(this, args);","                        results = newResults === undefined ? results : newResults;","                    }","                    else {","                        results = after.advice.call(this, results, args);","                    }","                    after = after.next;","                }","                return results;","            };","            if (existing) {","                dispatcher.around = {","                    advice: function (target, args) {","                        return existing.apply(target, args);","                    }","                };","            }","            dispatcher.target = target;","        }","        else {","            dispatcher = existing;","        }","        target = null;","        return dispatcher;","    }","    function noop() { }","    function after(target, methodName, advice) {","        return advise(getDispatcher(target, methodName), 'after', advice);","    }","    exports.after = after;","    function around(target, methodName, advice) {","        var dispatcher = getDispatcher(target, methodName);","        var previous = dispatcher.around;","        var advised = advice(function () {","            return previous.advice(this, arguments);","        });","        dispatcher.around = {","            advice: function (target, args) {","                return advised ?","                    advised.apply(target, args) :","                    previous.advice(target, args);","            }","        };","        advice = null;","        return {","            remove: function () {","                this.remove = noop;","                advised = dispatcher = null;","            }","        };","    }","    exports.around = around;","    function before(target, methodName, advice) {","        return advise(getDispatcher(target, methodName), 'before', advice);","    }","    exports.before = before;","    function on(target, methodName, advice) {","        return advise(getDispatcher(target, methodName), 'after', advice, true);","    }","    exports.on = on;","});","//# sourceMappingURL=_debug/aspect.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":0,"12":0,"17":0,"18":0,"19":0,"20":0,"21":0,"24":0,"25":0,"26":0,"30":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"42":0,"43":0,"46":0,"48":0,"49":0,"52":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"69":0,"70":0,"72":0,"73":0,"74":0,"75":0,"76":0,"79":0,"81":0,"83":0,"85":0,"86":0,"88":0,"92":0,"95":0,"97":0,"98":0,"100":1,"101":1,"102":0,"104":1,"105":1,"106":0,"107":0,"108":0,"109":0,"111":0,"113":0,"118":0,"119":0,"121":0,"122":0,"126":1,"127":1,"128":0,"130":1,"131":1,"132":0,"134":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/CallbackQueue.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/CallbackQueue.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":27},"end":{"line":8,"column":55}}},"3":{"name":"(anonymous_3)","line":9,"loc":{"start":{"line":9,"column":25},"end":{"line":9,"column":37}}},"4":{"name":"CallbackQueue","line":10,"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":33}}},"5":{"name":"(anonymous_5)","line":13,"loc":{"start":{"line":13,"column":38},"end":{"line":13,"column":58}}},"6":{"name":"(anonymous_6)","line":21,"loc":{"start":{"line":21,"column":24},"end":{"line":21,"column":36}}},"7":{"name":"(anonymous_7)","line":22,"loc":{"start":{"line":22,"column":34},"end":{"line":22,"column":46}}},"8":{"name":"(anonymous_8)","line":28,"loc":{"start":{"line":28,"column":40},"end":{"line":28,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":46,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":44,"column":9}},"9":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"10":{"start":{"line":11,"column":12},"end":{"line":11,"column":33}},"11":{"start":{"line":13,"column":8},"end":{"line":27,"column":10}},"12":{"start":{"line":14,"column":12},"end":{"line":17,"column":14}},"13":{"start":{"line":18,"column":12},"end":{"line":18,"column":44}},"14":{"start":{"line":19,"column":12},"end":{"line":19,"column":28}},"15":{"start":{"line":20,"column":12},"end":{"line":26,"column":14}},"16":{"start":{"line":22,"column":20},"end":{"line":22,"column":50}},"17":{"start":{"line":23,"column":20},"end":{"line":23,"column":45}},"18":{"start":{"line":24,"column":20},"end":{"line":24,"column":37}},"19":{"start":{"line":28,"column":8},"end":{"line":42,"column":10}},"20":{"start":{"line":29,"column":12},"end":{"line":29,"column":26}},"21":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"22":{"start":{"line":31,"column":16},"end":{"line":31,"column":45}},"23":{"start":{"line":33,"column":12},"end":{"line":33,"column":44}},"24":{"start":{"line":34,"column":12},"end":{"line":34,"column":21}},"25":{"start":{"line":35,"column":12},"end":{"line":35,"column":33}},"26":{"start":{"line":36,"column":12},"end":{"line":41,"column":13}},"27":{"start":{"line":37,"column":16},"end":{"line":37,"column":36}},"28":{"start":{"line":38,"column":16},"end":{"line":40,"column":17}},"29":{"start":{"line":39,"column":20},"end":{"line":39,"column":52}},"30":{"start":{"line":43,"column":8},"end":{"line":43,"column":29}},"31":{"start":{"line":45,"column":4},"end":{"line":45,"column":25}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":16},"end":{"line":38,"column":16}},{"start":{"line":38,"column":16},"end":{"line":38,"column":16}}]},"7":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":20},"end":{"line":38,"column":24}},{"start":{"line":38,"column":28},"end":{"line":38,"column":39}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\"], function (require, exports) {","    var CallbackQueue = (function () {","        function CallbackQueue() {","            this._callbacks = [];","        }","        CallbackQueue.prototype.add = function (callback) {","            var _callback = {","                active: true,","                callback: callback","            };","            this._callbacks.push(_callback);","            callback = null;","            return {","                remove: function () {","                    this.remove = function () { };","                    _callback.active = false;","                    _callback = null;","                }","            };","        };","        CallbackQueue.prototype.drain = function () {","            var args = [];","            for (var _i = 0; _i < arguments.length; _i++) {","                args[_i - 0] = arguments[_i];","            }","            var callbacks = this._callbacks;","            var item;","            this._callbacks = [];","            for (var i = 0; i < callbacks.length; i++) {","                item = callbacks[i];","                if (item && item.active) {","                    item.callback.apply(null, args);","                }","            }","        };","        return CallbackQueue;","    })();","    return CallbackQueue;","});","//# sourceMappingURL=_debug/CallbackQueue.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"13":1,"14":0,"18":0,"19":0,"20":0,"22":0,"23":0,"24":0,"28":1,"29":0,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"43":1,"45":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/cookie.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/cookie.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":4,"26":1,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":1,"34":1,"35":0,"36":0,"37":0,"38":1,"39":1,"40":0,"41":0,"42":0,"43":1},"b":{"1":[1,0],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":1,"2":1,"3":0,"4":4,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":39},"end":{"line":8,"column":67}}},"3":{"name":"createCookieOptions","line":11,"loc":{"start":{"line":11,"column":4},"end":{"line":11,"column":42}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":13},"end":{"line":34,"column":25}}},"5":{"name":"key","line":40,"loc":{"start":{"line":40,"column":4},"end":{"line":40,"column":24}}},"6":{"name":"getItem","line":45,"loc":{"start":{"line":45,"column":4},"end":{"line":45,"column":26}}},"7":{"name":"setItem","line":50,"loc":{"start":{"line":50,"column":4},"end":{"line":50,"column":41}}},"8":{"name":"removeItem","line":55,"loc":{"start":{"line":55,"column":4},"end":{"line":55,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":61,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":37}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":53}},"10":{"start":{"line":11,"column":4},"end":{"line":32,"column":5}},"11":{"start":{"line":12,"column":8},"end":{"line":12,"column":31}},"12":{"start":{"line":13,"column":8},"end":{"line":30,"column":9}},"13":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}},"14":{"start":{"line":15,"column":12},"end":{"line":20,"column":13}},"15":{"start":{"line":16,"column":16},"end":{"line":16,"column":32}},"16":{"start":{"line":18,"column":17},"end":{"line":20,"column":13}},"17":{"start":{"line":19,"column":16},"end":{"line":19,"column":25}},"18":{"start":{"line":21,"column":12},"end":{"line":21,"column":60}},"19":{"start":{"line":22,"column":12},"end":{"line":29,"column":13}},"20":{"start":{"line":24,"column":17},"end":{"line":29,"column":13}},"21":{"start":{"line":25,"column":16},"end":{"line":25,"column":89}},"22":{"start":{"line":28,"column":16},"end":{"line":28,"column":65}},"23":{"start":{"line":31,"column":8},"end":{"line":31,"column":29}},"24":{"start":{"line":33,"column":4},"end":{"line":39,"column":7}},"25":{"start":{"line":35,"column":12},"end":{"line":35,"column":88}},"26":{"start":{"line":40,"column":4},"end":{"line":43,"column":5}},"27":{"start":{"line":41,"column":8},"end":{"line":41,"column":73}},"28":{"start":{"line":42,"column":8},"end":{"line":42,"column":90}},"29":{"start":{"line":44,"column":4},"end":{"line":44,"column":22}},"30":{"start":{"line":45,"column":4},"end":{"line":48,"column":5}},"31":{"start":{"line":46,"column":8},"end":{"line":46,"column":131}},"32":{"start":{"line":47,"column":8},"end":{"line":47,"column":59}},"33":{"start":{"line":49,"column":4},"end":{"line":49,"column":30}},"34":{"start":{"line":50,"column":4},"end":{"line":53,"column":5}},"35":{"start":{"line":51,"column":8},"end":{"line":51,"column":49}},"36":{"start":{"line":51,"column":34},"end":{"line":51,"column":47}},"37":{"start":{"line":52,"column":8},"end":{"line":52,"column":114}},"38":{"start":{"line":54,"column":4},"end":{"line":54,"column":30}},"39":{"start":{"line":55,"column":4},"end":{"line":59,"column":5}},"40":{"start":{"line":56,"column":8},"end":{"line":56,"column":56}},"41":{"start":{"line":57,"column":8},"end":{"line":57,"column":34}},"42":{"start":{"line":58,"column":8},"end":{"line":58,"column":87}},"43":{"start":{"line":60,"column":4},"end":{"line":60,"column":36}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":12},"end":{"line":15,"column":12}},{"start":{"line":15,"column":12},"end":{"line":15,"column":12}}]},"7":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":17},"end":{"line":18,"column":17}},{"start":{"line":18,"column":17},"end":{"line":18,"column":17}}]},"8":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":21},"end":{"line":18,"column":37}},{"start":{"line":18,"column":41},"end":{"line":18,"column":47}}]},"9":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":12}},{"start":{"line":22,"column":12},"end":{"line":22,"column":12}}]},"10":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":17},"end":{"line":24,"column":17}},{"start":{"line":24,"column":17},"end":{"line":24,"column":17}}]},"11":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":60},"end":{"line":25,"column":79}},{"start":{"line":25,"column":82},"end":{"line":25,"column":87}}]},"12":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":44},"end":{"line":35,"column":83}},{"start":{"line":35,"column":86},"end":{"line":35,"column":87}}]},"13":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":30},"end":{"line":42,"column":82}},{"start":{"line":42,"column":85},"end":{"line":42,"column":89}}]},"14":{"line":47,"type":"cond-expr","locations":[{"start":{"line":47,"column":23},"end":{"line":47,"column":51}},{"start":{"line":47,"column":54},"end":{"line":47,"column":58}}]},"15":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"16":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":28},"end":{"line":56,"column":50}},{"start":{"line":56,"column":53},"end":{"line":56,"column":55}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './string'], function (require, exports) {","    var string = require('./string');","    var longAgo = new Date(1970, 0, 1).toUTCString();","    function createCookieOptions(options) {","        var optionsString = '';","        for (var key in options) {","            var value = options[key];","            if (key === 'maxAge') {","                key = 'max-age';","            }","            else if (key === 'secure' && !value) {","                continue;","            }","            optionsString += '; ' + encodeURIComponent(key);","            if (key === 'secure') {","            }","            else if (key === 'expires') {","                optionsString += '=' + (value.toUTCString ? value.toUTCString() : value);","            }","            else {","                optionsString += '=' + encodeURIComponent(value);","            }","        }","        return optionsString;","    }","    Object.defineProperty(exports, 'length', {","        get: function () {","            return document.cookie.length ? string.count(document.cookie, '; ') + 1 : 0;","        },","        enumerable: true,","        configurable: true","    });","    function key(index) {","        var keyValuePair = document.cookie.split('; ', index + 1)[index];","        return keyValuePair ? decodeURIComponent(/^([^=]+)/.exec(keyValuePair)[0]) : null;","    }","    exports.key = key;","    function getItem(key) {","        var match = new RegExp('(?:^|; )' + string.escapeRegExpString(encodeURIComponent(key)) + '=([^;]*)').exec(document.cookie);","        return match ? decodeURIComponent(match[1]) : null;","    }","    exports.getItem = getItem;","    function setItem(key, data, options) {","        if (options === void 0) { options = {}; }","        document.cookie = encodeURIComponent(key) + '=' + encodeURIComponent(data) + createCookieOptions(options);","    }","    exports.setItem = setItem;","    function removeItem(key, options) {","        options = options ? Object.create(options) : {};","        options.expires = longAgo;","        document.cookie = encodeURIComponent(key) + '=' + createCookieOptions(options);","    }","    exports.removeItem = removeItem;","});","//# sourceMappingURL=_debug/cookie.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"18":0,"19":0,"21":0,"22":0,"24":0,"25":0,"28":0,"31":0,"33":1,"35":4,"40":1,"41":0,"42":0,"44":1,"45":1,"46":0,"47":0,"49":1,"50":1,"51":0,"52":0,"54":1,"55":1,"56":0,"57":0,"58":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/string.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/string.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":1,"42":1,"43":0,"44":0,"45":0,"46":1,"47":1,"48":0,"49":0,"50":0,"51":1,"52":1,"53":1,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":1,"72":1,"73":0,"74":1},"b":{"1":[1,0],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[1,1],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":37},"end":{"line":8,"column":65}}},"3":{"name":"repeat","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":35}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":5},"end":{"line":29,"column":24}}},"5":{"name":"_pad","line":35,"loc":{"start":{"line":35,"column":4},"end":{"line":35,"column":51}}},"6":{"name":"pad","line":49,"loc":{"start":{"line":49,"column":4},"end":{"line":49,"column":40}}},"7":{"name":"padr","line":54,"loc":{"start":{"line":54,"column":4},"end":{"line":54,"column":41}}},"8":{"name":"padl","line":59,"loc":{"start":{"line":59,"column":4},"end":{"line":59,"column":41}}},"9":{"name":"defaultTransform","line":65,"loc":{"start":{"line":65,"column":4},"end":{"line":65,"column":37}}},"10":{"name":"substitute","line":69,"loc":{"start":{"line":69,"column":4},"end":{"line":69,"column":59}}},"11":{"name":"(anonymous_11)","line":72,"loc":{"start":{"line":72,"column":51},"end":{"line":72,"column":81}}},"12":{"name":"count","line":81,"loc":{"start":{"line":81,"column":4},"end":{"line":81,"column":37}}},"13":{"name":"escapeRegExpString","line":91,"loc":{"start":{"line":91,"column":4},"end":{"line":91,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":95,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":33}},"9":{"start":{"line":10,"column":4},"end":{"line":26,"column":5}},"10":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"11":{"start":{"line":12,"column":12},"end":{"line":12,"column":22}},"12":{"start":{"line":14,"column":8},"end":{"line":14,"column":24}},"13":{"start":{"line":15,"column":8},"end":{"line":24,"column":9}},"14":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"15":{"start":{"line":17,"column":16},"end":{"line":17,"column":36}},"16":{"start":{"line":19,"column":12},"end":{"line":19,"column":24}},"17":{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},"18":{"start":{"line":21,"column":16},"end":{"line":21,"column":22}},"19":{"start":{"line":23,"column":12},"end":{"line":23,"column":29}},"20":{"start":{"line":25,"column":8},"end":{"line":25,"column":31}},"21":{"start":{"line":27,"column":4},"end":{"line":27,"column":28}},"22":{"start":{"line":28,"column":4},"end":{"line":28,"column":16}},"23":{"start":{"line":29,"column":4},"end":{"line":33,"column":34}},"24":{"start":{"line":30,"column":8},"end":{"line":30,"column":46}},"25":{"start":{"line":31,"column":8},"end":{"line":31,"column":48}},"26":{"start":{"line":32,"column":8},"end":{"line":32,"column":46}},"27":{"start":{"line":35,"column":4},"end":{"line":48,"column":5}},"28":{"start":{"line":36,"column":8},"end":{"line":36,"column":62}},"29":{"start":{"line":36,"column":35},"end":{"line":36,"column":60}},"30":{"start":{"line":37,"column":8},"end":{"line":37,"column":111}},"31":{"start":{"line":38,"column":8},"end":{"line":47,"column":9}},"32":{"start":{"line":39,"column":12},"end":{"line":39,"column":30}},"33":{"start":{"line":41,"column":13},"end":{"line":47,"column":9}},"34":{"start":{"line":42,"column":12},"end":{"line":42,"column":30}},"35":{"start":{"line":45,"column":12},"end":{"line":45,"column":45}},"36":{"start":{"line":46,"column":12},"end":{"line":46,"column":77}},"37":{"start":{"line":49,"column":4},"end":{"line":52,"column":5}},"38":{"start":{"line":50,"column":8},"end":{"line":50,"column":54}},"39":{"start":{"line":50,"column":36},"end":{"line":50,"column":52}},"40":{"start":{"line":51,"column":8},"end":{"line":51,"column":57}},"41":{"start":{"line":53,"column":4},"end":{"line":53,"column":22}},"42":{"start":{"line":54,"column":4},"end":{"line":57,"column":5}},"43":{"start":{"line":55,"column":8},"end":{"line":55,"column":54}},"44":{"start":{"line":55,"column":36},"end":{"line":55,"column":52}},"45":{"start":{"line":56,"column":8},"end":{"line":56,"column":58}},"46":{"start":{"line":58,"column":4},"end":{"line":58,"column":24}},"47":{"start":{"line":59,"column":4},"end":{"line":62,"column":5}},"48":{"start":{"line":60,"column":8},"end":{"line":60,"column":54}},"49":{"start":{"line":60,"column":36},"end":{"line":60,"column":52}},"50":{"start":{"line":61,"column":8},"end":{"line":61,"column":57}},"51":{"start":{"line":63,"column":4},"end":{"line":63,"column":24}},"52":{"start":{"line":64,"column":4},"end":{"line":64,"column":69}},"53":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"54":{"start":{"line":66,"column":8},"end":{"line":66,"column":21}},"55":{"start":{"line":69,"column":4},"end":{"line":79,"column":5}},"56":{"start":{"line":70,"column":8},"end":{"line":70,"column":39}},"57":{"start":{"line":71,"column":8},"end":{"line":71,"column":75}},"58":{"start":{"line":72,"column":8},"end":{"line":78,"column":11}},"59":{"start":{"line":73,"column":12},"end":{"line":73,"column":51}},"60":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"61":{"start":{"line":75,"column":16},"end":{"line":75,"column":84}},"62":{"start":{"line":77,"column":12},"end":{"line":77,"column":46}},"63":{"start":{"line":80,"column":4},"end":{"line":80,"column":36}},"64":{"start":{"line":81,"column":4},"end":{"line":88,"column":5}},"65":{"start":{"line":82,"column":8},"end":{"line":82,"column":59}},"66":{"start":{"line":83,"column":8},"end":{"line":86,"column":9}},"67":{"start":{"line":84,"column":12},"end":{"line":84,"column":19}},"68":{"start":{"line":85,"column":12},"end":{"line":85,"column":64}},"69":{"start":{"line":87,"column":8},"end":{"line":87,"column":20}},"70":{"start":{"line":89,"column":4},"end":{"line":89,"column":26}},"71":{"start":{"line":90,"column":4},"end":{"line":90,"column":53}},"72":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"73":{"start":{"line":92,"column":8},"end":{"line":92,"column":53}},"74":{"start":{"line":94,"column":4},"end":{"line":94,"column":52}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":8}},{"start":{"line":11,"column":8},"end":{"line":11,"column":8}}]},"7":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":12},"end":{"line":11,"column":19}},{"start":{"line":11,"column":23},"end":{"line":11,"column":33}}]},"8":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":12}},{"start":{"line":16,"column":12},"end":{"line":16,"column":12}}]},"9":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":12}},{"start":{"line":20,"column":12},"end":{"line":20,"column":12}}]},"10":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":7},"end":{"line":33,"column":14}},{"start":{"line":33,"column":19},"end":{"line":33,"column":31}}]},"11":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"12":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"13":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":13},"end":{"line":41,"column":13}},{"start":{"line":41,"column":13},"end":{"line":41,"column":13}}]},"14":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"15":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"16":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"17":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":18},"end":{"line":70,"column":25}},{"start":{"line":70,"column":29},"end":{"line":70,"column":38}}]},"18":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":32},"end":{"line":71,"column":55}},{"start":{"line":71,"column":58},"end":{"line":71,"column":74}}]},"19":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":12}},{"start":{"line":74,"column":12},"end":{"line":74,"column":12}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './lang'], function (require, exports) {","    var lang = require('./lang');","    function repeat(string, times) {","        if (!string || times <= 0) {","            return '';","        }","        var buffer = [];","        while (true) {","            if (times & 1) {","                buffer.push(string);","            }","            times >>= 1;","            if (!times) {","                break;","            }","            string += string;","        }","        return buffer.join('');","    }","    exports.repeat = repeat;","    var Padding;","    (function (Padding) {","        Padding[Padding[\"Left\"] = 0] = \"Left\";","        Padding[Padding[\"Right\"] = 1] = \"Right\";","        Padding[Padding[\"Both\"] = 2] = \"Both\";","    })(Padding || (Padding = {}));","    ;","    function _pad(text, size, character, position) {","        if (position === void 0) { position = Padding.Right; }","        var length = size - text.length, pad = exports.repeat(character, Math.ceil(length / character.length));","        if (position === Padding.Left) {","            return pad + text;","        }","        else if (position === Padding.Right) {","            return text + pad;","        }","        else {","            var left = Math.ceil(length / 2);","            return pad.substr(0, left) + text + pad.substr(0, length - left);","        }","    }","    function pad(text, size, character) {","        if (character === void 0) { character = ' '; }","        return _pad(text, size, character, Padding.Both);","    }","    exports.pad = pad;","    function padr(text, size, character) {","        if (character === void 0) { character = ' '; }","        return _pad(text, size, character, Padding.Right);","    }","    exports.padr = padr;","    function padl(text, size, character) {","        if (character === void 0) { character = ' '; }","        return _pad(text, size, character, Padding.Left);","    }","    exports.padl = padl;","    var substitutePattern = /\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g;","    function defaultTransform(value) {","        return value;","    }","    ;","    function substitute(template, map, transform, context) {","        context = context || undefined;","        transform = transform ? transform.bind(context) : defaultTransform;","        return template.replace(substitutePattern, function (match, key, format) {","            var value = lang.getProperty(map, key);","            if (format) {","                value = lang.getProperty(context, format).call(context, value, key);","            }","            return transform(value, key) + '';","        });","    }","    exports.substitute = substitute;","    function count(haystack, needle) {","        var hits = 0, lastIndex = haystack.indexOf(needle);","        while (lastIndex > -1) {","            ++hits;","            lastIndex = haystack.indexOf(needle, lastIndex + 1);","        }","        return hits;","    }","    exports.count = count;","    var regExpPattern = /[-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g;","    function escapeRegExpString(string) {","        return string.replace(regExpPattern, '\\\\$&');","    }","    exports.escapeRegExpString = escapeRegExpString;","});","//# sourceMappingURL=_debug/string.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":0,"12":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"21":0,"23":0,"25":0,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"35":1,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"45":0,"46":0,"49":1,"50":0,"51":0,"53":1,"54":1,"55":0,"56":0,"58":1,"59":1,"60":0,"61":0,"63":1,"64":1,"65":1,"66":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"77":0,"80":1,"81":1,"82":0,"83":0,"84":0,"85":0,"87":0,"89":1,"90":1,"91":1,"92":0,"94":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/lang.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/lang.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":0,"29":0,"30":0,"31":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":1,"50":0,"51":0,"52":0,"53":1,"54":1,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":1,"97":0,"98":1,"99":1,"100":1,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1},"b":{"1":[1,0],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,1],"32":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":36},"end":{"line":8,"column":64}}},"3":{"name":"getDottedProperty","line":12,"loc":{"start":{"line":12,"column":4},"end":{"line":12,"column":54}}},"4":{"name":"setProperty","line":23,"loc":{"start":{"line":23,"column":4},"end":{"line":23,"column":54}}},"5":{"name":"getProperty","line":33,"loc":{"start":{"line":33,"column":4},"end":{"line":33,"column":55}}},"6":{"name":"_mixin","line":38,"loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":36}}},"7":{"name":"mixin","line":48,"loc":{"start":{"line":48,"column":4},"end":{"line":48,"column":27}}},"8":{"name":"delegate","line":62,"loc":{"start":{"line":62,"column":4},"end":{"line":62,"column":42}}},"9":{"name":"bind","line":69,"loc":{"start":{"line":69,"column":4},"end":{"line":69,"column":31}}},"10":{"name":"(anonymous_10)","line":77,"loc":{"start":{"line":77,"column":15},"end":{"line":77,"column":27}}},"11":{"name":"partial","line":82,"loc":{"start":{"line":82,"column":4},"end":{"line":82,"column":25}}},"12":{"name":"(anonymous_12)","line":87,"loc":{"start":{"line":87,"column":15},"end":{"line":87,"column":27}}},"13":{"name":"deepMixin","line":92,"loc":{"start":{"line":92,"column":4},"end":{"line":92,"column":39}}},"14":{"name":"deepDelegate","line":123,"loc":{"start":{"line":123,"column":4},"end":{"line":123,"column":46}}},"15":{"name":"isEqual","line":134,"loc":{"start":{"line":134,"column":4},"end":{"line":134,"column":27}}},"16":{"name":"(anonymous_16)","line":143,"loc":{"start":{"line":143,"column":40},"end":{"line":143,"column":68}}},"17":{"name":"pullFromArray","line":155,"loc":{"start":{"line":155,"column":4},"end":{"line":155,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":164,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":31}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":93}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":38}},"11":{"start":{"line":12,"column":4},"end":{"line":22,"column":5}},"12":{"start":{"line":13,"column":8},"end":{"line":13,"column":16}},"13":{"start":{"line":14,"column":8},"end":{"line":14,"column":18}},"14":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"15":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"16":{"start":{"line":17,"column":16},"end":{"line":17,"column":33}},"17":{"start":{"line":19,"column":12},"end":{"line":19,"column":91}},"18":{"start":{"line":21,"column":8},"end":{"line":21,"column":22}},"19":{"start":{"line":23,"column":4},"end":{"line":31,"column":5}},"20":{"start":{"line":24,"column":8},"end":{"line":24,"column":44}},"21":{"start":{"line":25,"column":8},"end":{"line":25,"column":31}},"22":{"start":{"line":26,"column":8},"end":{"line":26,"column":62}},"23":{"start":{"line":27,"column":8},"end":{"line":30,"column":9}},"24":{"start":{"line":28,"column":12},"end":{"line":28,"column":35}},"25":{"start":{"line":29,"column":12},"end":{"line":29,"column":25}},"26":{"start":{"line":32,"column":4},"end":{"line":32,"column":38}},"27":{"start":{"line":33,"column":4},"end":{"line":36,"column":5}},"28":{"start":{"line":34,"column":8},"end":{"line":34,"column":50}},"29":{"start":{"line":34,"column":33},"end":{"line":34,"column":48}},"30":{"start":{"line":35,"column":8},"end":{"line":35,"column":74}},"31":{"start":{"line":37,"column":4},"end":{"line":37,"column":38}},"32":{"start":{"line":38,"column":4},"end":{"line":47,"column":5}},"33":{"start":{"line":39,"column":8},"end":{"line":45,"column":9}},"34":{"start":{"line":40,"column":12},"end":{"line":40,"column":43}},"35":{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},"36":{"start":{"line":42,"column":16},"end":{"line":42,"column":25}},"37":{"start":{"line":44,"column":12},"end":{"line":44,"column":39}},"38":{"start":{"line":46,"column":8},"end":{"line":46,"column":22}},"39":{"start":{"line":48,"column":4},"end":{"line":60,"column":5}},"40":{"start":{"line":49,"column":8},"end":{"line":49,"column":25}},"41":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"42":{"start":{"line":51,"column":12},"end":{"line":51,"column":44}},"43":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"44":{"start":{"line":54,"column":12},"end":{"line":54,"column":24}},"45":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"46":{"start":{"line":57,"column":12},"end":{"line":57,"column":39}},"47":{"start":{"line":59,"column":8},"end":{"line":59,"column":22}},"48":{"start":{"line":61,"column":4},"end":{"line":61,"column":26}},"49":{"start":{"line":62,"column":4},"end":{"line":66,"column":5}},"50":{"start":{"line":63,"column":8},"end":{"line":63,"column":39}},"51":{"start":{"line":64,"column":8},"end":{"line":64,"column":35}},"52":{"start":{"line":65,"column":8},"end":{"line":65,"column":22}},"53":{"start":{"line":67,"column":4},"end":{"line":67,"column":32}},"54":{"start":{"line":68,"column":4},"end":{"line":68,"column":40}},"55":{"start":{"line":69,"column":4},"end":{"line":80,"column":5}},"56":{"start":{"line":70,"column":8},"end":{"line":70,"column":23}},"57":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"58":{"start":{"line":72,"column":12},"end":{"line":72,"column":42}},"59":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"60":{"start":{"line":75,"column":12},"end":{"line":75,"column":60}},"61":{"start":{"line":77,"column":8},"end":{"line":79,"column":10}},"62":{"start":{"line":78,"column":12},"end":{"line":78,"column":86}},"63":{"start":{"line":81,"column":4},"end":{"line":81,"column":24}},"64":{"start":{"line":82,"column":4},"end":{"line":90,"column":5}},"65":{"start":{"line":83,"column":8},"end":{"line":83,"column":23}},"66":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"67":{"start":{"line":85,"column":12},"end":{"line":85,"column":42}},"68":{"start":{"line":87,"column":8},"end":{"line":89,"column":10}},"69":{"start":{"line":88,"column":12},"end":{"line":88,"column":74}},"70":{"start":{"line":91,"column":4},"end":{"line":91,"column":30}},"71":{"start":{"line":92,"column":4},"end":{"line":121,"column":5}},"72":{"start":{"line":93,"column":8},"end":{"line":119,"column":9}},"73":{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},"74":{"start":{"line":95,"column":16},"end":{"line":95,"column":46}},"75":{"start":{"line":97,"column":12},"end":{"line":118,"column":13}},"76":{"start":{"line":98,"column":16},"end":{"line":98,"column":47}},"77":{"start":{"line":99,"column":16},"end":{"line":99,"column":47}},"78":{"start":{"line":100,"column":16},"end":{"line":117,"column":17}},"79":{"start":{"line":101,"column":20},"end":{"line":116,"column":21}},"80":{"start":{"line":102,"column":24},"end":{"line":111,"column":25}},"81":{"start":{"line":107,"column":28},"end":{"line":107,"column":98}},"82":{"start":{"line":109,"column":29},"end":{"line":111,"column":25}},"83":{"start":{"line":110,"column":28},"end":{"line":110,"column":94}},"84":{"start":{"line":112,"column":24},"end":{"line":112,"column":60}},"85":{"start":{"line":115,"column":24},"end":{"line":115,"column":51}},"86":{"start":{"line":120,"column":8},"end":{"line":120,"column":22}},"87":{"start":{"line":122,"column":4},"end":{"line":122,"column":34}},"88":{"start":{"line":123,"column":4},"end":{"line":132,"column":5}},"89":{"start":{"line":124,"column":8},"end":{"line":124,"column":38}},"90":{"start":{"line":125,"column":8},"end":{"line":130,"column":9}},"91":{"start":{"line":126,"column":12},"end":{"line":126,"column":37}},"92":{"start":{"line":127,"column":12},"end":{"line":129,"column":13}},"93":{"start":{"line":128,"column":16},"end":{"line":128,"column":51}},"94":{"start":{"line":131,"column":8},"end":{"line":131,"column":45}},"95":{"start":{"line":133,"column":4},"end":{"line":133,"column":40}},"96":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"97":{"start":{"line":135,"column":8},"end":{"line":135,"column":47}},"98":{"start":{"line":137,"column":4},"end":{"line":137,"column":30}},"99":{"start":{"line":138,"column":4},"end":{"line":138,"column":34}},"100":{"start":{"line":139,"column":4},"end":{"line":154,"column":5}},"101":{"start":{"line":140,"column":8},"end":{"line":140,"column":69}},"102":{"start":{"line":143,"column":8},"end":{"line":153,"column":10}},"103":{"start":{"line":144,"column":12},"end":{"line":144,"column":27}},"104":{"start":{"line":145,"column":12},"end":{"line":151,"column":13}},"105":{"start":{"line":146,"column":16},"end":{"line":146,"column":79}},"106":{"start":{"line":147,"column":16},"end":{"line":149,"column":17}},"107":{"start":{"line":148,"column":20},"end":{"line":148,"column":38}},"108":{"start":{"line":150,"column":16},"end":{"line":150,"column":55}},"109":{"start":{"line":152,"column":12},"end":{"line":152,"column":24}},"110":{"start":{"line":155,"column":4},"end":{"line":162,"column":5}},"111":{"start":{"line":156,"column":8},"end":{"line":156,"column":25}},"112":{"start":{"line":157,"column":8},"end":{"line":157,"column":18}},"113":{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},"114":{"start":{"line":159,"column":12},"end":{"line":159,"column":51}},"115":{"start":{"line":161,"column":8},"end":{"line":161,"column":23}},"116":{"start":{"line":163,"column":4},"end":{"line":163,"column":42}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":15},"end":{"line":15,"column":21}},{"start":{"line":15,"column":26},"end":{"line":15,"column":42}}]},"7":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":12}},{"start":{"line":16,"column":12},"end":{"line":16,"column":12}}]},"8":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":37},"end":{"line":19,"column":48}},{"start":{"line":19,"column":52},"end":{"line":19,"column":89}}]},"9":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":61},"end":{"line":19,"column":77}},{"start":{"line":19,"column":80},"end":{"line":19,"column":89}}]},"10":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"11":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":20}},{"start":{"line":27,"column":24},"end":{"line":27,"column":28}}]},"12":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":8}},{"start":{"line":34,"column":8},"end":{"line":34,"column":8}}]},"13":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":12}},{"start":{"line":41,"column":12},"end":{"line":41,"column":12}}]},"14":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":30}},{"start":{"line":41,"column":34},"end":{"line":41,"column":62}}]},"15":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"16":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":8}},{"start":{"line":74,"column":8},"end":{"line":74,"column":8}}]},"17":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":8}},{"start":{"line":93,"column":8},"end":{"line":93,"column":8}}]},"18":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":12},"end":{"line":93,"column":18}},{"start":{"line":93,"column":22},"end":{"line":93,"column":48}}]},"19":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":12}},{"start":{"line":94,"column":12},"end":{"line":94,"column":12}}]},"20":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":16},"end":{"line":100,"column":16}},{"start":{"line":100,"column":16},"end":{"line":100,"column":16}}]},"21":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":20},"end":{"line":101,"column":20}},{"start":{"line":101,"column":20},"end":{"line":101,"column":20}}]},"22":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":24},"end":{"line":101,"column":35}},{"start":{"line":101,"column":39},"end":{"line":101,"column":70}}]},"23":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":24},"end":{"line":102,"column":24}},{"start":{"line":102,"column":24},"end":{"line":102,"column":24}}]},"24":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":28},"end":{"line":102,"column":57}},{"start":{"line":103,"column":28},"end":{"line":103,"column":55}},{"start":{"line":104,"column":28},"end":{"line":104,"column":57}},{"start":{"line":105,"column":28},"end":{"line":105,"column":57}},{"start":{"line":106,"column":28},"end":{"line":106,"column":58}}]},"25":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":29},"end":{"line":109,"column":29}},{"start":{"line":109,"column":29},"end":{"line":109,"column":29}}]},"26":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":33},"end":{"line":109,"column":45}},{"start":{"line":109,"column":49},"end":{"line":109,"column":80}}]},"27":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":86},"end":{"line":110,"column":88}},{"start":{"line":110,"column":91},"end":{"line":110,"column":93}}]},"28":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":12}},{"start":{"line":127,"column":12},"end":{"line":127,"column":12}}]},"29":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":16},"end":{"line":127,"column":21}},{"start":{"line":127,"column":25},"end":{"line":127,"column":50}}]},"30":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":15},"end":{"line":135,"column":22}},{"start":{"line":135,"column":27},"end":{"line":135,"column":34}},{"start":{"line":135,"column":38},"end":{"line":135,"column":45}}]},"31":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"32":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":16},"end":{"line":147,"column":16}},{"start":{"line":147,"column":16},"end":{"line":147,"column":16}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './has'], function (require, exports) {","    var has = require('./has');","    has.add('es6-getpropertydescriptor', typeof Object.getPropertyDescriptor === 'function');","    var slice = Array.prototype.slice;","    function getDottedProperty(object, parts, create) {","        var key;","        var i = 0;","        while (object && (key = parts[i++])) {","            if (typeof object !== 'object') {","                return undefined;","            }","            object = key in object ? object[key] : (create ? object[key] = {} : undefined);","        }","        return object;","    }","    function setProperty(object, propertyName, value) {","        var parts = propertyName.split('.');","        var part = parts.pop();","        var property = getDottedProperty(object, parts, true);","        if (property && part) {","            property[part] = value;","            return value;","        }","    }","    exports.setProperty = setProperty;","    function getProperty(object, propertyName, create) {","        if (create === void 0) { create = false; }","        return getDottedProperty(object, propertyName.split('.'), create);","    }","    exports.getProperty = getProperty;","    function _mixin(target, source) {","        for (var name in source) {","            var sourceValue = source[name];","            if (name in target && target[name] === sourceValue) {","                continue;","            }","            target[name] = sourceValue;","        }","        return target;","    }","    function mixin(target) {","        var sources = [];","        for (var _i = 1; _i < arguments.length; _i++) {","            sources[_i - 1] = arguments[_i];","        }","        if (!target) {","            target = {};","        }","        for (var i = 0; i < sources.length; i++) {","            _mixin(target, sources[i]);","        }","        return target;","    }","    exports.mixin = mixin;","    function delegate(object, properties) {","        object = Object.create(object);","        _mixin(object, properties);","        return object;","    }","    exports.delegate = delegate;","    var _bind = Function.prototype.bind;","    function bind(context, fn) {","        var extra = [];","        for (var _i = 2; _i < arguments.length; _i++) {","            extra[_i - 2] = arguments[_i];","        }","        if (typeof fn === 'function') {","            return _bind.apply(fn, [context].concat(extra));","        }","        return function () {","            return context[fn].apply(context, extra.concat(slice.call(arguments, 0)));","        };","    }","    exports.bind = bind;","    function partial(fn) {","        var extra = [];","        for (var _i = 1; _i < arguments.length; _i++) {","            extra[_i - 1] = arguments[_i];","        }","        return function () {","            return fn.apply(this, extra.concat(slice.call(arguments, 0)));","        };","    }","    exports.partial = partial;","    function deepMixin(target, source) {","        if (source && typeof source === 'object') {","            if (Array.isArray(source)) {","                target.length = source.length;","            }","            for (var name in source) {","                var targetValue = target[name];","                var sourceValue = source[name];","                if (targetValue !== sourceValue) {","                    if (sourceValue && typeof sourceValue === 'object') {","                        if (sourceValue instanceof RegExp ||","                            sourceValue instanceof Date ||","                            sourceValue instanceof String ||","                            sourceValue instanceof Number ||","                            sourceValue instanceof Boolean) {","                            target[name] = targetValue = new sourceValue.constructor(sourceValue);","                        }","                        else if (!targetValue || typeof targetValue !== 'object') {","                            target[name] = targetValue = Array.isArray(sourceValue) ? [] : {};","                        }","                        deepMixin(targetValue, sourceValue);","                    }","                    else {","                        target[name] = sourceValue;","                    }","                }","            }","        }","        return target;","    }","    exports.deepMixin = deepMixin;","    function deepDelegate(source, properties) {","        var target = delegate(source);","        for (var name in source) {","            var value = source[name];","            if (value && typeof value === 'object') {","                target[name] = deepDelegate(value);","            }","        }","        return deepMixin(target, properties);","    }","    exports.deepDelegate = deepDelegate;","    function isEqual(a, b) {","        return a === b || (a !== a && b !== b);","    }","    exports.isEqual = isEqual;","    exports.getPropertyDescriptor;","    if (has('es6-getpropertydescriptor')) {","        exports.getPropertyDescriptor = Object.getPropertyDescriptor;","    }","    else {","        exports.getPropertyDescriptor = function (object, property) {","            var descriptor;","            while (object) {","                descriptor = Object.getOwnPropertyDescriptor(object, property);","                if (descriptor) {","                    return descriptor;","                }","                object = Object.getPrototypeOf(object);","            }","            return null;","        };","    }","    function pullFromArray(haystack, needle) {","        var removed = [];","        var i = 0;","        while ((i = haystack.indexOf(needle, i)) > -1) {","            removed.push(haystack.splice(i, 1)[0]);","        }","        return removed;","    }","    exports.pullFromArray = pullFromArray;","});","//# sourceMappingURL=_debug/lang.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"21":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"32":1,"33":1,"34":0,"35":0,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"44":0,"46":0,"48":1,"49":0,"50":0,"51":0,"53":0,"54":0,"56":0,"57":0,"59":0,"61":1,"62":1,"63":0,"64":0,"65":0,"67":1,"68":1,"69":1,"70":0,"71":0,"72":0,"74":0,"75":0,"77":0,"78":0,"81":1,"82":1,"83":0,"84":0,"85":0,"87":0,"88":0,"91":1,"92":1,"93":0,"94":0,"95":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"107":0,"109":0,"110":0,"112":0,"115":0,"120":0,"122":1,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"131":0,"133":1,"134":1,"135":0,"137":1,"138":1,"139":1,"140":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"150":0,"152":0,"155":1,"156":0,"157":0,"158":0,"159":0,"161":0,"163":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/has.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/has.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":9,"17":1,"18":5,"19":5,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[1,0],"7":[1,0],"8":[0,9],"9":[5,0,5],"10":[5,0],"11":[1,0],"12":[1,1,1],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":1,"2":1,"3":1,"4":9,"5":5,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":27},"end":{"line":8,"column":55}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":15},"end":{"line":11,"column":27}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":22},"end":{"line":16,"column":38}}},"5":{"name":"(anonymous_5)","line":19,"loc":{"start":{"line":19,"column":22},"end":{"line":19,"column":56}}},"6":{"name":"(anonymous_6)","line":29,"loc":{"start":{"line":29,"column":20},"end":{"line":29,"column":53}}},"7":{"name":"get","line":32,"loc":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}}},"8":{"name":"(anonymous_8)","line":53,"loc":{"start":{"line":53,"column":15},"end":{"line":53,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":62,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":26}},"9":{"start":{"line":10,"column":4},"end":{"line":28,"column":5}},"10":{"start":{"line":11,"column":8},"end":{"line":24,"column":13}},"11":{"start":{"line":12,"column":12},"end":{"line":12,"column":47}},"12":{"start":{"line":13,"column":12},"end":{"line":13,"column":30}},"13":{"start":{"line":14,"column":12},"end":{"line":14,"column":43}},"14":{"start":{"line":15,"column":12},"end":{"line":15,"column":68}},"15":{"start":{"line":16,"column":12},"end":{"line":18,"column":14}},"16":{"start":{"line":17,"column":16},"end":{"line":17,"column":140}},"17":{"start":{"line":19,"column":12},"end":{"line":22,"column":14}},"18":{"start":{"line":20,"column":16},"end":{"line":20,"column":74}},"19":{"start":{"line":21,"column":16},"end":{"line":21,"column":33}},"20":{"start":{"line":23,"column":12},"end":{"line":23,"column":23}},"21":{"start":{"line":25,"column":8},"end":{"line":25,"column":100}},"22":{"start":{"line":26,"column":8},"end":{"line":26,"column":103}},"23":{"start":{"line":27,"column":8},"end":{"line":27,"column":31}},"24":{"start":{"line":29,"column":4},"end":{"line":52,"column":6}},"25":{"start":{"line":30,"column":8},"end":{"line":30,"column":56}},"26":{"start":{"line":31,"column":8},"end":{"line":31,"column":18}},"27":{"start":{"line":32,"column":8},"end":{"line":49,"column":9}},"28":{"start":{"line":33,"column":12},"end":{"line":33,"column":35}},"29":{"start":{"line":34,"column":12},"end":{"line":48,"column":13}},"30":{"start":{"line":35,"column":16},"end":{"line":35,"column":28}},"31":{"start":{"line":38,"column":16},"end":{"line":46,"column":17}},"32":{"start":{"line":39,"column":20},"end":{"line":45,"column":21}},"33":{"start":{"line":40,"column":24},"end":{"line":40,"column":37}},"34":{"start":{"line":43,"column":24},"end":{"line":43,"column":34}},"35":{"start":{"line":44,"column":24},"end":{"line":44,"column":41}},"36":{"start":{"line":47,"column":16},"end":{"line":47,"column":28}},"37":{"start":{"line":50,"column":8},"end":{"line":50,"column":27}},"38":{"start":{"line":51,"column":8},"end":{"line":51,"column":51}},"39":{"start":{"line":53,"column":4},"end":{"line":60,"column":6}},"40":{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},"41":{"start":{"line":55,"column":12},"end":{"line":55,"column":40}},"42":{"start":{"line":58,"column":12},"end":{"line":58,"column":19}},"43":{"start":{"line":61,"column":4},"end":{"line":61,"column":15}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"7":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":26},"end":{"line":15,"column":34}},{"start":{"line":15,"column":38},"end":{"line":15,"column":67}}]},"8":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":63},"end":{"line":17,"column":121}},{"start":{"line":17,"column":125},"end":{"line":17,"column":139}}]},"9":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":17},"end":{"line":20,"column":36}},{"start":{"line":20,"column":40},"end":{"line":20,"column":45}},{"start":{"line":20,"column":51},"end":{"line":20,"column":72}}]},"10":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":16},"end":{"line":21,"column":19}},{"start":{"line":21,"column":23},"end":{"line":21,"column":32}}]},"11":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":32},"end":{"line":25,"column":63}},{"start":{"line":25,"column":67},"end":{"line":25,"column":98}}]},"12":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":29},"end":{"line":26,"column":56}},{"start":{"line":26,"column":60},"end":{"line":26,"column":76}},{"start":{"line":26,"column":80},"end":{"line":26,"column":101}}]},"13":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":12}},{"start":{"line":34,"column":12},"end":{"line":34,"column":12}}]},"14":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":16},"end":{"line":38,"column":16}},{"start":{"line":38,"column":16},"end":{"line":38,"column":16}}]},"15":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":20},"end":{"line":39,"column":20}},{"start":{"line":39,"column":20},"end":{"line":39,"column":20}}]},"16":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":24},"end":{"line":39,"column":29}},{"start":{"line":39,"column":33},"end":{"line":39,"column":42}}]},"17":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":15},"end":{"line":51,"column":25}},{"start":{"line":51,"column":29},"end":{"line":51,"column":50}}]},"18":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\"], function (require, exports) {","    var has = require.has;","    if (!has) {","        has = (function () {","            var hasCache = Object.create(null);","            var global = this;","            var document = global.document;","            var element = document && document.createElement('div');","            var has = function (name) {","                return typeof hasCache[name] === 'function' ? (hasCache[name] = hasCache[name](global, document, element)) : hasCache[name];","            };","            has.add = function (name, test, now, force) {","                (!(name in hasCache) || force) && (hasCache[name] = test);","                now && has(name);","            };","            return has;","        })();","        has.add('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');","        has.add('host-node', typeof process === 'object' && process.versions && process.versions.node);","        has.add('debug', true);","    }","    has.normalize = function (resourceId, normalize) {","        var tokens = resourceId.match(/[\\?:]|[^:\\?]*/g);","        var i = 0;","        function get(skip) {","            var term = tokens[i++];","            if (term === ':') {","                return null;","            }","            else {","                if (tokens[i++] === '?') {","                    if (!skip && has(term)) {","                        return get();","                    }","                    else {","                        get(true);","                        return get(skip);","                    }","                }","                return term;","            }","        }","        resourceId = get();","        return resourceId && normalize(resourceId);","    };","    has.load = function (resourceId, require, load) {","        if (resourceId) {","            require([resourceId], load);","        }","        else {","            load();","        }","    };","    return has;","});","//# sourceMappingURL=_debug/has.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":9,"19":1,"20":5,"21":5,"23":1,"25":1,"26":1,"27":1,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"38":0,"39":0,"40":0,"43":0,"44":0,"47":0,"50":0,"51":0,"53":1,"54":0,"55":0,"58":0,"61":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/DateObject.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/DateObject.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":1,"50":0,"51":1,"52":4,"53":1,"54":4,"55":0,"56":0,"57":0,"58":1,"59":8,"60":0,"61":0,"62":0,"63":0,"64":1,"65":8,"66":0,"67":0,"68":0,"69":0,"70":1,"71":4,"72":0,"73":1,"74":4,"75":0,"76":1,"77":4,"78":0,"79":1,"80":4,"81":0,"82":1,"83":4,"84":0,"85":1,"86":4,"87":0,"88":1,"89":4,"90":1,"91":4,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":1,"102":0,"103":1,"104":0,"105":1,"106":0,"107":1,"108":0,"109":1,"110":0,"111":1,"112":0,"113":1,"114":0,"115":1,"116":0,"117":1,"118":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":4,"27":4,"28":8,"29":0,"30":8,"31":0,"32":4,"33":0,"34":4,"35":0,"36":4,"37":0,"38":4,"39":0,"40":4,"41":0,"42":4,"43":0,"44":4,"45":4,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":27},"end":{"line":8,"column":55}}},"3":{"name":"isLeapYear","line":11,"loc":{"start":{"line":11,"column":4},"end":{"line":11,"column":30}}},"4":{"name":"(anonymous_4)","line":15,"loc":{"start":{"line":15,"column":22},"end":{"line":15,"column":34}}},"5":{"name":"DateObject","line":16,"loc":{"start":{"line":16,"column":8},"end":{"line":16,"column":35}}},"6":{"name":"(anonymous_6)","line":39,"loc":{"start":{"line":39,"column":34},"end":{"line":39,"column":37}}},"7":{"name":"(anonymous_7)","line":42,"loc":{"start":{"line":42,"column":35},"end":{"line":42,"column":38}}},"8":{"name":"(anonymous_8)","line":49,"loc":{"start":{"line":49,"column":28},"end":{"line":49,"column":31}}},"9":{"name":"(anonymous_9)","line":52,"loc":{"start":{"line":52,"column":28},"end":{"line":52,"column":35}}},"10":{"name":"(anonymous_10)","line":55,"loc":{"start":{"line":55,"column":29},"end":{"line":55,"column":32}}},"11":{"name":"(anonymous_11)","line":58,"loc":{"start":{"line":58,"column":29},"end":{"line":58,"column":37}}},"12":{"name":"(anonymous_12)","line":61,"loc":{"start":{"line":61,"column":34},"end":{"line":61,"column":37}}},"13":{"name":"(anonymous_13)","line":64,"loc":{"start":{"line":64,"column":34},"end":{"line":64,"column":40}}},"14":{"name":"(anonymous_14)","line":67,"loc":{"start":{"line":67,"column":29},"end":{"line":67,"column":32}}},"15":{"name":"(anonymous_15)","line":70,"loc":{"start":{"line":70,"column":29},"end":{"line":70,"column":37}}},"16":{"name":"(anonymous_16)","line":73,"loc":{"start":{"line":73,"column":31},"end":{"line":73,"column":34}}},"17":{"name":"(anonymous_17)","line":76,"loc":{"start":{"line":76,"column":31},"end":{"line":76,"column":41}}},"18":{"name":"(anonymous_18)","line":79,"loc":{"start":{"line":79,"column":31},"end":{"line":79,"column":34}}},"19":{"name":"(anonymous_19)","line":82,"loc":{"start":{"line":82,"column":31},"end":{"line":82,"column":41}}},"20":{"name":"(anonymous_20)","line":85,"loc":{"start":{"line":85,"column":36},"end":{"line":85,"column":39}}},"21":{"name":"(anonymous_21)","line":88,"loc":{"start":{"line":88,"column":36},"end":{"line":88,"column":51}}},"22":{"name":"(anonymous_22)","line":91,"loc":{"start":{"line":91,"column":33},"end":{"line":91,"column":36}}},"23":{"name":"(anonymous_23)","line":94,"loc":{"start":{"line":94,"column":30},"end":{"line":94,"column":42}}},"24":{"name":"(anonymous_24)","line":101,"loc":{"start":{"line":101,"column":27},"end":{"line":101,"column":45}}},"25":{"name":"(anonymous_25)","line":104,"loc":{"start":{"line":104,"column":25},"end":{"line":104,"column":37}}},"26":{"name":"(anonymous_26)","line":108,"loc":{"start":{"line":108,"column":17},"end":{"line":108,"column":29}}},"27":{"name":"(anonymous_27)","line":115,"loc":{"start":{"line":115,"column":17},"end":{"line":115,"column":29}}},"28":{"name":"(anonymous_28)","line":126,"loc":{"start":{"line":126,"column":17},"end":{"line":126,"column":29}}},"29":{"name":"(anonymous_29)","line":129,"loc":{"start":{"line":129,"column":17},"end":{"line":129,"column":33}}},"30":{"name":"(anonymous_30)","line":140,"loc":{"start":{"line":140,"column":17},"end":{"line":140,"column":29}}},"31":{"name":"(anonymous_31)","line":143,"loc":{"start":{"line":143,"column":17},"end":{"line":143,"column":34}}},"32":{"name":"(anonymous_32)","line":154,"loc":{"start":{"line":154,"column":17},"end":{"line":154,"column":29}}},"33":{"name":"(anonymous_33)","line":157,"loc":{"start":{"line":157,"column":17},"end":{"line":157,"column":32}}},"34":{"name":"(anonymous_34)","line":164,"loc":{"start":{"line":164,"column":17},"end":{"line":164,"column":29}}},"35":{"name":"(anonymous_35)","line":167,"loc":{"start":{"line":167,"column":17},"end":{"line":167,"column":34}}},"36":{"name":"(anonymous_36)","line":174,"loc":{"start":{"line":174,"column":17},"end":{"line":174,"column":29}}},"37":{"name":"(anonymous_37)","line":177,"loc":{"start":{"line":177,"column":17},"end":{"line":177,"column":36}}},"38":{"name":"(anonymous_38)","line":184,"loc":{"start":{"line":184,"column":17},"end":{"line":184,"column":29}}},"39":{"name":"(anonymous_39)","line":187,"loc":{"start":{"line":187,"column":17},"end":{"line":187,"column":36}}},"40":{"name":"(anonymous_40)","line":194,"loc":{"start":{"line":194,"column":17},"end":{"line":194,"column":29}}},"41":{"name":"(anonymous_41)","line":197,"loc":{"start":{"line":197,"column":17},"end":{"line":197,"column":41}}},"42":{"name":"(anonymous_42)","line":204,"loc":{"start":{"line":204,"column":17},"end":{"line":204,"column":29}}},"43":{"name":"(anonymous_43)","line":207,"loc":{"start":{"line":207,"column":17},"end":{"line":207,"column":33}}},"44":{"name":"(anonymous_44)","line":214,"loc":{"start":{"line":214,"column":17},"end":{"line":214,"column":29}}},"45":{"name":"(anonymous_45)","line":221,"loc":{"start":{"line":221,"column":17},"end":{"line":221,"column":29}}},"46":{"name":"(anonymous_46)","line":227,"loc":{"start":{"line":227,"column":35},"end":{"line":227,"column":52}}},"47":{"name":"(anonymous_47)","line":229,"loc":{"start":{"line":229,"column":35},"end":{"line":229,"column":55}}},"48":{"name":"(anonymous_48)","line":237,"loc":{"start":{"line":237,"column":40},"end":{"line":237,"column":52}}},"49":{"name":"(anonymous_49)","line":240,"loc":{"start":{"line":240,"column":44},"end":{"line":240,"column":56}}},"50":{"name":"(anonymous_50)","line":243,"loc":{"start":{"line":243,"column":44},"end":{"line":243,"column":56}}},"51":{"name":"(anonymous_51)","line":246,"loc":{"start":{"line":246,"column":46},"end":{"line":246,"column":58}}},"52":{"name":"(anonymous_52)","line":249,"loc":{"start":{"line":249,"column":50},"end":{"line":249,"column":62}}},"53":{"name":"(anonymous_53)","line":252,"loc":{"start":{"line":252,"column":50},"end":{"line":252,"column":62}}},"54":{"name":"(anonymous_54)","line":255,"loc":{"start":{"line":255,"column":43},"end":{"line":255,"column":55}}},"55":{"name":"(anonymous_55)","line":258,"loc":{"start":{"line":258,"column":38},"end":{"line":258,"column":53}}},"56":{"name":"(anonymous_56)","line":261,"loc":{"start":{"line":261,"column":39},"end":{"line":261,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":267,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":70}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":104}},"10":{"start":{"line":11,"column":4},"end":{"line":14,"column":5}},"11":{"start":{"line":12,"column":8},"end":{"line":12,"column":41}},"12":{"start":{"line":13,"column":8},"end":{"line":13,"column":37}},"13":{"start":{"line":15,"column":4},"end":{"line":265,"column":9}},"14":{"start":{"line":16,"column":8},"end":{"line":100,"column":9}},"15":{"start":{"line":17,"column":12},"end":{"line":17,"column":22}},"16":{"start":{"line":18,"column":12},"end":{"line":29,"column":13}},"17":{"start":{"line":19,"column":16},"end":{"line":19,"column":35}},"18":{"start":{"line":21,"column":17},"end":{"line":29,"column":13}},"19":{"start":{"line":22,"column":16},"end":{"line":22,"column":41}},"20":{"start":{"line":24,"column":17},"end":{"line":29,"column":13}},"21":{"start":{"line":25,"column":16},"end":{"line":25,"column":40}},"22":{"start":{"line":28,"column":16},"end":{"line":28,"column":168}},"23":{"start":{"line":30,"column":12},"end":{"line":35,"column":15}},"24":{"start":{"line":36,"column":12},"end":{"line":36,"column":28}},"25":{"start":{"line":37,"column":12},"end":{"line":99,"column":15}},"26":{"start":{"line":40,"column":24},"end":{"line":40,"column":53}},"27":{"start":{"line":43,"column":24},"end":{"line":43,"column":47}},"28":{"start":{"line":44,"column":24},"end":{"line":46,"column":25}},"29":{"start":{"line":45,"column":28},"end":{"line":45,"column":38}},"30":{"start":{"line":47,"column":24},"end":{"line":47,"column":43}},"31":{"start":{"line":50,"column":24},"end":{"line":50,"column":59}},"32":{"start":{"line":53,"column":24},"end":{"line":53,"column":56}},"33":{"start":{"line":56,"column":24},"end":{"line":56,"column":60}},"34":{"start":{"line":59,"column":24},"end":{"line":59,"column":58}},"35":{"start":{"line":62,"column":24},"end":{"line":62,"column":55}},"36":{"start":{"line":65,"column":24},"end":{"line":65,"column":51}},"37":{"start":{"line":68,"column":24},"end":{"line":68,"column":56}},"38":{"start":{"line":71,"column":24},"end":{"line":71,"column":54}},"39":{"start":{"line":74,"column":24},"end":{"line":74,"column":58}},"40":{"start":{"line":77,"column":24},"end":{"line":77,"column":58}},"41":{"start":{"line":80,"column":24},"end":{"line":80,"column":58}},"42":{"start":{"line":83,"column":24},"end":{"line":83,"column":58}},"43":{"start":{"line":86,"column":24},"end":{"line":86,"column":63}},"44":{"start":{"line":89,"column":24},"end":{"line":89,"column":68}},"45":{"start":{"line":92,"column":24},"end":{"line":92,"column":54}},"46":{"start":{"line":95,"column":24},"end":{"line":95,"column":56}},"47":{"start":{"line":101,"column":8},"end":{"line":103,"column":10}},"48":{"start":{"line":102,"column":12},"end":{"line":102,"column":54}},"49":{"start":{"line":104,"column":8},"end":{"line":106,"column":10}},"50":{"start":{"line":105,"column":12},"end":{"line":105,"column":46}},"51":{"start":{"line":107,"column":8},"end":{"line":113,"column":11}},"52":{"start":{"line":109,"column":16},"end":{"line":109,"column":45}},"53":{"start":{"line":114,"column":8},"end":{"line":124,"column":11}},"54":{"start":{"line":116,"column":16},"end":{"line":116,"column":39}},"55":{"start":{"line":117,"column":16},"end":{"line":119,"column":17}},"56":{"start":{"line":118,"column":20},"end":{"line":118,"column":30}},"57":{"start":{"line":120,"column":16},"end":{"line":120,"column":35}},"58":{"start":{"line":125,"column":8},"end":{"line":138,"column":11}},"59":{"start":{"line":127,"column":16},"end":{"line":127,"column":48}},"60":{"start":{"line":130,"column":16},"end":{"line":130,"column":49}},"61":{"start":{"line":131,"column":16},"end":{"line":131,"column":45}},"62":{"start":{"line":132,"column":16},"end":{"line":134,"column":17}},"63":{"start":{"line":133,"column":20},"end":{"line":133,"column":40}},"64":{"start":{"line":139,"column":8},"end":{"line":152,"column":11}},"65":{"start":{"line":141,"column":16},"end":{"line":141,"column":49}},"66":{"start":{"line":144,"column":16},"end":{"line":144,"column":49}},"67":{"start":{"line":145,"column":16},"end":{"line":145,"column":47}},"68":{"start":{"line":146,"column":16},"end":{"line":148,"column":17}},"69":{"start":{"line":147,"column":20},"end":{"line":147,"column":40}},"70":{"start":{"line":153,"column":8},"end":{"line":162,"column":11}},"71":{"start":{"line":155,"column":16},"end":{"line":155,"column":44}},"72":{"start":{"line":158,"column":16},"end":{"line":158,"column":40}},"73":{"start":{"line":163,"column":8},"end":{"line":172,"column":11}},"74":{"start":{"line":165,"column":16},"end":{"line":165,"column":45}},"75":{"start":{"line":168,"column":16},"end":{"line":168,"column":43}},"76":{"start":{"line":173,"column":8},"end":{"line":182,"column":11}},"77":{"start":{"line":175,"column":16},"end":{"line":175,"column":47}},"78":{"start":{"line":178,"column":16},"end":{"line":178,"column":47}},"79":{"start":{"line":183,"column":8},"end":{"line":192,"column":11}},"80":{"start":{"line":185,"column":16},"end":{"line":185,"column":47}},"81":{"start":{"line":188,"column":16},"end":{"line":188,"column":47}},"82":{"start":{"line":193,"column":8},"end":{"line":202,"column":11}},"83":{"start":{"line":195,"column":16},"end":{"line":195,"column":52}},"84":{"start":{"line":198,"column":16},"end":{"line":198,"column":57}},"85":{"start":{"line":203,"column":8},"end":{"line":212,"column":11}},"86":{"start":{"line":205,"column":16},"end":{"line":205,"column":44}},"87":{"start":{"line":208,"column":16},"end":{"line":208,"column":41}},"88":{"start":{"line":213,"column":8},"end":{"line":219,"column":11}},"89":{"start":{"line":215,"column":16},"end":{"line":215,"column":43}},"90":{"start":{"line":220,"column":8},"end":{"line":226,"column":11}},"91":{"start":{"line":222,"column":16},"end":{"line":222,"column":54}},"92":{"start":{"line":227,"column":8},"end":{"line":236,"column":10}},"93":{"start":{"line":228,"column":12},"end":{"line":228,"column":46}},"94":{"start":{"line":229,"column":12},"end":{"line":234,"column":15}},"95":{"start":{"line":230,"column":16},"end":{"line":232,"column":17}},"96":{"start":{"line":231,"column":20},"end":{"line":231,"column":27}},"97":{"start":{"line":233,"column":16},"end":{"line":233,"column":52}},"98":{"start":{"line":235,"column":12},"end":{"line":235,"column":26}},"99":{"start":{"line":237,"column":8},"end":{"line":239,"column":10}},"100":{"start":{"line":238,"column":12},"end":{"line":238,"column":41}},"101":{"start":{"line":240,"column":8},"end":{"line":242,"column":10}},"102":{"start":{"line":241,"column":12},"end":{"line":241,"column":45}},"103":{"start":{"line":243,"column":8},"end":{"line":245,"column":10}},"104":{"start":{"line":244,"column":12},"end":{"line":244,"column":45}},"105":{"start":{"line":246,"column":8},"end":{"line":248,"column":10}},"106":{"start":{"line":247,"column":12},"end":{"line":247,"column":47}},"107":{"start":{"line":249,"column":8},"end":{"line":251,"column":10}},"108":{"start":{"line":250,"column":12},"end":{"line":250,"column":51}},"109":{"start":{"line":252,"column":8},"end":{"line":254,"column":10}},"110":{"start":{"line":253,"column":12},"end":{"line":253,"column":51}},"111":{"start":{"line":255,"column":8},"end":{"line":257,"column":10}},"112":{"start":{"line":256,"column":12},"end":{"line":256,"column":44}},"113":{"start":{"line":258,"column":8},"end":{"line":260,"column":10}},"114":{"start":{"line":259,"column":12},"end":{"line":259,"column":42}},"115":{"start":{"line":261,"column":8},"end":{"line":263,"column":10}},"116":{"start":{"line":262,"column":12},"end":{"line":262,"column":40}},"117":{"start":{"line":264,"column":8},"end":{"line":264,"column":26}},"118":{"start":{"line":266,"column":4},"end":{"line":266,"column":22}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":12}},{"start":{"line":18,"column":12},"end":{"line":18,"column":12}}]},"7":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":17},"end":{"line":21,"column":17}},{"start":{"line":21,"column":17},"end":{"line":21,"column":17}}]},"8":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":17},"end":{"line":24,"column":17}},{"start":{"line":24,"column":17},"end":{"line":24,"column":17}}]},"9":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":21},"end":{"line":24,"column":46}},{"start":{"line":24,"column":50},"end":{"line":24,"column":75}}]},"10":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":62},"end":{"line":28,"column":78}},{"start":{"line":28,"column":82},"end":{"line":28,"column":83}}]},"11":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":85},"end":{"line":28,"column":96}},{"start":{"line":28,"column":100},"end":{"line":28,"column":101}}]},"12":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":103},"end":{"line":28,"column":116}},{"start":{"line":28,"column":120},"end":{"line":28,"column":121}}]},"13":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":123},"end":{"line":28,"column":136}},{"start":{"line":28,"column":140},"end":{"line":28,"column":141}}]},"14":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":143},"end":{"line":28,"column":161}},{"start":{"line":28,"column":165},"end":{"line":28,"column":166}}]},"15":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":24},"end":{"line":44,"column":24}},{"start":{"line":44,"column":24},"end":{"line":44,"column":24}}]},"16":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":28},"end":{"line":44,"column":39}},{"start":{"line":44,"column":43},"end":{"line":44,"column":58}}]},"17":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":16},"end":{"line":117,"column":16}},{"start":{"line":117,"column":16},"end":{"line":117,"column":16}}]},"18":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":20},"end":{"line":117,"column":31}},{"start":{"line":117,"column":35},"end":{"line":117,"column":50}}]},"19":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":16},"end":{"line":132,"column":16}},{"start":{"line":132,"column":16},"end":{"line":132,"column":16}}]},"20":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":16},"end":{"line":146,"column":16}},{"start":{"line":146,"column":16},"end":{"line":146,"column":16}}]},"21":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":16},"end":{"line":230,"column":16}},{"start":{"line":230,"column":16},"end":{"line":230,"column":16}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\"], function (require, exports) {","    var days = [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];","    var operationOrder = ['year', 'month', 'dayOfMonth', 'hours', 'minutes', 'seconds', 'milliseconds'];","    function isLeapYear(year) {","        var date = new Date(year, 1, 29);","        return date.getDate() === 29;","    }","    var DateObject = (function () {","        function DateObject(value) {","            var _date;","            if (!arguments.length) {","                _date = new Date();","            }","            else if (value instanceof Date) {","                _date = new Date(+value);","            }","            else if (typeof value === 'number' || typeof value === 'string') {","                _date = new Date(value);","            }","            else {","                _date = new Date(value.year, value.month - 1, value.dayOfMonth || 1, value.hours || 0, value.minutes || 0, value.seconds || 0, value.milliseconds || 0);","            }","            Object.defineProperty(this, '_date', {","                configurable: true,","                enumerable: false,","                value: _date,","                writable: true","            });","            var self = this;","            Object.defineProperty(this, 'utc', {","                value: {","                    get isLeapYear() {","                        return isLeapYear(this.year);","                    },","                    get daysInMonth() {","                        var month = this.month;","                        if (month === 2 && this.isLeapYear) {","                            return 29;","                        }","                        return days[month];","                    },","                    get year() {","                        return self._date.getUTCFullYear();","                    },","                    set year(year) {","                        self._date.setUTCFullYear(year);","                    },","                    get month() {","                        return self._date.getUTCMonth() + 1;","                    },","                    set month(month) {","                        self._date.setUTCMonth(month - 1);","                    },","                    get dayOfMonth() {","                        return self._date.getUTCDate();","                    },","                    set dayOfMonth(day) {","                        self._date.setUTCDate(day);","                    },","                    get hours() {","                        return self._date.getUTCHours();","                    },","                    set hours(hours) {","                        self._date.setUTCHours(hours);","                    },","                    get minutes() {","                        return self._date.getUTCMinutes();","                    },","                    set minutes(minutes) {","                        self._date.setUTCMinutes(minutes);","                    },","                    get seconds() {","                        return self._date.getUTCSeconds();","                    },","                    set seconds(seconds) {","                        self._date.setUTCSeconds(seconds);","                    },","                    get milliseconds() {","                        return self._date.getUTCMilliseconds();","                    },","                    set milliseconds(milliseconds) {","                        self._date.setUTCMilliseconds(milliseconds);","                    },","                    get dayOfWeek() {","                        return self._date.getUTCDay();","                    },","                    toString: function () {","                        return self._date.toUTCString();","                    }","                },","                enumerable: true","            });","        }","        DateObject.parse = function (string) {","            return new DateObject(Date.parse(string));","        };","        DateObject.now = function () {","            return new DateObject(Date.now());","        };","        Object.defineProperty(DateObject.prototype, \"isLeapYear\", {","            get: function () {","                return isLeapYear(this.year);","            },","            enumerable: true,","            configurable: true","        });","        Object.defineProperty(DateObject.prototype, \"daysInMonth\", {","            get: function () {","                var month = this.month;","                if (month === 2 && this.isLeapYear) {","                    return 29;","                }","                return days[month];","            },","            enumerable: true,","            configurable: true","        });","        Object.defineProperty(DateObject.prototype, \"year\", {","            get: function () {","                return this._date.getFullYear();","            },","            set: function (year) {","                var dayOfMonth = this.dayOfMonth;","                this._date.setFullYear(year);","                if (this.dayOfMonth < dayOfMonth) {","                    this.dayOfMonth = 0;","                }","            },","            enumerable: true,","            configurable: true","        });","        Object.defineProperty(DateObject.prototype, \"month\", {","            get: function () {","                return this._date.getMonth() + 1;","            },","            set: function (month) {","                var dayOfMonth = this.dayOfMonth;","                this._date.setMonth(month - 1);","                if (this.dayOfMonth < dayOfMonth) {","                    this.dayOfMonth = 0;","                }","            },","            enumerable: true,","            configurable: true","        });","        Object.defineProperty(DateObject.prototype, \"dayOfMonth\", {","            get: function () {","                return this._date.getDate();","            },","            set: function (day) {","                this._date.setDate(day);","            },","            enumerable: true,","            configurable: true","        });","        Object.defineProperty(DateObject.prototype, \"hours\", {","            get: function () {","                return this._date.getHours();","            },","            set: function (hours) {","                this._date.setHours(hours);","            },","            enumerable: true,","            configurable: true","        });","        Object.defineProperty(DateObject.prototype, \"minutes\", {","            get: function () {","                return this._date.getMinutes();","            },","            set: function (minutes) {","                this._date.setMinutes(minutes);","            },","            enumerable: true,","            configurable: true","        });","        Object.defineProperty(DateObject.prototype, \"seconds\", {","            get: function () {","                return this._date.getSeconds();","            },","            set: function (seconds) {","                this._date.setSeconds(seconds);","            },","            enumerable: true,","            configurable: true","        });","        Object.defineProperty(DateObject.prototype, \"milliseconds\", {","            get: function () {","                return this._date.getMilliseconds();","            },","            set: function (milliseconds) {","                this._date.setMilliseconds(milliseconds);","            },","            enumerable: true,","            configurable: true","        });","        Object.defineProperty(DateObject.prototype, \"time\", {","            get: function () {","                return this._date.getTime();","            },","            set: function (time) {","                this._date.setTime(time);","            },","            enumerable: true,","            configurable: true","        });","        Object.defineProperty(DateObject.prototype, \"dayOfWeek\", {","            get: function () {","                return this._date.getDay();","            },","            enumerable: true,","            configurable: true","        });","        Object.defineProperty(DateObject.prototype, \"timezoneOffset\", {","            get: function () {","                return this._date.getTimezoneOffset();","            },","            enumerable: true,","            configurable: true","        });","        DateObject.prototype.add = function (value) {","            var result = new DateObject(this);","            operationOrder.forEach(function (property) {","                if (!(property in value)) {","                    return;","                }","                result[property] += value[property];","            });","            return result;","        };","        DateObject.prototype.toString = function () {","            return this._date.toString();","        };","        DateObject.prototype.toDateString = function () {","            return this._date.toDateString();","        };","        DateObject.prototype.toTimeString = function () {","            return this._date.toTimeString();","        };","        DateObject.prototype.toLocaleString = function () {","            return this._date.toLocaleString();","        };","        DateObject.prototype.toLocaleDateString = function () {","            return this._date.toLocaleDateString();","        };","        DateObject.prototype.toLocaleTimeString = function () {","            return this._date.toLocaleTimeString();","        };","        DateObject.prototype.toISOString = function () {","            return this._date.toISOString();","        };","        DateObject.prototype.toJSON = function (key) {","            return this._date.toJSON(key);","        };","        DateObject.prototype.valueOf = function () {","            return this._date.valueOf();","        };","        return DateObject;","    })();","    return DateObject;","});","//# sourceMappingURL=_debug/DateObject.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":0,"13":0,"15":1,"16":1,"17":0,"18":0,"19":0,"21":0,"22":0,"24":0,"25":0,"28":0,"30":0,"36":0,"37":0,"40":0,"43":0,"44":0,"45":0,"47":0,"50":0,"53":0,"56":0,"59":0,"62":0,"65":0,"68":0,"71":0,"74":0,"77":0,"80":0,"83":0,"86":0,"89":0,"92":0,"95":0,"101":1,"102":0,"104":1,"105":0,"107":1,"109":4,"114":1,"116":4,"117":0,"118":0,"120":0,"125":1,"127":8,"130":0,"131":0,"132":0,"133":0,"139":1,"141":8,"144":0,"145":0,"146":0,"147":0,"153":1,"155":4,"158":0,"163":1,"165":4,"168":0,"173":1,"175":4,"178":0,"183":1,"185":4,"188":0,"193":1,"195":4,"198":0,"203":1,"205":4,"208":0,"213":1,"215":4,"220":1,"222":4,"227":1,"228":0,"229":0,"230":0,"231":0,"233":0,"235":0,"237":1,"238":0,"240":1,"241":0,"243":1,"244":0,"246":1,"247":0,"249":1,"250":0,"252":1,"253":0,"255":1,"256":0,"258":1,"259":0,"261":1,"262":0,"264":1,"266":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/dom.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/dom.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1},"b":{"1":[1,0],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":1,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":27},"end":{"line":8,"column":55}}},"3":{"name":"get","line":9,"loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":26}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":14,"column":5}},"9":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"10":{"start":{"line":11,"column":12},"end":{"line":11,"column":22}},"11":{"start":{"line":13,"column":8},"end":{"line":13,"column":52}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":22}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":8}},{"start":{"line":10,"column":8},"end":{"line":10,"column":8}}]},"7":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":16},"end":{"line":13,"column":19}},{"start":{"line":13,"column":23},"end":{"line":13,"column":31}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\"], function (require, exports) {","    function get(id, doc) {","        if (typeof id !== 'string') {","            return id;","        }","        return (doc || document).getElementById(id);","    }","    exports.get = get;","});","//# sourceMappingURL=_debug/dom.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":0,"11":0,"13":0,"15":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/domReady.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/domReady.js","s":{"1":2,"2":2,"3":2,"4":0,"5":0,"6":0,"7":0,"8":2,"9":2,"10":2,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[2,0],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[2,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":36},"end":{"line":8,"column":64}}},"3":{"name":"processQueue","line":16,"loc":{"start":{"line":16,"column":4},"end":{"line":16,"column":28}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":54},"end":{"line":27,"column":66}}},"5":{"name":"(anonymous_5)","line":35,"loc":{"start":{"line":35,"column":19},"end":{"line":35,"column":39}}},"6":{"name":"(anonymous_6)","line":41,"loc":{"start":{"line":41,"column":20},"end":{"line":41,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":45,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":31}},"9":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"10":{"start":{"line":11,"column":8},"end":{"line":11,"column":93}},"11":{"start":{"line":13,"column":4},"end":{"line":13,"column":42}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":53}},"13":{"start":{"line":15,"column":4},"end":{"line":15,"column":86}},"14":{"start":{"line":16,"column":4},"end":{"line":25,"column":5}},"15":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"16":{"start":{"line":18,"column":12},"end":{"line":18,"column":19}},"17":{"start":{"line":20,"column":8},"end":{"line":20,"column":26}},"18":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"19":{"start":{"line":22,"column":12},"end":{"line":22,"column":36}},"20":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"21":{"start":{"line":26,"column":4},"end":{"line":34,"column":5}},"22":{"start":{"line":27,"column":8},"end":{"line":33,"column":11}},"23":{"start":{"line":28,"column":12},"end":{"line":30,"column":13}},"24":{"start":{"line":29,"column":16},"end":{"line":29,"column":23}},"25":{"start":{"line":31,"column":12},"end":{"line":31,"column":25}},"26":{"start":{"line":32,"column":12},"end":{"line":32,"column":27}},"27":{"start":{"line":35,"column":4},"end":{"line":40,"column":6}},"28":{"start":{"line":36,"column":8},"end":{"line":36,"column":34}},"29":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"30":{"start":{"line":38,"column":12},"end":{"line":38,"column":27}},"31":{"start":{"line":41,"column":4},"end":{"line":43,"column":6}},"32":{"start":{"line":42,"column":8},"end":{"line":42,"column":23}},"33":{"start":{"line":44,"column":4},"end":{"line":44,"column":20}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"7":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":8}},{"start":{"line":17,"column":8},"end":{"line":17,"column":8}}]},"8":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"9":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":12}},{"start":{"line":28,"column":12},"end":{"line":28,"column":12}}]},"10":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './has'], function (require, exports) {","    var has = require('./has');","    if (!has('host-browser')) {","        throw new Error('dojo/domReady makes no sense to load in a non-browser environment');","    }","    var readyStates = Object.create(null);","    readyStates.loaded = readyStates.complete = true;","    var ready = readyStates[document.readyState], readyQueue = [], processing = false;","    function processQueue() {","        if (processing) {","            return;","        }","        processing = true;","        for (var i = 0; i < readyQueue.length; i++) {","            readyQueue[i](document);","        }","        processing = false;","    }","    if (!ready) {","        document.addEventListener('DOMContentLoaded', function () {","            if (ready) {","                return;","            }","            ready = true;","            processQueue();","        });","    }","    var domReady = function (callback) {","        readyQueue.push(callback);","        if (ready) {","            processQueue();","        }","    };","    domReady.load = function (resourceId, require, load) {","        domReady(load);","    };","    return domReady;","});","//# sourceMappingURL=_debug/domReady.js.map"],"l":{"1":2,"2":2,"3":2,"5":0,"6":0,"9":2,"10":2,"11":2,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"20":0,"21":0,"22":0,"24":0,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"35":0,"36":0,"37":0,"38":0,"41":0,"42":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/Evented.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/Evented.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":47},"end":{"line":8,"column":75}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":19},"end":{"line":11,"column":31}}},"4":{"name":"Evented","line":12,"loc":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}}},"5":{"name":"(anonymous_5)","line":14,"loc":{"start":{"line":14,"column":31},"end":{"line":14,"column":57}}},"6":{"name":"(anonymous_6)","line":16,"loc":{"start":{"line":16,"column":56},"end":{"line":16,"column":80}}},"7":{"name":"(anonymous_7)","line":28,"loc":{"start":{"line":28,"column":33},"end":{"line":28,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":42,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":29}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":37}},"10":{"start":{"line":11,"column":4},"end":{"line":40,"column":9}},"11":{"start":{"line":12,"column":8},"end":{"line":13,"column":9}},"12":{"start":{"line":14,"column":8},"end":{"line":27,"column":10}},"13":{"start":{"line":15,"column":12},"end":{"line":15,"column":29}},"14":{"start":{"line":16,"column":12},"end":{"line":26,"column":15}},"15":{"start":{"line":17,"column":16},"end":{"line":17,"column":41}},"16":{"start":{"line":18,"column":16},"end":{"line":24,"column":17}},"17":{"start":{"line":19,"column":20},"end":{"line":23,"column":23}},"18":{"start":{"line":25,"column":16},"end":{"line":25,"column":65}},"19":{"start":{"line":28,"column":8},"end":{"line":38,"column":10}},"20":{"start":{"line":29,"column":12},"end":{"line":29,"column":26}},"21":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"22":{"start":{"line":31,"column":16},"end":{"line":31,"column":45}},"23":{"start":{"line":33,"column":12},"end":{"line":33,"column":33}},"24":{"start":{"line":34,"column":12},"end":{"line":34,"column":36}},"25":{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},"26":{"start":{"line":36,"column":16},"end":{"line":36,"column":48}},"27":{"start":{"line":39,"column":8},"end":{"line":39,"column":23}},"28":{"start":{"line":41,"column":4},"end":{"line":41,"column":19}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":16},"end":{"line":18,"column":16}},{"start":{"line":18,"column":16},"end":{"line":18,"column":16}}]},"7":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":12}},{"start":{"line":35,"column":12},"end":{"line":35,"column":12}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './on', './aspect'], function (require, exports) {","    var on = require('./on');","    var aspect = require('./aspect');","    var Evented = (function () {","        function Evented() {","        }","        Evented.prototype.on = function (type, listener) {","            var _this = this;","            return on.parse(this, type, listener, this, function (target, type) {","                var name = '__on' + type;","                if (!_this[name]) {","                    Object.defineProperty(_this, name, {","                        configurable: true,","                        value: undefined,","                        writable: true","                    });","                }","                return aspect.on(_this, '__on' + type, listener);","            });","        };","        Evented.prototype.emit = function (type) {","            var args = [];","            for (var _i = 1; _i < arguments.length; _i++) {","                args[_i - 1] = arguments[_i];","            }","            type = '__on' + type;","            var method = this[type];","            if (method) {","                return method.apply(this, args);","            }","        };","        return Evented;","    })();","    return Evented;","});","//# sourceMappingURL=_debug/Evented.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"25":0,"28":1,"29":0,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"39":1,"41":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/on.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/on.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":27},"end":{"line":8,"column":55}}},"3":{"name":"noop","line":9,"loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":20}}},"4":{"name":"addListener","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":58}}},"5":{"name":"(anonymous_5)","line":14,"loc":{"start":{"line":14,"column":24},"end":{"line":14,"column":36}}},"6":{"name":"(anonymous_6)","line":23,"loc":{"start":{"line":23,"column":13},"end":{"line":23,"column":56}}},"7":{"name":"(anonymous_7)","line":29,"loc":{"start":{"line":29,"column":15},"end":{"line":29,"column":80}}},"8":{"name":"(anonymous_8)","line":35,"loc":{"start":{"line":35,"column":37},"end":{"line":35,"column":53}}},"9":{"name":"(anonymous_9)","line":39,"loc":{"start":{"line":39,"column":24},"end":{"line":39,"column":36}}},"10":{"name":"(anonymous_10)","line":50,"loc":{"start":{"line":50,"column":14},"end":{"line":50,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":67,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":23}},"9":{"start":{"line":10,"column":4},"end":{"line":22,"column":5}},"10":{"start":{"line":11,"column":8},"end":{"line":20,"column":9}},"11":{"start":{"line":12,"column":12},"end":{"line":12,"column":61}},"12":{"start":{"line":13,"column":12},"end":{"line":19,"column":14}},"13":{"start":{"line":15,"column":20},"end":{"line":15,"column":39}},"14":{"start":{"line":16,"column":20},"end":{"line":16,"column":72}},"15":{"start":{"line":17,"column":20},"end":{"line":17,"column":45}},"16":{"start":{"line":21,"column":8},"end":{"line":21,"column":59}},"17":{"start":{"line":23,"column":4},"end":{"line":28,"column":6}},"18":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"19":{"start":{"line":25,"column":12},"end":{"line":25,"column":54}},"20":{"start":{"line":27,"column":8},"end":{"line":27,"column":76}},"21":{"start":{"line":29,"column":4},"end":{"line":49,"column":6}},"22":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"23":{"start":{"line":31,"column":12},"end":{"line":31,"column":65}},"24":{"start":{"line":33,"column":8},"end":{"line":47,"column":9}},"25":{"start":{"line":34,"column":12},"end":{"line":34,"column":47}},"26":{"start":{"line":35,"column":12},"end":{"line":37,"column":15}},"27":{"start":{"line":36,"column":16},"end":{"line":36,"column":68}},"28":{"start":{"line":38,"column":12},"end":{"line":46,"column":14}},"29":{"start":{"line":40,"column":20},"end":{"line":40,"column":39}},"30":{"start":{"line":41,"column":20},"end":{"line":41,"column":31}},"31":{"start":{"line":42,"column":20},"end":{"line":44,"column":21}},"32":{"start":{"line":43,"column":24},"end":{"line":43,"column":40}},"33":{"start":{"line":48,"column":8},"end":{"line":48,"column":60}},"34":{"start":{"line":50,"column":4},"end":{"line":65,"column":6}},"35":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"36":{"start":{"line":52,"column":12},"end":{"line":52,"column":44}},"37":{"start":{"line":54,"column":8},"end":{"line":63,"column":9}},"38":{"start":{"line":55,"column":12},"end":{"line":55,"column":77}},"39":{"start":{"line":56,"column":12},"end":{"line":56,"column":91}},"40":{"start":{"line":57,"column":12},"end":{"line":61,"column":13}},"41":{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},"42":{"start":{"line":59,"column":20},"end":{"line":59,"column":50}},"43":{"start":{"line":62,"column":12},"end":{"line":62,"column":53}},"44":{"start":{"line":64,"column":8},"end":{"line":64,"column":59}},"45":{"start":{"line":66,"column":4},"end":{"line":66,"column":14}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":8}},{"start":{"line":11,"column":8},"end":{"line":11,"column":8}}]},"7":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"8":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":43}},{"start":{"line":24,"column":47},"end":{"line":24,"column":73}},{"start":{"line":24,"column":77},"end":{"line":24,"column":93}}]},"9":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":8}},{"start":{"line":30,"column":8},"end":{"line":30,"column":8}}]},"10":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":8}},{"start":{"line":33,"column":8},"end":{"line":33,"column":8}}]},"11":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"12":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":45}},{"start":{"line":51,"column":49},"end":{"line":51,"column":65}}]},"13":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"14":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":32}},{"start":{"line":54,"column":36},"end":{"line":54,"column":56}},{"start":{"line":54,"column":60},"end":{"line":54,"column":92}}]},"15":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":16},"end":{"line":58,"column":16}},{"start":{"line":58,"column":16},"end":{"line":58,"column":16}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\"], function (require, exports) {","    function noop() { }","    function addListener(target, type, listener, capture) {","        if (target.addEventListener) {","            target.addEventListener(type, listener, capture);","            return {","                remove: function () {","                    this.remove = noop;","                    target.removeEventListener(type, listener, capture);","                    target = listener = null;","                }","            };","        }","        throw new Error('Target must be an event emitter');","    }","    var on = function (target, type, listener, capture) {","        if (typeof target.on === 'function' && typeof type !== 'function' && !target.nodeType) {","            return target.on(type, listener, capture);","        }","        return on.parse(target, type, listener, this, addListener, capture);","    };","    on.parse = function (target, type, listener, context, addListener, capture) {","        if (type.call) {","            return type.call(context, target, listener, capture);","        }","        if (type.indexOf(',') > -1) {","            var events = type.split(/\\s*,\\s*/);","            var handles = events.map(function (type) {","                return addListener(target, type, listener, capture);","            });","            return {","                remove: function () {","                    this.remove = noop;","                    var handle;","                    while ((handle = handles.pop())) {","                        handle.remove();","                    }","                }","            };","        }","        return addListener(target, type, listener, capture);","    };","    on.emit = function (target, type, event) {","        if (typeof target.emit === 'function' && !target.nodeType) {","            return target.emit(type, event);","        }","        if (target.dispatchEvent && target.ownerDocument && target.ownerDocument.createEvent) {","            var nativeEvent = target.ownerDocument.createEvent('HTMLEvents');","            nativeEvent.initEvent(type, Boolean(event.bubbles), Boolean(event.cancelable));","            for (var key in event) {","                if (!(key in nativeEvent)) {","                    nativeEvent[key] = event[key];","                }","            }","            return target.dispatchEvent(nativeEvent);","        }","        throw new Error('Target must be an event emitter');","    };","    return on;","});","//# sourceMappingURL=_debug/on.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":0,"12":0,"13":0,"15":0,"16":0,"17":0,"21":0,"23":1,"24":0,"25":0,"27":0,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"38":0,"40":0,"41":0,"42":0,"43":0,"48":0,"50":1,"51":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"62":0,"64":0,"66":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/io-query.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/io-query.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,0],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":1,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":1},"end":{"line":6,"column":26}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":27},"end":{"line":13,"column":55}}},"3":{"name":"objectToQuery","line":14,"loc":{"start":{"line":14,"column":4},"end":{"line":14,"column":32}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":35,"column":3}},"2":{"start":{"line":7,"column":4},"end":{"line":12,"column":5}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":42}},"4":{"start":{"line":8,"column":43},"end":{"line":8,"column":83}},"5":{"start":{"line":8,"column":64},"end":{"line":8,"column":83}},"6":{"start":{"line":10,"column":9},"end":{"line":12,"column":5}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":30}},"8":{"start":{"line":14,"column":4},"end":{"line":33,"column":5}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":18}},"11":{"start":{"line":17,"column":8},"end":{"line":31,"column":9}},"12":{"start":{"line":18,"column":12},"end":{"line":18,"column":29}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":42}},"14":{"start":{"line":20,"column":12},"end":{"line":30,"column":13}},"15":{"start":{"line":21,"column":16},"end":{"line":21,"column":41}},"16":{"start":{"line":23,"column":17},"end":{"line":30,"column":13}},"17":{"start":{"line":24,"column":16},"end":{"line":26,"column":17}},"18":{"start":{"line":25,"column":20},"end":{"line":25,"column":73}},"19":{"start":{"line":29,"column":16},"end":{"line":29,"column":66}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"21":{"start":{"line":34,"column":4},"end":{"line":34,"column":42}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":4}},{"start":{"line":7,"column":4},"end":{"line":7,"column":4}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":8},"end":{"line":7,"column":34}},{"start":{"line":7,"column":38},"end":{"line":7,"column":72}}]},"3":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":43},"end":{"line":8,"column":43}},{"start":{"line":8,"column":43},"end":{"line":8,"column":43}}]},"4":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":9},"end":{"line":10,"column":9}},{"start":{"line":10,"column":9},"end":{"line":10,"column":9}}]},"5":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":13},"end":{"line":10,"column":41}},{"start":{"line":10,"column":45},"end":{"line":10,"column":55}}]},"6":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":12}},{"start":{"line":20,"column":12},"end":{"line":20,"column":12}}]},"7":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":16},"end":{"line":21,"column":21}},{"start":{"line":21,"column":25},"end":{"line":21,"column":40}}]},"8":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":17},"end":{"line":23,"column":17}},{"start":{"line":23,"column":17},"end":{"line":23,"column":17}}]}},"code":["/**"," * @module dojo/io-query"," *"," * This module defines query string processing functions."," */","(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\"], function (require, exports) {","    function objectToQuery(map) {","        var query = [];","        var value;","        for (var key in map) {","            value = map[key];","            key = encodeURIComponent(key);","            if (typeof value === 'boolean') {","                value && query.push(key);","            }","            else if (Array.isArray(value)) {","                for (var i = 0, j = value.length; i < j; ++i) {","                    query.push(key + '=' + encodeURIComponent(value[i]));","                }","            }","            else {","                query.push(key + '=' + encodeURIComponent(value));","            }","        }","        return query.join('&');","    }","    exports.objectToQuery = objectToQuery;","});","//# sourceMappingURL=_debug/io-query.js.map"],"l":{"6":1,"7":1,"8":1,"10":0,"11":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"23":0,"24":0,"25":0,"29":0,"32":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/kernel.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/kernel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0},"b":{"1":[1,0],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[1,1],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":1,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":27},"end":{"line":8,"column":55}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":18},"end":{"line":15,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":21,"column":6}},"9":{"start":{"line":16,"column":12},"end":{"line":16,"column":25}},"10":{"start":{"line":17,"column":12},"end":{"line":19,"column":53}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":19},"end":{"line":14,"column":48}},{"start":{"line":14,"column":52},"end":{"line":14,"column":54}}]},"7":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":26},"end":{"line":18,"column":38}},{"start":{"line":18,"column":41},"end":{"line":18,"column":43}}]},"8":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":30},"end":{"line":19,"column":46}},{"start":{"line":19,"column":49},"end":{"line":19,"column":51}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\"], function (require, exports) {","    exports.version = {","        major: 2,","        minor: 0,","        patch: 0,","        flag: 'dev',","        revision: ('$Rev$'.match(/[0-9a-f]{7,}/) || [])[0],","        toString: function () {","            var v = this;","            return v.major + '.' + v.minor + '.' + v.patch +","                (v.flag ? '-' + v.flag : '') +","                (v.revision ? '+' + v.revision : '');","        }","    };","});","//# sourceMappingURL=_debug/kernel.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"16":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/loader.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/loader.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":430,"17":1,"18":11,"19":11,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":0,"60":1,"61":2,"62":5,"63":2,"64":1,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":1,"99":1,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":1,"168":0,"169":0,"170":0,"171":1,"172":3,"173":3,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":1,"226":1,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":1,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":1,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":1,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":1,"292":0,"293":0,"294":0,"295":1,"296":1,"297":0,"298":0,"299":0,"300":0,"301":0,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":1,"319":1,"320":1,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":1,"340":1,"341":1,"342":0,"343":1,"344":1,"345":1,"346":0,"347":0,"348":1,"349":0,"350":0,"351":1,"352":2,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":210,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":210,"368":2,"369":2,"370":2,"371":2,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":210,"380":0,"381":0,"382":0,"383":0,"384":210,"385":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[1,0],"5":[0,430],"6":[11,0,11],"7":[11,0],"8":[1,0],"9":[1,1,1],"10":[1,0],"11":[1,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[1,0],"52":[0,0],"53":[0,0],"54":[0,0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0,0,0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,1],"88":[1,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[1,0],"96":[1,0],"97":[0,0],"98":[1,0],"99":[0,210],"100":[210,210],"101":[0,0],"102":[2,208],"103":[2,0],"104":[2,2],"105":[0,0],"106":[0,210],"107":[0,0]},"f":{"1":1,"2":0,"3":1,"4":430,"5":11,"6":0,"7":0,"8":0,"9":0,"10":0,"11":2,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":3,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":2,"58":210,"59":0,"60":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":13}}},"2":{"name":"(anonymous_2)","line":2,"loc":{"start":{"line":2,"column":14},"end":{"line":2,"column":56}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":25},"end":{"line":13,"column":37}}},"4":{"name":"(anonymous_4)","line":18,"loc":{"start":{"line":18,"column":18},"end":{"line":18,"column":34}}},"5":{"name":"(anonymous_5)","line":21,"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":52}}},"6":{"name":"(anonymous_6)","line":33,"loc":{"start":{"line":33,"column":37},"end":{"line":33,"column":55}}},"7":{"name":"(anonymous_7)","line":35,"loc":{"start":{"line":35,"column":37},"end":{"line":35,"column":50}}},"8":{"name":"computeMapProg","line":44,"loc":{"start":{"line":44,"column":12},"end":{"line":44,"column":41}}},"9":{"name":"(anonymous_9)","line":90,"loc":{"start":{"line":90,"column":28},"end":{"line":90,"column":48}}},"10":{"name":"forEach","line":108,"loc":{"start":{"line":108,"column":4},"end":{"line":108,"column":38}}},"11":{"name":"mix","line":111,"loc":{"start":{"line":111,"column":4},"end":{"line":111,"column":33}}},"12":{"name":"signal","line":117,"loc":{"start":{"line":117,"column":4},"end":{"line":117,"column":33}}},"13":{"name":"consumePendingCacheInsert","line":120,"loc":{"start":{"line":120,"column":4},"end":{"line":120,"column":56}}},"14":{"name":"contextRequire","line":129,"loc":{"start":{"line":129,"column":4},"end":{"line":129,"column":53}}},"15":{"name":"(anonymous_15)","line":145,"loc":{"start":{"line":145,"column":31},"end":{"line":145,"column":43}}},"16":{"name":"createRequire","line":153,"loc":{"start":{"line":153,"column":4},"end":{"line":153,"column":35}}},"17":{"name":"(anonymous_17)","line":156,"loc":{"start":{"line":156,"column":38},"end":{"line":156,"column":56}}},"18":{"name":"(anonymous_18)","line":160,"loc":{"start":{"line":160,"column":23},"end":{"line":160,"column":39}}},"19":{"name":"(anonymous_19)","line":163,"loc":{"start":{"line":163,"column":26},"end":{"line":163,"column":41}}},"20":{"name":"runMapProg","line":173,"loc":{"start":{"line":173,"column":4},"end":{"line":173,"column":40}}},"21":{"name":"compactPath","line":183,"loc":{"start":{"line":183,"column":4},"end":{"line":183,"column":31}}},"22":{"name":"getModuleInfo","line":200,"loc":{"start":{"line":200,"column":4},"end":{"line":200,"column":49}}},"23":{"name":"resolvePluginResourceId","line":237,"loc":{"start":{"line":237,"column":4},"end":{"line":237,"column":67}}},"24":{"name":"getModule","line":240,"loc":{"start":{"line":240,"column":4},"end":{"line":240,"column":45}}},"25":{"name":"toAbsMid","line":273,"loc":{"start":{"line":273,"column":4},"end":{"line":273,"column":44}}},"26":{"name":"toUrl","line":276,"loc":{"start":{"line":276,"column":4},"end":{"line":276,"column":42}}},"27":{"name":"makeCjs","line":281,"loc":{"start":{"line":281,"column":4},"end":{"line":281,"column":26}}},"28":{"name":"execModule","line":299,"loc":{"start":{"line":299,"column":4},"end":{"line":299,"column":32}}},"29":{"name":"(anonymous_29)","line":318,"loc":{"start":{"line":318,"column":28},"end":{"line":318,"column":43}}},"30":{"name":"(anonymous_30)","line":339,"loc":{"start":{"line":339,"column":78},"end":{"line":339,"column":93}}},"31":{"name":"(anonymous_31)","line":342,"loc":{"start":{"line":342,"column":34},"end":{"line":342,"column":66}}},"32":{"name":"guardCheckComplete","line":359,"loc":{"start":{"line":359,"column":4},"end":{"line":359,"column":38}}},"33":{"name":"checkComplete","line":365,"loc":{"start":{"line":365,"column":4},"end":{"line":365,"column":29}}},"34":{"name":"(anonymous_34)","line":366,"loc":{"start":{"line":366,"column":50},"end":{"line":366,"column":62}}},"35":{"name":"injectPlugin","line":385,"loc":{"start":{"line":385,"column":4},"end":{"line":385,"column":34}}},"36":{"name":"(anonymous_36)","line":387,"loc":{"start":{"line":387,"column":21},"end":{"line":387,"column":36}}},"37":{"name":"injectModule","line":405,"loc":{"start":{"line":405,"column":4},"end":{"line":405,"column":42}}},"38":{"name":"(anonymous_38)","line":415,"loc":{"start":{"line":415,"column":33},"end":{"line":415,"column":49}}},"39":{"name":"(anonymous_39)","line":425,"loc":{"start":{"line":425,"column":35},"end":{"line":425,"column":47}}},"40":{"name":"resolveDeps","line":445,"loc":{"start":{"line":445,"column":4},"end":{"line":445,"column":56}}},"41":{"name":"(anonymous_41)","line":446,"loc":{"start":{"line":446,"column":24},"end":{"line":446,"column":42}}},"42":{"name":"(anonymous_42)","line":449,"loc":{"start":{"line":449,"column":29},"end":{"line":449,"column":42}}},"43":{"name":"defineModule","line":456,"loc":{"start":{"line":456,"column":4},"end":{"line":456,"column":45}}},"44":{"name":"(anonymous_44)","line":465,"loc":{"start":{"line":465,"column":28},"end":{"line":465,"column":47}}},"45":{"name":"(anonymous_45)","line":473,"loc":{"start":{"line":473,"column":28},"end":{"line":473,"column":47}}},"46":{"name":"(anonymous_46)","line":476,"loc":{"start":{"line":476,"column":19},"end":{"line":476,"column":31}}},"47":{"name":"(anonymous_47)","line":487,"loc":{"start":{"line":487,"column":20},"end":{"line":487,"column":61}}},"48":{"name":"(anonymous_48)","line":488,"loc":{"start":{"line":488,"column":37},"end":{"line":488,"column":60}}},"49":{"name":"(anonymous_49)","line":503,"loc":{"start":{"line":503,"column":21},"end":{"line":503,"column":48}}},"50":{"name":"(anonymous_50)","line":509,"loc":{"start":{"line":509,"column":20},"end":{"line":509,"column":61}}},"51":{"name":"(anonymous_51)","line":511,"loc":{"start":{"line":511,"column":26},"end":{"line":511,"column":43}}},"52":{"name":"(anonymous_52)","line":527,"loc":{"start":{"line":527,"column":21},"end":{"line":527,"column":48}}},"53":{"name":"(anonymous_53)","line":537,"loc":{"start":{"line":537,"column":22},"end":{"line":537,"column":38}}},"54":{"name":"(anonymous_54)","line":543,"loc":{"start":{"line":543,"column":20},"end":{"line":543,"column":34}}},"55":{"name":"(anonymous_55)","line":550,"loc":{"start":{"line":550,"column":16},"end":{"line":550,"column":28}}},"56":{"name":"(anonymous_56)","line":553,"loc":{"start":{"line":553,"column":15},"end":{"line":553,"column":32}}},"57":{"name":"(anonymous_57)","line":559,"loc":{"start":{"line":559,"column":13},"end":{"line":559,"column":25}}},"58":{"name":"(anonymous_58)","line":570,"loc":{"start":{"line":570,"column":21},"end":{"line":570,"column":46}}},"59":{"name":"(anonymous_59)","line":587,"loc":{"start":{"line":587,"column":42},"end":{"line":587,"column":54}}},"60":{"name":"(anonymous_60)","line":595,"loc":{"start":{"line":595,"column":26},"end":{"line":595,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":615,"column":5}},"2":{"start":{"line":2,"column":4},"end":{"line":12,"column":6}},"3":{"start":{"line":3,"column":8},"end":{"line":7,"column":9}},"4":{"start":{"line":4,"column":12},"end":{"line":4,"column":36}},"5":{"start":{"line":5,"column":12},"end":{"line":5,"column":34}},"6":{"start":{"line":6,"column":12},"end":{"line":6,"column":24}},"7":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"8":{"start":{"line":9,"column":12},"end":{"line":9,"column":30}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":47}},"10":{"start":{"line":13,"column":4},"end":{"line":26,"column":9}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":43}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":26}},"13":{"start":{"line":16,"column":8},"end":{"line":16,"column":39}},"14":{"start":{"line":17,"column":8},"end":{"line":17,"column":64}},"15":{"start":{"line":18,"column":8},"end":{"line":20,"column":10}},"16":{"start":{"line":19,"column":12},"end":{"line":19,"column":136}},"17":{"start":{"line":21,"column":8},"end":{"line":24,"column":10}},"18":{"start":{"line":22,"column":12},"end":{"line":22,"column":70}},"19":{"start":{"line":23,"column":12},"end":{"line":23,"column":29}},"20":{"start":{"line":25,"column":8},"end":{"line":25,"column":19}},"21":{"start":{"line":27,"column":4},"end":{"line":27,"column":96}},"22":{"start":{"line":28,"column":4},"end":{"line":28,"column":99}},"23":{"start":{"line":29,"column":4},"end":{"line":29,"column":27}},"24":{"start":{"line":30,"column":4},"end":{"line":30,"column":102}},"25":{"start":{"line":31,"column":4},"end":{"line":31,"column":41}},"26":{"start":{"line":32,"column":4},"end":{"line":99,"column":5}},"27":{"start":{"line":33,"column":8},"end":{"line":98,"column":10}},"28":{"start":{"line":34,"column":12},"end":{"line":34,"column":71}},"29":{"start":{"line":35,"column":12},"end":{"line":43,"column":15}},"30":{"start":{"line":36,"column":16},"end":{"line":38,"column":17}},"31":{"start":{"line":37,"column":20},"end":{"line":37,"column":49}},"32":{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},"33":{"start":{"line":40,"column":20},"end":{"line":40,"column":65}},"34":{"start":{"line":42,"column":16},"end":{"line":42,"column":34}},"35":{"start":{"line":44,"column":12},"end":{"line":94,"column":13}},"36":{"start":{"line":75,"column":16},"end":{"line":75,"column":32}},"37":{"start":{"line":76,"column":16},"end":{"line":89,"column":17}},"38":{"start":{"line":77,"column":20},"end":{"line":77,"column":46}},"39":{"start":{"line":78,"column":20},"end":{"line":78,"column":74}},"40":{"start":{"line":79,"column":20},"end":{"line":84,"column":22}},"41":{"start":{"line":85,"column":20},"end":{"line":85,"column":38}},"42":{"start":{"line":86,"column":20},"end":{"line":88,"column":21}},"43":{"start":{"line":87,"column":24},"end":{"line":87,"column":46}},"44":{"start":{"line":90,"column":16},"end":{"line":92,"column":19}},"45":{"start":{"line":91,"column":20},"end":{"line":91,"column":43}},"46":{"start":{"line":93,"column":16},"end":{"line":93,"column":30}},"47":{"start":{"line":95,"column":12},"end":{"line":95,"column":33}},"48":{"start":{"line":96,"column":12},"end":{"line":96,"column":43}},"49":{"start":{"line":97,"column":12},"end":{"line":97,"column":74}},"50":{"start":{"line":100,"column":4},"end":{"line":100,"column":23}},"51":{"start":{"line":101,"column":4},"end":{"line":101,"column":19}},"52":{"start":{"line":102,"column":4},"end":{"line":102,"column":26}},"53":{"start":{"line":103,"column":4},"end":{"line":103,"column":17}},"54":{"start":{"line":104,"column":4},"end":{"line":104,"column":22}},"55":{"start":{"line":105,"column":4},"end":{"line":105,"column":21}},"56":{"start":{"line":106,"column":4},"end":{"line":106,"column":19}},"57":{"start":{"line":107,"column":4},"end":{"line":107,"column":32}},"58":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"59":{"start":{"line":109,"column":8},"end":{"line":109,"column":41}},"60":{"start":{"line":111,"column":4},"end":{"line":116,"column":5}},"61":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"62":{"start":{"line":113,"column":12},"end":{"line":113,"column":38}},"63":{"start":{"line":115,"column":8},"end":{"line":115,"column":22}},"64":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"65":{"start":{"line":118,"column":8},"end":{"line":118,"column":41}},"66":{"start":{"line":120,"column":4},"end":{"line":127,"column":5}},"67":{"start":{"line":121,"column":8},"end":{"line":121,"column":17}},"68":{"start":{"line":122,"column":8},"end":{"line":125,"column":9}},"69":{"start":{"line":123,"column":12},"end":{"line":123,"column":43}},"70":{"start":{"line":124,"column":12},"end":{"line":124,"column":123}},"71":{"start":{"line":126,"column":8},"end":{"line":126,"column":32}},"72":{"start":{"line":128,"column":4},"end":{"line":128,"column":25}},"73":{"start":{"line":129,"column":4},"end":{"line":152,"column":5}},"74":{"start":{"line":130,"column":8},"end":{"line":130,"column":19}},"75":{"start":{"line":131,"column":8},"end":{"line":150,"column":9}},"76":{"start":{"line":132,"column":12},"end":{"line":132,"column":52}},"77":{"start":{"line":133,"column":12},"end":{"line":135,"column":13}},"78":{"start":{"line":134,"column":16},"end":{"line":134,"column":84}},"79":{"start":{"line":136,"column":12},"end":{"line":136,"column":35}},"80":{"start":{"line":138,"column":13},"end":{"line":150,"column":9}},"81":{"start":{"line":139,"column":12},"end":{"line":139,"column":59}},"82":{"start":{"line":140,"column":12},"end":{"line":144,"column":15}},"83":{"start":{"line":145,"column":12},"end":{"line":147,"column":15}},"84":{"start":{"line":146,"column":16},"end":{"line":146,"column":70}},"85":{"start":{"line":148,"column":12},"end":{"line":148,"column":31}},"86":{"start":{"line":149,"column":12},"end":{"line":149,"column":28}},"87":{"start":{"line":151,"column":8},"end":{"line":151,"column":22}},"88":{"start":{"line":153,"column":4},"end":{"line":169,"column":5}},"89":{"start":{"line":154,"column":8},"end":{"line":154,"column":56}},"90":{"start":{"line":155,"column":8},"end":{"line":167,"column":9}},"91":{"start":{"line":156,"column":12},"end":{"line":158,"column":14}},"92":{"start":{"line":157,"column":16},"end":{"line":157,"column":54}},"93":{"start":{"line":159,"column":12},"end":{"line":166,"column":15}},"94":{"start":{"line":161,"column":20},"end":{"line":161,"column":47}},"95":{"start":{"line":164,"column":20},"end":{"line":164,"column":49}},"96":{"start":{"line":168,"column":8},"end":{"line":168,"column":22}},"97":{"start":{"line":170,"column":4},"end":{"line":170,"column":19}},"98":{"start":{"line":171,"column":4},"end":{"line":171,"column":23}},"99":{"start":{"line":172,"column":4},"end":{"line":172,"column":25}},"100":{"start":{"line":173,"column":4},"end":{"line":182,"column":5}},"101":{"start":{"line":174,"column":8},"end":{"line":180,"column":9}},"102":{"start":{"line":175,"column":12},"end":{"line":179,"column":13}},"103":{"start":{"line":176,"column":16},"end":{"line":178,"column":17}},"104":{"start":{"line":177,"column":20},"end":{"line":177,"column":34}},"105":{"start":{"line":181,"column":8},"end":{"line":181,"column":20}},"106":{"start":{"line":183,"column":4},"end":{"line":199,"column":5}},"107":{"start":{"line":184,"column":8},"end":{"line":184,"column":24}},"108":{"start":{"line":185,"column":8},"end":{"line":185,"column":20}},"109":{"start":{"line":186,"column":8},"end":{"line":186,"column":24}},"110":{"start":{"line":187,"column":8},"end":{"line":187,"column":60}},"111":{"start":{"line":188,"column":8},"end":{"line":197,"column":9}},"112":{"start":{"line":189,"column":12},"end":{"line":189,"column":40}},"113":{"start":{"line":190,"column":12},"end":{"line":196,"column":13}},"114":{"start":{"line":191,"column":16},"end":{"line":191,"column":29}},"115":{"start":{"line":192,"column":16},"end":{"line":192,"column":56}},"116":{"start":{"line":194,"column":17},"end":{"line":196,"column":13}},"117":{"start":{"line":195,"column":16},"end":{"line":195,"column":53}},"118":{"start":{"line":198,"column":8},"end":{"line":198,"column":32}},"119":{"start":{"line":200,"column":4},"end":{"line":236,"column":5}},"120":{"start":{"line":201,"column":8},"end":{"line":201,"column":18}},"121":{"start":{"line":202,"column":8},"end":{"line":202,"column":16}},"122":{"start":{"line":203,"column":8},"end":{"line":203,"column":17}},"123":{"start":{"line":204,"column":8},"end":{"line":204,"column":25}},"124":{"start":{"line":205,"column":8},"end":{"line":205,"column":20}},"125":{"start":{"line":206,"column":8},"end":{"line":206,"column":16}},"126":{"start":{"line":207,"column":8},"end":{"line":207,"column":19}},"127":{"start":{"line":208,"column":8},"end":{"line":208,"column":107}},"128":{"start":{"line":209,"column":8},"end":{"line":209,"column":85}},"129":{"start":{"line":210,"column":8},"end":{"line":210,"column":61}},"130":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"131":{"start":{"line":212,"column":12},"end":{"line":212,"column":53}},"132":{"start":{"line":214,"column":8},"end":{"line":214,"column":49}},"133":{"start":{"line":215,"column":8},"end":{"line":215,"column":36}},"134":{"start":{"line":216,"column":8},"end":{"line":216,"column":26}},"135":{"start":{"line":217,"column":8},"end":{"line":222,"column":9}},"136":{"start":{"line":218,"column":12},"end":{"line":218,"column":81}},"137":{"start":{"line":221,"column":12},"end":{"line":221,"column":21}},"138":{"start":{"line":223,"column":8},"end":{"line":234,"column":9}},"139":{"start":{"line":224,"column":12},"end":{"line":224,"column":52}},"140":{"start":{"line":225,"column":12},"end":{"line":225,"column":108}},"141":{"start":{"line":226,"column":12},"end":{"line":233,"column":14}},"142":{"start":{"line":235,"column":8},"end":{"line":235,"column":22}},"143":{"start":{"line":237,"column":4},"end":{"line":239,"column":5}},"144":{"start":{"line":238,"column":8},"end":{"line":238,"column":114}},"145":{"start":{"line":240,"column":4},"end":{"line":272,"column":5}},"146":{"start":{"line":241,"column":8},"end":{"line":241,"column":18}},"147":{"start":{"line":242,"column":8},"end":{"line":242,"column":19}},"148":{"start":{"line":243,"column":8},"end":{"line":243,"column":17}},"149":{"start":{"line":244,"column":8},"end":{"line":244,"column":19}},"150":{"start":{"line":245,"column":8},"end":{"line":245,"column":27}},"151":{"start":{"line":246,"column":8},"end":{"line":246,"column":19}},"152":{"start":{"line":247,"column":8},"end":{"line":247,"column":43}},"153":{"start":{"line":248,"column":8},"end":{"line":270,"column":9}},"154":{"start":{"line":249,"column":12},"end":{"line":249,"column":58}},"155":{"start":{"line":250,"column":12},"end":{"line":250,"column":42}},"156":{"start":{"line":251,"column":12},"end":{"line":251,"column":60}},"157":{"start":{"line":252,"column":12},"end":{"line":259,"column":13}},"158":{"start":{"line":253,"column":16},"end":{"line":253,"column":81}},"159":{"start":{"line":254,"column":16},"end":{"line":254,"column":95}},"160":{"start":{"line":257,"column":16},"end":{"line":257,"column":32}},"161":{"start":{"line":258,"column":16},"end":{"line":258,"column":65}},"162":{"start":{"line":260,"column":12},"end":{"line":266,"column":14}},"163":{"start":{"line":269,"column":12},"end":{"line":269,"column":57}},"164":{"start":{"line":271,"column":8},"end":{"line":271,"column":69}},"165":{"start":{"line":273,"column":4},"end":{"line":275,"column":5}},"166":{"start":{"line":274,"column":8},"end":{"line":274,"column":55}},"167":{"start":{"line":276,"column":4},"end":{"line":280,"column":5}},"168":{"start":{"line":277,"column":8},"end":{"line":277,"column":69}},"169":{"start":{"line":278,"column":8},"end":{"line":278,"column":33}},"170":{"start":{"line":279,"column":8},"end":{"line":279,"column":44}},"171":{"start":{"line":281,"column":4},"end":{"line":288,"column":5}},"172":{"start":{"line":282,"column":8},"end":{"line":286,"column":10}},"173":{"start":{"line":287,"column":8},"end":{"line":287,"column":22}},"174":{"start":{"line":289,"column":4},"end":{"line":289,"column":46}},"175":{"start":{"line":290,"column":4},"end":{"line":290,"column":46}},"176":{"start":{"line":291,"column":4},"end":{"line":291,"column":44}},"177":{"start":{"line":292,"column":4},"end":{"line":292,"column":32}},"178":{"start":{"line":293,"column":4},"end":{"line":293,"column":23}},"179":{"start":{"line":294,"column":4},"end":{"line":294,"column":34}},"180":{"start":{"line":295,"column":4},"end":{"line":295,"column":56}},"181":{"start":{"line":296,"column":4},"end":{"line":298,"column":5}},"182":{"start":{"line":297,"column":8},"end":{"line":297,"column":31}},"183":{"start":{"line":299,"column":4},"end":{"line":357,"column":5}},"184":{"start":{"line":300,"column":8},"end":{"line":307,"column":9}},"185":{"start":{"line":301,"column":12},"end":{"line":305,"column":13}},"186":{"start":{"line":304,"column":16},"end":{"line":304,"column":102}},"187":{"start":{"line":306,"column":12},"end":{"line":306,"column":38}},"188":{"start":{"line":308,"column":8},"end":{"line":355,"column":9}},"189":{"start":{"line":309,"column":12},"end":{"line":311,"column":13}},"190":{"start":{"line":310,"column":16},"end":{"line":310,"column":33}},"191":{"start":{"line":312,"column":12},"end":{"line":312,"column":35}},"192":{"start":{"line":313,"column":12},"end":{"line":313,"column":37}},"193":{"start":{"line":314,"column":12},"end":{"line":314,"column":23}},"194":{"start":{"line":315,"column":12},"end":{"line":315,"column":21}},"195":{"start":{"line":316,"column":12},"end":{"line":316,"column":88}},"196":{"start":{"line":317,"column":12},"end":{"line":317,"column":40}},"197":{"start":{"line":318,"column":12},"end":{"line":326,"column":15}},"198":{"start":{"line":319,"column":16},"end":{"line":324,"column":17}},"199":{"start":{"line":320,"column":20},"end":{"line":323,"column":51}},"200":{"start":{"line":325,"column":16},"end":{"line":325,"column":30}},"201":{"start":{"line":327,"column":12},"end":{"line":331,"column":13}},"202":{"start":{"line":328,"column":16},"end":{"line":328,"column":40}},"203":{"start":{"line":329,"column":16},"end":{"line":329,"column":81}},"204":{"start":{"line":330,"column":16},"end":{"line":330,"column":33}},"205":{"start":{"line":332,"column":12},"end":{"line":332,"column":89}},"206":{"start":{"line":333,"column":12},"end":{"line":333,"column":102}},"207":{"start":{"line":334,"column":12},"end":{"line":334,"column":35}},"208":{"start":{"line":335,"column":12},"end":{"line":335,"column":37}},"209":{"start":{"line":336,"column":12},"end":{"line":338,"column":13}},"210":{"start":{"line":337,"column":16},"end":{"line":337,"column":48}},"211":{"start":{"line":339,"column":12},"end":{"line":341,"column":15}},"212":{"start":{"line":340,"column":16},"end":{"line":340,"column":42}},"213":{"start":{"line":342,"column":12},"end":{"line":352,"column":15}},"214":{"start":{"line":343,"column":16},"end":{"line":343,"column":112}},"215":{"start":{"line":344,"column":16},"end":{"line":344,"column":117}},"216":{"start":{"line":345,"column":16},"end":{"line":345,"column":98}},"217":{"start":{"line":346,"column":16},"end":{"line":348,"column":17}},"218":{"start":{"line":347,"column":20},"end":{"line":347,"column":66}},"219":{"start":{"line":349,"column":16},"end":{"line":349,"column":55}},"220":{"start":{"line":350,"column":16},"end":{"line":350,"column":31}},"221":{"start":{"line":351,"column":16},"end":{"line":351,"column":62}},"222":{"start":{"line":353,"column":12},"end":{"line":353,"column":37}},"223":{"start":{"line":354,"column":12},"end":{"line":354,"column":77}},"224":{"start":{"line":356,"column":8},"end":{"line":356,"column":29}},"225":{"start":{"line":358,"column":4},"end":{"line":358,"column":31}},"226":{"start":{"line":359,"column":4},"end":{"line":364,"column":5}},"227":{"start":{"line":360,"column":8},"end":{"line":360,"column":29}},"228":{"start":{"line":361,"column":8},"end":{"line":361,"column":15}},"229":{"start":{"line":362,"column":8},"end":{"line":362,"column":29}},"230":{"start":{"line":363,"column":8},"end":{"line":363,"column":96}},"231":{"start":{"line":365,"column":4},"end":{"line":384,"column":5}},"232":{"start":{"line":366,"column":8},"end":{"line":383,"column":11}},"233":{"start":{"line":367,"column":12},"end":{"line":382,"column":13}},"234":{"start":{"line":368,"column":16},"end":{"line":368,"column":34}},"235":{"start":{"line":369,"column":16},"end":{"line":381,"column":17}},"236":{"start":{"line":370,"column":20},"end":{"line":370,"column":39}},"237":{"start":{"line":373,"column":20},"end":{"line":373,"column":46}},"238":{"start":{"line":374,"column":20},"end":{"line":374,"column":39}},"239":{"start":{"line":375,"column":20},"end":{"line":380,"column":21}},"240":{"start":{"line":376,"column":24},"end":{"line":376,"column":30}},"241":{"start":{"line":379,"column":24},"end":{"line":379,"column":28}},"242":{"start":{"line":385,"column":4},"end":{"line":404,"column":5}},"243":{"start":{"line":386,"column":8},"end":{"line":386,"column":35}},"244":{"start":{"line":387,"column":8},"end":{"line":392,"column":10}},"245":{"start":{"line":388,"column":12},"end":{"line":388,"column":32}},"246":{"start":{"line":389,"column":12},"end":{"line":389,"column":27}},"247":{"start":{"line":390,"column":12},"end":{"line":390,"column":35}},"248":{"start":{"line":391,"column":12},"end":{"line":391,"column":28}},"249":{"start":{"line":393,"column":8},"end":{"line":403,"column":9}},"250":{"start":{"line":394,"column":12},"end":{"line":394,"column":57}},"251":{"start":{"line":396,"column":13},"end":{"line":403,"column":9}},"252":{"start":{"line":397,"column":12},"end":{"line":397,"column":38}},"253":{"start":{"line":400,"column":12},"end":{"line":400,"column":36}},"254":{"start":{"line":401,"column":12},"end":{"line":401,"column":34}},"255":{"start":{"line":402,"column":12},"end":{"line":402,"column":41}},"256":{"start":{"line":405,"column":4},"end":{"line":444,"column":5}},"257":{"start":{"line":406,"column":8},"end":{"line":409,"column":9}},"258":{"start":{"line":407,"column":12},"end":{"line":407,"column":28}},"259":{"start":{"line":408,"column":12},"end":{"line":408,"column":26}},"260":{"start":{"line":410,"column":8},"end":{"line":443,"column":9}},"261":{"start":{"line":411,"column":12},"end":{"line":411,"column":33}},"262":{"start":{"line":413,"column":13},"end":{"line":443,"column":9}},"263":{"start":{"line":414,"column":12},"end":{"line":414,"column":23}},"264":{"start":{"line":415,"column":12},"end":{"line":429,"column":14}},"265":{"start":{"line":416,"column":16},"end":{"line":416,"column":50}},"266":{"start":{"line":417,"column":16},"end":{"line":419,"column":17}},"267":{"start":{"line":418,"column":20},"end":{"line":418,"column":43}},"268":{"start":{"line":420,"column":16},"end":{"line":422,"column":17}},"269":{"start":{"line":421,"column":20},"end":{"line":421,"column":46}},"270":{"start":{"line":423,"column":16},"end":{"line":423,"column":61}},"271":{"start":{"line":424,"column":16},"end":{"line":424,"column":31}},"272":{"start":{"line":425,"column":16},"end":{"line":427,"column":19}},"273":{"start":{"line":426,"column":20},"end":{"line":426,"column":74}},"274":{"start":{"line":428,"column":16},"end":{"line":428,"column":32}},"275":{"start":{"line":430,"column":12},"end":{"line":430,"column":27}},"276":{"start":{"line":431,"column":12},"end":{"line":431,"column":35}},"277":{"start":{"line":432,"column":12},"end":{"line":441,"column":13}},"278":{"start":{"line":433,"column":16},"end":{"line":440,"column":17}},"279":{"start":{"line":434,"column":20},"end":{"line":434,"column":29}},"280":{"start":{"line":435,"column":20},"end":{"line":435,"column":37}},"281":{"start":{"line":436,"column":20},"end":{"line":436,"column":27}},"282":{"start":{"line":439,"column":20},"end":{"line":439,"column":59}},"283":{"start":{"line":442,"column":12},"end":{"line":442,"column":66}},"284":{"start":{"line":445,"column":4},"end":{"line":455,"column":5}},"285":{"start":{"line":446,"column":8},"end":{"line":454,"column":11}},"286":{"start":{"line":447,"column":12},"end":{"line":447,"column":57}},"287":{"start":{"line":448,"column":12},"end":{"line":452,"column":13}},"288":{"start":{"line":449,"column":16},"end":{"line":451,"column":18}},"289":{"start":{"line":450,"column":20},"end":{"line":450,"column":39}},"290":{"start":{"line":453,"column":12},"end":{"line":453,"column":26}},"291":{"start":{"line":456,"column":4},"end":{"line":470,"column":5}},"292":{"start":{"line":457,"column":8},"end":{"line":457,"column":23}},"293":{"start":{"line":458,"column":8},"end":{"line":469,"column":11}},"294":{"start":{"line":466,"column":20},"end":{"line":466,"column":49}},"295":{"start":{"line":471,"column":4},"end":{"line":471,"column":63}},"296":{"start":{"line":472,"column":4},"end":{"line":480,"column":5}},"297":{"start":{"line":473,"column":8},"end":{"line":479,"column":10}},"298":{"start":{"line":474,"column":12},"end":{"line":474,"column":46}},"299":{"start":{"line":475,"column":12},"end":{"line":475,"column":48}},"300":{"start":{"line":476,"column":12},"end":{"line":478,"column":14}},"301":{"start":{"line":477,"column":16},"end":{"line":477,"column":90}},"302":{"start":{"line":481,"column":4},"end":{"line":481,"column":19}},"303":{"start":{"line":482,"column":4},"end":{"line":482,"column":18}},"304":{"start":{"line":483,"column":4},"end":{"line":534,"column":5}},"305":{"start":{"line":484,"column":8},"end":{"line":484,"column":31}},"306":{"start":{"line":485,"column":8},"end":{"line":485,"column":31}},"307":{"start":{"line":486,"column":8},"end":{"line":486,"column":34}},"308":{"start":{"line":487,"column":8},"end":{"line":502,"column":10}},"309":{"start":{"line":488,"column":12},"end":{"line":501,"column":15}},"310":{"start":{"line":489,"column":16},"end":{"line":491,"column":17}},"311":{"start":{"line":490,"column":20},"end":{"line":490,"column":142}},"312":{"start":{"line":492,"column":16},"end":{"line":492,"column":44}},"313":{"start":{"line":493,"column":16},"end":{"line":493,"column":40}},"314":{"start":{"line":494,"column":16},"end":{"line":499,"column":17}},"315":{"start":{"line":495,"column":20},"end":{"line":495,"column":51}},"316":{"start":{"line":498,"column":20},"end":{"line":498,"column":44}},"317":{"start":{"line":500,"column":16},"end":{"line":500,"column":27}},"318":{"start":{"line":503,"column":8},"end":{"line":506,"column":10}},"319":{"start":{"line":504,"column":12},"end":{"line":504,"column":52}},"320":{"start":{"line":505,"column":12},"end":{"line":505,"column":33}},"321":{"start":{"line":508,"column":9},"end":{"line":534,"column":5}},"322":{"start":{"line":509,"column":8},"end":{"line":526,"column":10}},"323":{"start":{"line":510,"column":12},"end":{"line":510,"column":56}},"324":{"start":{"line":511,"column":12},"end":{"line":519,"column":14}},"325":{"start":{"line":512,"column":16},"end":{"line":512,"column":48}},"326":{"start":{"line":513,"column":16},"end":{"line":518,"column":17}},"327":{"start":{"line":514,"column":20},"end":{"line":514,"column":75}},"328":{"start":{"line":517,"column":20},"end":{"line":517,"column":142}},"329":{"start":{"line":520,"column":12},"end":{"line":520,"column":58}},"330":{"start":{"line":521,"column":12},"end":{"line":521,"column":59}},"331":{"start":{"line":522,"column":12},"end":{"line":522,"column":43}},"332":{"start":{"line":523,"column":12},"end":{"line":523,"column":35}},"333":{"start":{"line":524,"column":12},"end":{"line":524,"column":27}},"334":{"start":{"line":525,"column":12},"end":{"line":525,"column":44}},"335":{"start":{"line":527,"column":8},"end":{"line":530,"column":10}},"336":{"start":{"line":528,"column":12},"end":{"line":528,"column":35}},"337":{"start":{"line":529,"column":12},"end":{"line":529,"column":33}},"338":{"start":{"line":533,"column":8},"end":{"line":533,"column":48}},"339":{"start":{"line":535,"column":4},"end":{"line":535,"column":44}},"340":{"start":{"line":536,"column":4},"end":{"line":540,"column":5}},"341":{"start":{"line":537,"column":8},"end":{"line":539,"column":10}},"342":{"start":{"line":538,"column":12},"end":{"line":538,"column":30}},"343":{"start":{"line":541,"column":4},"end":{"line":541,"column":34}},"344":{"start":{"line":542,"column":4},"end":{"line":548,"column":5}},"345":{"start":{"line":543,"column":8},"end":{"line":547,"column":10}},"346":{"start":{"line":544,"column":12},"end":{"line":546,"column":13}},"347":{"start":{"line":545,"column":16},"end":{"line":545,"column":40}},"348":{"start":{"line":549,"column":4},"end":{"line":557,"column":7}},"349":{"start":{"line":554,"column":12},"end":{"line":554,"column":40}},"350":{"start":{"line":555,"column":12},"end":{"line":555,"column":39}},"351":{"start":{"line":558,"column":4},"end":{"line":563,"column":7}},"352":{"start":{"line":560,"column":12},"end":{"line":560,"column":27}},"353":{"start":{"line":564,"column":4},"end":{"line":564,"column":41}},"354":{"start":{"line":565,"column":4},"end":{"line":568,"column":5}},"355":{"start":{"line":566,"column":8},"end":{"line":566,"column":52}},"356":{"start":{"line":567,"column":8},"end":{"line":567,"column":68}},"357":{"start":{"line":569,"column":4},"end":{"line":569,"column":41}},"358":{"start":{"line":570,"column":4},"end":{"line":613,"column":7}},"359":{"start":{"line":571,"column":8},"end":{"line":580,"column":9}},"360":{"start":{"line":572,"column":12},"end":{"line":572,"column":26}},"361":{"start":{"line":573,"column":12},"end":{"line":573,"column":27}},"362":{"start":{"line":574,"column":12},"end":{"line":574,"column":35}},"363":{"start":{"line":575,"column":12},"end":{"line":579,"column":13}},"364":{"start":{"line":576,"column":16},"end":{"line":576,"column":43}},"365":{"start":{"line":577,"column":16},"end":{"line":577,"column":39}},"366":{"start":{"line":578,"column":16},"end":{"line":578,"column":52}},"367":{"start":{"line":581,"column":8},"end":{"line":599,"column":9}},"368":{"start":{"line":582,"column":12},"end":{"line":598,"column":13}},"369":{"start":{"line":583,"column":16},"end":{"line":583,"column":31}},"370":{"start":{"line":584,"column":16},"end":{"line":584,"column":56}},"371":{"start":{"line":585,"column":16},"end":{"line":590,"column":19}},"372":{"start":{"line":588,"column":20},"end":{"line":588,"column":44}},"373":{"start":{"line":589,"column":20},"end":{"line":589,"column":40}},"374":{"start":{"line":592,"column":17},"end":{"line":598,"column":13}},"375":{"start":{"line":593,"column":16},"end":{"line":593,"column":33}},"376":{"start":{"line":594,"column":16},"end":{"line":594,"column":26}},"377":{"start":{"line":595,"column":16},"end":{"line":597,"column":18}},"378":{"start":{"line":596,"column":20},"end":{"line":596,"column":33}},"379":{"start":{"line":600,"column":8},"end":{"line":610,"column":9}},"380":{"start":{"line":601,"column":12},"end":{"line":606,"column":13}},"381":{"start":{"line":602,"column":16},"end":{"line":605,"column":17}},"382":{"start":{"line":603,"column":20},"end":{"line":603,"column":53}},"383":{"start":{"line":604,"column":20},"end":{"line":604,"column":26}},"384":{"start":{"line":609,"column":12},"end":{"line":609,"column":38}},"385":{"start":{"line":614,"column":4},"end":{"line":614,"column":28}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":8},"end":{"line":3,"column":8}},{"start":{"line":3,"column":8},"end":{"line":3,"column":8}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},{"start":{"line":3,"column":37},"end":{"line":3,"column":63}}]},"3":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":8,"column":8}},{"start":{"line":8,"column":8},"end":{"line":8,"column":8}}]},"4":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":22},"end":{"line":17,"column":30}},{"start":{"line":17,"column":34},"end":{"line":17,"column":63}}]},"5":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":59},"end":{"line":19,"column":117}},{"start":{"line":19,"column":121},"end":{"line":19,"column":135}}]},"6":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":13},"end":{"line":22,"column":32}},{"start":{"line":22,"column":36},"end":{"line":22,"column":41}},{"start":{"line":22,"column":47},"end":{"line":22,"column":68}}]},"7":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":15}},{"start":{"line":23,"column":19},"end":{"line":23,"column":28}}]},"8":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":28},"end":{"line":27,"column":59}},{"start":{"line":27,"column":63},"end":{"line":27,"column":94}}]},"9":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":25},"end":{"line":28,"column":52}},{"start":{"line":28,"column":56},"end":{"line":28,"column":72}},{"start":{"line":28,"column":76},"end":{"line":28,"column":97}}]},"10":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":33},"end":{"line":30,"column":52}},{"start":{"line":30,"column":56},"end":{"line":30,"column":100}}]},"11":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"12":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":23},"end":{"line":34,"column":37}},{"start":{"line":34,"column":41},"end":{"line":34,"column":48}}]},"13":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":16}},{"start":{"line":36,"column":16},"end":{"line":36,"column":16}}]},"14":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":16}},{"start":{"line":39,"column":16},"end":{"line":39,"column":16}}]},"15":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":51},"end":{"line":81,"column":72}},{"start":{"line":81,"column":75},"end":{"line":81,"column":80}}]},"16":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":20},"end":{"line":86,"column":20}},{"start":{"line":86,"column":20},"end":{"line":86,"column":20}}]},"17":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":24},"end":{"line":86,"column":45}},{"start":{"line":86,"column":49},"end":{"line":86,"column":65}}]},"18":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":12},"end":{"line":97,"column":24}},{"start":{"line":97,"column":29},"end":{"line":97,"column":72}}]},"19":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":13}},{"start":{"line":109,"column":17},"end":{"line":109,"column":40}}]},"20":{"line":124,"type":"cond-expr","locations":[{"start":{"line":124,"column":45},"end":{"line":124,"column":72}},{"start":{"line":124,"column":75},"end":{"line":124,"column":114}}]},"21":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":131,"column":8}},{"start":{"line":131,"column":8},"end":{"line":131,"column":8}}]},"22":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":12}},{"start":{"line":133,"column":12},"end":{"line":133,"column":12}}]},"23":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":16},"end":{"line":133,"column":40}},{"start":{"line":133,"column":44},"end":{"line":133,"column":73}}]},"24":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":13},"end":{"line":138,"column":13}},{"start":{"line":138,"column":13},"end":{"line":138,"column":13}}]},"25":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":21},"end":{"line":142,"column":23}},{"start":{"line":142,"column":27},"end":{"line":142,"column":29}}]},"26":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":22},"end":{"line":154,"column":29}},{"start":{"line":154,"column":33},"end":{"line":154,"column":36}},{"start":{"line":154,"column":41},"end":{"line":154,"column":55}}]},"27":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":155,"column":8}},{"start":{"line":155,"column":8},"end":{"line":155,"column":8}}]},"28":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":8},"end":{"line":174,"column":8}},{"start":{"line":174,"column":8},"end":{"line":174,"column":8}}]},"29":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":16},"end":{"line":176,"column":16}},{"start":{"line":176,"column":16},"end":{"line":176,"column":16}}]},"30":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":12},"end":{"line":190,"column":12}},{"start":{"line":190,"column":12},"end":{"line":190,"column":12}}]},"31":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":16},"end":{"line":190,"column":32}},{"start":{"line":190,"column":36},"end":{"line":190,"column":49}},{"start":{"line":190,"column":53},"end":{"line":190,"column":73}}]},"32":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":17},"end":{"line":194,"column":17}},{"start":{"line":194,"column":17},"end":{"line":194,"column":17}}]},"33":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":64},"end":{"line":208,"column":98}},{"start":{"line":208,"column":102},"end":{"line":208,"column":105}}]},"34":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":26},"end":{"line":208,"column":41}},{"start":{"line":208,"column":45},"end":{"line":208,"column":60}}]},"35":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":24},"end":{"line":209,"column":39}},{"start":{"line":209,"column":43},"end":{"line":209,"column":84}}]},"36":{"line":210,"type":"cond-expr","locations":[{"start":{"line":210,"column":32},"end":{"line":210,"column":44}},{"start":{"line":210,"column":47},"end":{"line":210,"column":60}}]},"37":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":8}},{"start":{"line":211,"column":8},"end":{"line":211,"column":8}}]},"38":{"line":215,"type":"cond-expr","locations":[{"start":{"line":215,"column":22},"end":{"line":215,"column":30}},{"start":{"line":215,"column":33},"end":{"line":215,"column":35}}]},"39":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":8},"end":{"line":217,"column":8}},{"start":{"line":217,"column":8},"end":{"line":217,"column":8}}]},"40":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":47},"end":{"line":218,"column":55}},{"start":{"line":218,"column":59},"end":{"line":218,"column":68}},{"start":{"line":218,"column":72},"end":{"line":218,"column":78}}]},"41":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":8},"end":{"line":223,"column":8}},{"start":{"line":223,"column":8},"end":{"line":223,"column":8}}]},"42":{"line":225,"type":"cond-expr","locations":[{"start":{"line":225,"column":28},"end":{"line":225,"column":62}},{"start":{"line":225,"column":66},"end":{"line":225,"column":106}}]},"43":{"line":225,"type":"cond-expr","locations":[{"start":{"line":225,"column":72},"end":{"line":225,"column":100}},{"start":{"line":225,"column":103},"end":{"line":225,"column":106}}]},"44":{"line":230,"type":"cond-expr","locations":[{"start":{"line":230,"column":61},"end":{"line":230,"column":63}},{"start":{"line":230,"column":66},"end":{"line":230,"column":73}}]},"45":{"line":232,"type":"cond-expr","locations":[{"start":{"line":232,"column":53},"end":{"line":232,"column":55}},{"start":{"line":232,"column":58},"end":{"line":232,"column":63}}]},"46":{"line":238,"type":"cond-expr","locations":[{"start":{"line":238,"column":34},"end":{"line":238,"column":81}},{"start":{"line":238,"column":84},"end":{"line":238,"column":113}}]},"47":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":8}},{"start":{"line":248,"column":8},"end":{"line":248,"column":8}}]},"48":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":12},"end":{"line":252,"column":12}},{"start":{"line":252,"column":12},"end":{"line":252,"column":12}}]},"49":{"line":254,"type":"cond-expr","locations":[{"start":{"line":254,"column":60},"end":{"line":254,"column":80}},{"start":{"line":254,"column":83},"end":{"line":254,"column":85}}]},"50":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":15},"end":{"line":271,"column":34}},{"start":{"line":271,"column":39},"end":{"line":271,"column":67}}]},"51":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":296,"column":4}},{"start":{"line":296,"column":4},"end":{"line":296,"column":4}}]},"52":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":8},"end":{"line":300,"column":8}},{"start":{"line":300,"column":8},"end":{"line":300,"column":8}}]},"53":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":12},"end":{"line":301,"column":12}},{"start":{"line":301,"column":12},"end":{"line":301,"column":12}}]},"54":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":16},"end":{"line":301,"column":57}},{"start":{"line":302,"column":16},"end":{"line":302,"column":60}},{"start":{"line":303,"column":16},"end":{"line":303,"column":46}}]},"55":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":8},"end":{"line":308,"column":8}},{"start":{"line":308,"column":8},"end":{"line":308,"column":8}}]},"56":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":12},"end":{"line":309,"column":12}},{"start":{"line":309,"column":12},"end":{"line":309,"column":12}}]},"57":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":16},"end":{"line":309,"column":27}},{"start":{"line":309,"column":31},"end":{"line":309,"column":43}}]},"58":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":53}},{"start":{"line":316,"column":57},"end":{"line":316,"column":87}}]},"59":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":16},"end":{"line":319,"column":16}},{"start":{"line":319,"column":16},"end":{"line":319,"column":16}}]},"60":{"line":320,"type":"cond-expr","locations":[{"start":{"line":320,"column":59},"end":{"line":320,"column":80}},{"start":{"line":321,"column":25},"end":{"line":323,"column":48}}]},"61":{"line":321,"type":"cond-expr","locations":[{"start":{"line":321,"column":54},"end":{"line":321,"column":72}},{"start":{"line":322,"column":29},"end":{"line":323,"column":47}}]},"62":{"line":322,"type":"cond-expr","locations":[{"start":{"line":322,"column":57},"end":{"line":322,"column":67}},{"start":{"line":323,"column":32},"end":{"line":323,"column":47}}]},"63":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":12},"end":{"line":327,"column":12}},{"start":{"line":327,"column":12},"end":{"line":327,"column":12}}]},"64":{"line":329,"type":"binary-expr","locations":[{"start":{"line":329,"column":16},"end":{"line":329,"column":57}},{"start":{"line":329,"column":61},"end":{"line":329,"column":80}}]},"65":{"line":332,"type":"cond-expr","locations":[{"start":{"line":332,"column":53},"end":{"line":332,"column":78}},{"start":{"line":332,"column":81},"end":{"line":332,"column":88}}]},"66":{"line":333,"type":"cond-expr","locations":[{"start":{"line":333,"column":74},"end":{"line":333,"column":92}},{"start":{"line":333,"column":95},"end":{"line":333,"column":101}}]},"67":{"line":333,"type":"binary-expr","locations":[{"start":{"line":333,"column":37},"end":{"line":333,"column":57}},{"start":{"line":333,"column":61},"end":{"line":333,"column":71}}]},"68":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":12},"end":{"line":336,"column":12}},{"start":{"line":336,"column":12},"end":{"line":336,"column":12}}]},"69":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":12},"end":{"line":339,"column":18}},{"start":{"line":339,"column":22},"end":{"line":339,"column":33}},{"start":{"line":339,"column":37},"end":{"line":341,"column":14}}]},"70":{"line":344,"type":"cond-expr","locations":[{"start":{"line":344,"column":43},"end":{"line":344,"column":88}},{"start":{"line":344,"column":92},"end":{"line":344,"column":115}}]},"71":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":16},"end":{"line":346,"column":16}},{"start":{"line":346,"column":16},"end":{"line":346,"column":16}}]},"72":{"line":354,"type":"binary-expr","locations":[{"start":{"line":354,"column":12},"end":{"line":354,"column":53}},{"start":{"line":354,"column":57},"end":{"line":354,"column":76}}]},"73":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":8},"end":{"line":363,"column":16}},{"start":{"line":363,"column":20},"end":{"line":363,"column":33}},{"start":{"line":363,"column":37},"end":{"line":363,"column":50}},{"start":{"line":363,"column":54},"end":{"line":363,"column":73}},{"start":{"line":363,"column":77},"end":{"line":363,"column":95}}]},"74":{"line":366,"type":"binary-expr","locations":[{"start":{"line":366,"column":8},"end":{"line":366,"column":27}},{"start":{"line":366,"column":31},"end":{"line":383,"column":10}}]},"75":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":16},"end":{"line":369,"column":16}},{"start":{"line":369,"column":16},"end":{"line":369,"column":16}}]},"76":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":20},"end":{"line":375,"column":20}},{"start":{"line":375,"column":20},"end":{"line":375,"column":20}}]},"77":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":8},"end":{"line":393,"column":8}},{"start":{"line":393,"column":8},"end":{"line":393,"column":8}}]},"78":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":13},"end":{"line":396,"column":13}},{"start":{"line":396,"column":13},"end":{"line":396,"column":13}}]},"79":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":8},"end":{"line":406,"column":8}},{"start":{"line":406,"column":8},"end":{"line":406,"column":8}}]},"80":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":8},"end":{"line":410,"column":8}},{"start":{"line":410,"column":8},"end":{"line":410,"column":8}}]},"81":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":13},"end":{"line":413,"column":13}},{"start":{"line":413,"column":13},"end":{"line":413,"column":13}}]},"82":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":16},"end":{"line":417,"column":16}},{"start":{"line":417,"column":16},"end":{"line":417,"column":16}}]},"83":{"line":417,"type":"binary-expr","locations":[{"start":{"line":417,"column":20},"end":{"line":417,"column":44}},{"start":{"line":417,"column":48},"end":{"line":417,"column":52}}]},"84":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":16},"end":{"line":420,"column":16}},{"start":{"line":420,"column":16},"end":{"line":420,"column":16}}]},"85":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":12},"end":{"line":432,"column":12}},{"start":{"line":432,"column":12},"end":{"line":432,"column":12}}]},"86":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":12},"end":{"line":448,"column":12}},{"start":{"line":448,"column":12},"end":{"line":448,"column":12}}]},"87":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":4},"end":{"line":472,"column":4}},{"start":{"line":472,"column":4},"end":{"line":472,"column":4}}]},"88":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":4},"end":{"line":483,"column":4}},{"start":{"line":483,"column":4},"end":{"line":483,"column":4}}]},"89":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":16},"end":{"line":489,"column":16}},{"start":{"line":489,"column":16},"end":{"line":489,"column":16}}]},"90":{"line":490,"type":"cond-expr","locations":[{"start":{"line":490,"column":103},"end":{"line":490,"column":134}},{"start":{"line":490,"column":137},"end":{"line":490,"column":139}}]},"91":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":9},"end":{"line":508,"column":9}},{"start":{"line":508,"column":9},"end":{"line":508,"column":9}}]},"92":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":16},"end":{"line":513,"column":16}},{"start":{"line":513,"column":16},"end":{"line":513,"column":16}}]},"93":{"line":514,"type":"cond-expr","locations":[{"start":{"line":514,"column":47},"end":{"line":514,"column":61}},{"start":{"line":514,"column":64},"end":{"line":514,"column":74}}]},"94":{"line":517,"type":"cond-expr","locations":[{"start":{"line":517,"column":103},"end":{"line":517,"column":134}},{"start":{"line":517,"column":137},"end":{"line":517,"column":139}}]},"95":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":4},"end":{"line":536,"column":4}},{"start":{"line":536,"column":4},"end":{"line":536,"column":4}}]},"96":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":4},"end":{"line":542,"column":4}},{"start":{"line":542,"column":4},"end":{"line":542,"column":4}}]},"97":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":12},"end":{"line":544,"column":12}},{"start":{"line":544,"column":12},"end":{"line":544,"column":12}}]},"98":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":4},"end":{"line":565,"column":4}},{"start":{"line":565,"column":4},"end":{"line":565,"column":4}}]},"99":{"line":571,"type":"if","locations":[{"start":{"line":571,"column":8},"end":{"line":571,"column":8}},{"start":{"line":571,"column":8},"end":{"line":571,"column":8}}]},"100":{"line":571,"type":"binary-expr","locations":[{"start":{"line":571,"column":12},"end":{"line":571,"column":38}},{"start":{"line":571,"column":42},"end":{"line":571,"column":64}}]},"101":{"line":575,"type":"if","locations":[{"start":{"line":575,"column":12},"end":{"line":575,"column":12}},{"start":{"line":575,"column":12},"end":{"line":575,"column":12}}]},"102":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":8},"end":{"line":581,"column":8}},{"start":{"line":581,"column":8},"end":{"line":581,"column":8}}]},"103":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":12},"end":{"line":582,"column":12}},{"start":{"line":582,"column":12},"end":{"line":582,"column":12}}]},"104":{"line":582,"type":"binary-expr","locations":[{"start":{"line":582,"column":16},"end":{"line":582,"column":42}},{"start":{"line":582,"column":46},"end":{"line":582,"column":72}}]},"105":{"line":592,"type":"if","locations":[{"start":{"line":592,"column":17},"end":{"line":592,"column":17}},{"start":{"line":592,"column":17},"end":{"line":592,"column":17}}]},"106":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":8},"end":{"line":600,"column":8}},{"start":{"line":600,"column":8},"end":{"line":600,"column":8}}]},"107":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":16},"end":{"line":602,"column":16}},{"start":{"line":602,"column":16},"end":{"line":602,"column":16}}]}},"code":["(function () {","    var req = function (config, dependencies, callback) {","        if (Array.isArray(config) || typeof config === 'string') {","            callback = dependencies;","            dependencies = config;","            config = {};","        }","        if (has('loader-configurable')) {","            configure(config);","        }","        contextRequire(dependencies, callback);","    };","    var has = req.has = (function () {","        var hasCache = Object.create(null);","        var global = this;","        var document = global.document;","        var element = document && document.createElement('div');","        var has = function (name) {","            return typeof hasCache[name] === 'function' ? (hasCache[name] = hasCache[name](global, document, element)) : hasCache[name];","        };","        has.add = function (name, test, now, force) {","            (!(name in hasCache) || force) && (hasCache[name] = test);","            now && has(name);","        };","        return has;","    })();","    has.add('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');","    has.add('host-node', typeof process === 'object' && process.versions && process.versions.node);","    has.add('debug', true);","    has.add('loader-ie9-compat', has('host-browser') && navigator.userAgent.indexOf('MSIE 9.0') > -1);","    has.add('loader-configurable', true);","    if (has('loader-configurable')) {","        var configure = req.config = function (config) {","            baseUrl = (config.baseUrl || baseUrl).replace(/\\/*$/, '/');","            forEach(config.packages, function (p) {","                if (typeof p === 'string') {","                    p = { name: p, location: p };","                }","                if (p.location != null) {","                    p.location = p.location.replace(/\\/*$/, '/');","                }","                packs[p.name] = p;","            });","            function computeMapProg(map) {","                // This method takes a map as represented by a JavaScript object and initializes an array of","                // arrays of (map-key, map-value, regex-for-map-key, length-of-map-key), sorted decreasing by length-","                // of-map-key. The regex looks for the map-key followed by either \"/\" or end-of-string at the beginning","                // of a the search source.","                //","                // Maps look like this:","                //","                // map: { C: { D: E } }","                //      A    B","                //","                // The computed mapping is a 4-array deep tree, where the outermost array corresponds to the source","                // mapping object A, the 2nd level arrays each correspond to one of the source mappings C -> B, the 3rd","                // level arrays correspond to each destination mapping object B, and the innermost arrays each","                // correspond to one of the destination mappings D -> E.","                //","                // So, the overall structure looks like this:","                //","                // mapProgs = [ source mapping array, source mapping array, ... ]","                // source mapping array = [","                //     source module id,","                //     [ destination mapping array, destination mapping array, ... ],","                //     RegExp that matches on source module id,","                //     source module id length","                // ]","                // destination mapping array = [","                //     original module id,","                //     destination module id,","                //     RegExp that matches on original module id,","                //     original module id length","                // ]","                var result = [];","                for (var moduleId in map) {","                    var value = map[moduleId];","                    var valueIsMapReplacement = typeof value === 'object';","                    var item = {","                        0: moduleId,","                        1: valueIsMapReplacement ? computeMapProg(value) : value,","                        2: new RegExp('^' + moduleId.replace(/[-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&') + '(?:\\/|$)'),","                        3: moduleId.length","                    };","                    result.push(item);","                    if (valueIsMapReplacement && moduleId === '*') {","                        result.star = item[1];","                    }","                }","                result.sort(function (lhs, rhs) {","                    return rhs[3] - lhs[3];","                });","                return result;","            }","            mix(map, config.map);","            mapProgs = computeMapProg(map);","            config.paths && (pathsMapProg = computeMapProg(config.paths));","        };","    }","    var baseUrl = './';","    var packs = {};","    var pathsMapProg = [];","    var map = {};","    var mapProgs = [];","    var modules = {};","    var cache = {};","    var pendingCacheInsert = {};","    function forEach(array, callback) {","        array && array.forEach(callback);","    }","    function mix(target, source) {","        for (var key in source) {","            target[key] = source[key];","        }","        return target;","    }","    function signal(type, event) {","        req.signal.apply(req, arguments);","    }","    function consumePendingCacheInsert(referenceModule) {","        var item;","        for (var key in pendingCacheInsert) {","            item = pendingCacheInsert[key];","            cache[typeof item === 'string' ? toUrl(key, referenceModule) : getModuleInfo(key, referenceModule).mid] = item;","        }","        pendingCacheInsert = {};","    }","    var uidGenerator = 0;","    function contextRequire(a1, a2, referenceModule) {","        var module;","        if (typeof a1 === 'string') {","            module = getModule(a1, referenceModule);","            if (module.executed !== true && module.executed !== EXECUTING) {","                throw new Error('Attempt to require unloaded module ' + module.mid);","            }","            module = module.result;","        }","        else if (Array.isArray(a1)) {","            module = getModuleInfo('*' + (++uidGenerator));","            mix(module, {","                deps: resolveDeps(a1, module, referenceModule),","                def: a2 || {},","                gc: true","            });","            guardCheckComplete(function () {","                forEach(module.deps, injectModule.bind(null, module));","            });","            execQ.push(module);","            checkComplete();","        }","        return module;","    }","    function createRequire(module) {","        var result = (!module && req) || module.require;","        if (!result) {","            module.require = result = function (a1, a2) {","                return contextRequire(a1, a2, module);","            };","            mix(mix(result, req), {","                toUrl: function (name) {","                    return toUrl(name, module);","                },","                toAbsMid: function (mid) {","                    return toAbsMid(mid, module);","                }","            });","        }","        return result;","    }","    var execQ = [];","    var defArgs = null;","    var waitingCount = 0;","    function runMapProg(targetMid, map) {","        if (map) {","            for (var i = 0, j = map.length; i < j; ++i) {","                if (map[i][2].test(targetMid)) {","                    return map[i];","                }","            }","        }","        return null;","    }","    function compactPath(path) {","        var result = [];","        var segment;","        var lastSegment;","        var splitPath = path.replace(/\\\\/g, '/').split('/');","        while (splitPath.length) {","            segment = splitPath.shift();","            if (segment === '..' && result.length && lastSegment !== '..') {","                result.pop();","                lastSegment = result[result.length - 1];","            }","            else if (segment !== '.') {","                result.push((lastSegment = segment));","            }","        }","        return result.join('/');","    }","    function getModuleInfo(mid, referenceModule) {","        var match;","        var pid;","        var pack;","        var midInPackage;","        var mapItem;","        var url;","        var result;","        mid = compactPath(/^\\./.test(mid) && referenceModule ? (referenceModule.mid + '/../' + mid) : mid);","        var moduleMap = referenceModule && runMapProg(referenceModule.mid, mapProgs);","        moduleMap = moduleMap ? moduleMap[1] : mapProgs.star;","        if ((mapItem = runMapProg(mid, moduleMap))) {","            mid = mapItem[1] + mid.slice(mapItem[3]);","        }","        match = mid.match(/^([^\\/]+)(\\/(.+))?$/);","        pid = match ? match[1] : '';","        pack = packs[pid];","        if (pack) {","            mid = pid + '/' + (midInPackage = (match[3] || pack.main || 'main'));","        }","        else {","            pid = '';","        }","        if (!(result = modules[mid])) {","            mapItem = runMapProg(mid, pathsMapProg);","            url = mapItem ? mapItem[1] + mid.slice(mapItem[3]) : (pid ? pack.location + midInPackage : mid);","            result = {","                pid: pid,","                mid: mid,","                pack: pack,","                url: compactPath((/^(?:\\/|\\w+:)/.test(url) ? '' : baseUrl) +","                    url +","                    (/\\.js(?:\\?[^?]*)?$/.test(url) ? '' : '.js'))","            };","        }","        return result;","    }","    function resolvePluginResourceId(plugin, prid, contextRequire) {","        return plugin.normalize ? plugin.normalize(prid, contextRequire.toAbsMid) : contextRequire.toAbsMid(prid);","    }","    function getModule(mid, referenceModule) {","        var match;","        var plugin;","        var prid;","        var result;","        var contextRequire;","        var loaded;","        match = mid.match(/^(.+?)\\!(.*)$/);","        if (match) {","            plugin = getModule(match[1], referenceModule);","            loaded = Boolean(plugin.load);","            contextRequire = createRequire(referenceModule);","            if (loaded) {","                prid = resolvePluginResourceId(plugin, match[2], contextRequire);","                mid = (plugin.mid + '!' + (plugin.dynamic ? ++uidGenerator + '!' : '') + prid);","            }","            else {","                prid = match[2];","                mid = plugin.mid + '!' + (++uidGenerator) + '!*';","            }","            result = {","                plugin: plugin,","                mid: mid,","                req: contextRequire,","                prid: prid,","                fix: !loaded","            };","        }","        else {","            result = getModuleInfo(mid, referenceModule);","        }","        return modules[result.mid] || (modules[result.mid] = result);","    }","    function toAbsMid(mid, referenceModule) {","        return getModuleInfo(mid, referenceModule).mid;","    }","    function toUrl(name, referenceModule) {","        var moduleInfo = getModuleInfo(name + '/x', referenceModule);","        var url = moduleInfo.url;","        return url.slice(0, url.length - 5);","    }","    function makeCjs(mid) {","        var module = modules[mid] = {","            mid: mid,","            injected: true,","            executed: true","        };","        return module;","    }","    var cjsRequireModule = makeCjs('require');","    var cjsExportsModule = makeCjs('exports');","    var cjsModuleModule = makeCjs('module');","    var EXECUTING = 'executing';","    var abortExec = {};","    var executedSomething = false;","    has.add('loader-debug-circular-dependencies', true);","    if (has('loader-debug-circular-dependencies')) {","        var circularTrace = [];","    }","    function execModule(module) {","        if (module.executed === EXECUTING) {","            if (has('loader-debug-circular-dependencies') &&","                module.deps.indexOf(cjsExportsModule) === -1 &&","                typeof console !== 'undefined') {","                console.warn('Circular dependency: ' + circularTrace.concat(module.mid).join(' -> '));","            }","            return module.cjs.exports;","        }","        if (!module.executed) {","            if (!module.def && !module.deps) {","                return abortExec;","            }","            var deps = module.deps;","            var factory = module.def;","            var result;","            var args;","            has('loader-debug-circular-dependencies') && circularTrace.push(module.mid);","            module.executed = EXECUTING;","            args = deps.map(function (dep) {","                if (result !== abortExec) {","                    result = ((dep === cjsRequireModule) ? createRequire(module) :","                        ((dep === cjsExportsModule) ? module.cjs.exports :","                            ((dep === cjsModuleModule) ? module.cjs :","                                execModule(dep))));","                }","                return result;","            });","            if (result === abortExec) {","                module.executed = false;","                has('loader-debug-circular-dependencies') && circularTrace.pop();","                return abortExec;","            }","            result = typeof factory === 'function' ? factory.apply(null, args) : factory;","            result = module.result = result === undefined && module.cjs ? module.cjs.exports : result;","            module.executed = true;","            executedSomething = true;","            if (module.gc) {","                modules[module.mid] = undefined;","            }","            result && result.load && ['dynamic', 'normalize', 'load'].forEach(function (key) {","                module[key] = result[key];","            });","            forEach(module.loadQ, function (pseudoPluginResource) {","                var prid = resolvePluginResourceId(module, pseudoPluginResource.prid, pseudoPluginResource.req);","                var mid = module.dynamic ? pseudoPluginResource.mid.replace(/\\*$/, prid) : (module.mid + '!' + prid);","                var pluginResource = mix(mix({}, pseudoPluginResource), { mid: mid, prid: prid });","                if (!modules[mid]) {","                    injectPlugin((modules[mid] = pluginResource));","                }","                pseudoPluginResource.fix(modules[mid]);","                --waitingCount;","                modules[pseudoPluginResource.mid] = undefined;","            });","            module.loadQ = undefined;","            has('loader-debug-circular-dependencies') && circularTrace.pop();","        }","        return module.result;","    }","    var checkCompleteGuard = 0;","    function guardCheckComplete(proc) {","        ++checkCompleteGuard;","        proc();","        --checkCompleteGuard;","        !defArgs && !waitingCount && !execQ.length && !checkCompleteGuard && signal('idle', []);","    }","    function checkComplete() {","        !checkCompleteGuard && guardCheckComplete(function () {","            for (var module, i = 0; i < execQ.length;) {","                module = execQ[i];","                if (module.executed === true) {","                    execQ.splice(i, 1);","                }","                else {","                    executedSomething = false;","                    execModule(module);","                    if (executedSomething) {","                        i = 0;","                    }","                    else {","                        i++;","                    }","                }","            }","        });","    }","    function injectPlugin(module) {","        var plugin = module.plugin;","        var onLoad = function (def) {","            module.result = def;","            --waitingCount;","            module.executed = true;","            checkComplete();","        };","        if (plugin.load) {","            plugin.load(module.prid, module.req, onLoad);","        }","        else if (plugin.loadQ) {","            plugin.loadQ.push(module);","        }","        else {","            plugin.loadQ = [module];","            execQ.unshift(plugin);","            injectModule(module, plugin);","        }","    }","    function injectModule(parent, module) {","        if (!module) {","            module = parent;","            parent = null;","        }","        if (module.plugin) {","            injectPlugin(module);","        }","        else if (!module.injected) {","            var cached;","            var onLoadCallback = function (node) {","                consumePendingCacheInsert(module);","                if (has('loader-ie9-compat') && node) {","                    defArgs = node.defArgs;","                }","                if (!defArgs) {","                    defArgs = [[], undefined];","                }","                defineModule(module, defArgs[0], defArgs[1]);","                defArgs = null;","                guardCheckComplete(function () {","                    forEach(module.deps, injectModule.bind(null, module));","                });","                checkComplete();","            };","            ++waitingCount;","            module.injected = true;","            if ((cached = cache[module.mid])) {","                try {","                    cached();","                    onLoadCallback();","                    return;","                }","                catch (error) {","                    signal('cachedThrew', [error, module]);","                }","            }","            injectUrl(module.url, onLoadCallback, module, parent);","        }","    }","    function resolveDeps(deps, module, referenceModule) {","        return deps.map(function (dep, i) {","            var result = getModule(dep, referenceModule);","            if (result.fix) {","                result.fix = function (m) {","                    module.deps[i] = m;","                };","            }","            return result;","        });","    }","    function defineModule(module, deps, def) {","        --waitingCount;","        return mix(module, {","            def: def,","            deps: resolveDeps(deps, module, module),","            cjs: {","                id: module.mid,","                uri: module.url,","                exports: (module.result = {}),","                setExports: function (exports) {","                    module.cjs.exports = exports;","                }","            }","        });","    }","    has.add('function-bind', Boolean(Function.prototype.bind));","    if (!has('function-bind')) {","        injectModule.bind = function (thisArg) {","            var slice = Array.prototype.slice;","            var args = slice.call(arguments, 1);","            return function () {","                return injectModule.apply(thisArg, args.concat(slice.call(arguments, 0)));","            };","        };","    }","    var setGlobals;","    var injectUrl;","    if (has('host-node')) {","        var vm = require('vm');","        var fs = require('fs');","        req.nodeRequire = require;","        injectUrl = function (url, callback, module, parent) {","            fs.readFile(url, 'utf8', function (error, data) {","                if (error) {","                    throw new Error('Failed to load module ' + module.mid + ' from ' + url + (parent ? ' (parent: ' + parent.mid + ')' : ''));","                }","                var oldModule = this.module;","                this.module = undefined;","                try {","                    vm.runInThisContext(data, url);","                }","                finally {","                    this.module = oldModule;","                }","                callback();","            });","        };","        setGlobals = function (require, define) {","            module.exports = this.require = require;","            this.define = define;","        };","    }","    else if (has('host-browser')) {","        injectUrl = function (url, callback, module, parent) {","            var node = document.createElement('script');","            var handler = function (event) {","                document.head.removeChild(node);","                if (event.type === 'load') {","                    has('loader-ie9-compat') ? callback(node) : callback();","                }","                else {","                    throw new Error('Failed to load module ' + module.mid + ' from ' + url + (parent ? ' (parent: ' + parent.mid + ')' : ''));","                }","            };","            node.addEventListener('load', handler, false);","            node.addEventListener('error', handler, false);","            node.crossOrigin = 'anonymous';","            node.charset = 'utf-8';","            node.src = url;","            document.head.appendChild(node);","        };","        setGlobals = function (require, define) {","            this.require = require;","            this.define = define;","        };","    }","    else {","        throw new Error('Unsupported platform');","    }","    has.add('loader-debug-internals', true);","    if (has('loader-debug-internals')) {","        req.inspect = function (name) {","            return eval(name);","        };","    }","    has.add('loader-undef', true);","    if (has('loader-undef')) {","        req.undef = function (id) {","            if (modules[id]) {","                modules[id] = undefined;","            }","        };","    }","    mix(req, {","        signal: function () { },","        toAbsMid: toAbsMid,","        toUrl: toUrl,","        cache: function (cache) {","            consumePendingCacheInsert();","            pendingCacheInsert = cache;","        }","    });","    Object.defineProperty(req, 'baseUrl', {","        get: function () {","            return baseUrl;","        },","        enumerable: true","    });","    has.add('loader-cjs-wrapping', true);","    if (has('loader-cjs-wrapping')) {","        var comments = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/mg;","        var requireCall = /require\\s*\\(\\s*([\"'])(.*?[^\\\\])\\1\\s*\\)/g;","    }","    has.add('loader-explicit-mid', true);","    var define = mix(function (deps, factory) {","        if (has('loader-explicit-mid') && arguments.length === 3) {","            var id = deps;","            deps = factory;","            factory = arguments[2];","            if (id != null) {","                var module = getModule(id);","                module.injected = true;","                defineModule(module, deps, factory);","            }","        }","        if (arguments.length === 1) {","            if (has('loader-cjs-wrapping') && typeof deps === 'function') {","                factory = deps;","                deps = ['require', 'exports', 'module'];","                factory.toString()","                    .replace(comments, '')","                    .replace(requireCall, function () {","                    deps.push(arguments[2]);","                    return arguments[0];","                });","            }","            else if (!Array.isArray(deps)) {","                var value = deps;","                deps = [];","                factory = function () {","                    return value;","                };","            }","        }","        if (has('loader-ie9-compat')) {","            for (var i = document.scripts.length - 1, script; (script = document.scripts[i]); --i) {","                if (script.readyState === 'interactive') {","                    script.defArgs = [deps, factory];","                    break;","                }","            }","        }","        else {","            defArgs = [deps, factory];","        }","    }, {","        amd: { vendor: 'dojotoolkit.org' }","    });","    setGlobals(req, define);","})();","//# sourceMappingURL=_debug/loader.js.map"],"l":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"8":0,"9":0,"11":0,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":430,"21":1,"22":11,"23":11,"25":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0,"44":1,"75":0,"76":0,"77":0,"78":0,"79":0,"85":0,"86":0,"87":0,"90":0,"91":0,"93":0,"95":0,"96":0,"97":0,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":0,"111":1,"112":2,"113":5,"115":2,"117":1,"118":0,"120":1,"121":0,"122":0,"123":0,"124":0,"126":0,"128":1,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"136":0,"138":0,"139":0,"140":0,"145":0,"146":0,"148":0,"149":0,"151":0,"153":1,"154":0,"155":0,"156":0,"157":0,"159":0,"161":0,"164":0,"168":0,"170":1,"171":1,"172":1,"173":1,"174":0,"175":0,"176":0,"177":0,"181":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"194":0,"195":0,"198":0,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"214":0,"215":0,"216":0,"217":0,"218":0,"221":0,"223":0,"224":0,"225":0,"226":0,"235":0,"237":1,"238":0,"240":1,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"257":0,"258":0,"260":0,"269":0,"271":0,"273":1,"274":0,"276":1,"277":0,"278":0,"279":0,"281":1,"282":3,"287":3,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"299":1,"300":0,"301":0,"304":0,"306":0,"308":0,"309":0,"310":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"325":0,"327":0,"328":0,"329":0,"330":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"339":0,"340":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"349":0,"350":0,"351":0,"353":0,"354":0,"356":0,"358":1,"359":1,"360":0,"361":0,"362":0,"363":0,"365":1,"366":0,"367":0,"368":0,"369":0,"370":0,"373":0,"374":0,"375":0,"376":0,"379":0,"385":1,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"393":0,"394":0,"396":0,"397":0,"400":0,"401":0,"402":0,"405":1,"406":0,"407":0,"408":0,"410":0,"411":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"420":0,"421":0,"423":0,"424":0,"425":0,"426":0,"428":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"439":0,"442":0,"445":1,"446":0,"447":0,"448":0,"449":0,"450":0,"453":0,"456":1,"457":0,"458":0,"466":0,"471":1,"472":1,"473":0,"474":0,"475":0,"476":0,"477":0,"481":1,"482":1,"483":1,"484":1,"485":1,"486":1,"487":1,"488":0,"489":0,"490":0,"492":0,"493":0,"494":0,"495":0,"498":0,"500":0,"503":1,"504":1,"505":1,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"517":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"527":0,"528":0,"529":0,"533":0,"535":1,"536":1,"537":1,"538":0,"541":1,"542":1,"543":1,"544":0,"545":0,"549":1,"554":0,"555":0,"558":1,"560":2,"564":1,"565":1,"566":1,"567":1,"569":1,"570":1,"571":210,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"581":210,"582":2,"583":2,"584":2,"585":2,"588":0,"589":0,"592":0,"593":0,"594":0,"595":0,"596":0,"600":210,"601":0,"602":0,"603":0,"604":0,"609":210,"614":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/nextTick.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/nextTick.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,1],"9":[1,1,1,1],"10":[1,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":55},"end":{"line":8,"column":83}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":36},"end":{"line":11,"column":54}}},"4":{"name":"noop","line":14,"loc":{"start":{"line":14,"column":4},"end":{"line":14,"column":20}}},"5":{"name":"(anonymous_5)","line":18,"loc":{"start":{"line":18,"column":19},"end":{"line":18,"column":39}}},"6":{"name":"(anonymous_6)","line":21,"loc":{"start":{"line":21,"column":24},"end":{"line":21,"column":36}}},"7":{"name":"(anonymous_7)","line":29,"loc":{"start":{"line":29,"column":19},"end":{"line":29,"column":39}}},"8":{"name":"(anonymous_8)","line":31,"loc":{"start":{"line":31,"column":29},"end":{"line":31,"column":41}}},"9":{"name":"(anonymous_9)","line":38,"loc":{"start":{"line":38,"column":24},"end":{"line":38,"column":36}}},"10":{"name":"(anonymous_10)","line":48,"loc":{"start":{"line":48,"column":24},"end":{"line":48,"column":36}}},"11":{"name":"(anonymous_11)","line":51,"loc":{"start":{"line":51,"column":52},"end":{"line":51,"column":64}}},"12":{"name":"(anonymous_12)","line":55,"loc":{"start":{"line":55,"column":23},"end":{"line":55,"column":43}}},"13":{"name":"(anonymous_13)","line":63,"loc":{"start":{"line":63,"column":24},"end":{"line":63,"column":36}}},"14":{"name":"(anonymous_14)","line":65,"loc":{"start":{"line":65,"column":23},"end":{"line":65,"column":43}}},"15":{"name":"(anonymous_15)","line":68,"loc":{"start":{"line":68,"column":43},"end":{"line":68,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":80,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":51}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":31}},"10":{"start":{"line":11,"column":4},"end":{"line":13,"column":7}},"11":{"start":{"line":12,"column":8},"end":{"line":12,"column":104}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":23}},"13":{"start":{"line":15,"column":4},"end":{"line":15,"column":17}},"14":{"start":{"line":16,"column":4},"end":{"line":78,"column":5}},"15":{"start":{"line":18,"column":8},"end":{"line":26,"column":10}},"16":{"start":{"line":19,"column":12},"end":{"line":19,"column":47}},"17":{"start":{"line":20,"column":12},"end":{"line":25,"column":14}},"18":{"start":{"line":22,"column":20},"end":{"line":22,"column":39}},"19":{"start":{"line":23,"column":20},"end":{"line":23,"column":42}},"20":{"start":{"line":28,"column":9},"end":{"line":78,"column":5}},"21":{"start":{"line":29,"column":8},"end":{"line":43,"column":10}},"22":{"start":{"line":30,"column":12},"end":{"line":30,"column":32}},"23":{"start":{"line":31,"column":12},"end":{"line":36,"column":15}},"24":{"start":{"line":32,"column":16},"end":{"line":34,"column":17}},"25":{"start":{"line":33,"column":20},"end":{"line":33,"column":27}},"26":{"start":{"line":35,"column":16},"end":{"line":35,"column":27}},"27":{"start":{"line":37,"column":12},"end":{"line":42,"column":14}},"28":{"start":{"line":39,"column":20},"end":{"line":39,"column":39}},"29":{"start":{"line":40,"column":20},"end":{"line":40,"column":35}},"30":{"start":{"line":46,"column":8},"end":{"line":46,"column":40}},"31":{"start":{"line":47,"column":8},"end":{"line":77,"column":9}},"32":{"start":{"line":48,"column":12},"end":{"line":60,"column":17}},"33":{"start":{"line":49,"column":16},"end":{"line":49,"column":92}},"34":{"start":{"line":50,"column":16},"end":{"line":50,"column":60}},"35":{"start":{"line":51,"column":16},"end":{"line":53,"column":19}},"36":{"start":{"line":52,"column":20},"end":{"line":52,"column":34}},"37":{"start":{"line":54,"column":16},"end":{"line":54,"column":64}},"38":{"start":{"line":55,"column":16},"end":{"line":59,"column":18}},"39":{"start":{"line":56,"column":20},"end":{"line":56,"column":53}},"40":{"start":{"line":57,"column":20},"end":{"line":57,"column":60}},"41":{"start":{"line":58,"column":20},"end":{"line":58,"column":34}},"42":{"start":{"line":63,"column":12},"end":{"line":76,"column":17}},"43":{"start":{"line":64,"column":16},"end":{"line":64,"column":26}},"44":{"start":{"line":65,"column":16},"end":{"line":75,"column":18}},"45":{"start":{"line":66,"column":20},"end":{"line":66,"column":53}},"46":{"start":{"line":67,"column":20},"end":{"line":73,"column":21}},"47":{"start":{"line":68,"column":24},"end":{"line":72,"column":30}},"48":{"start":{"line":69,"column":28},"end":{"line":69,"column":48}},"49":{"start":{"line":70,"column":28},"end":{"line":70,"column":41}},"50":{"start":{"line":71,"column":28},"end":{"line":71,"column":42}},"51":{"start":{"line":74,"column":20},"end":{"line":74,"column":34}},"52":{"start":{"line":79,"column":4},"end":{"line":79,"column":20}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":15},"end":{"line":12,"column":34}},{"start":{"line":12,"column":38},"end":{"line":12,"column":103}}]},"7":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":69}},{"start":{"line":12,"column":73},"end":{"line":12,"column":102}}]},"8":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"9":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":43}},{"start":{"line":17,"column":9},"end":{"line":17,"column":26}},{"start":{"line":17,"column":31},"end":{"line":17,"column":47}},{"start":{"line":17,"column":51},"end":{"line":17,"column":90}}]},"10":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":9}},{"start":{"line":28,"column":9},"end":{"line":28,"column":9}}]},"11":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":16}},{"start":{"line":32,"column":16},"end":{"line":32,"column":16}}]},"12":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"13":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":39},"end":{"line":49,"column":60}},{"start":{"line":49,"column":64},"end":{"line":49,"column":91}}]},"14":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":20},"end":{"line":67,"column":20}},{"start":{"line":67,"column":20},"end":{"line":67,"column":20}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './CallbackQueue', './has'], function (require, exports) {","    var CallbackQueue = require('./CallbackQueue');","    var has = require('./has');","    has.add('dom-mutationobserver', function (global) {","        return has('host-browser') && Boolean(global.MutationObserver || global.WebKitMutationObserver);","    });","    function noop() { }","    var nextTick;","    if (typeof setImmediate !== 'undefined' &&","        (!has('host-node') || (has('host-node') && process.version.indexOf('v0.10.') === 0))) {","        nextTick = function (callback) {","            var timer = setImmediate(callback);","            return {","                remove: function () {","                    this.remove = noop;","                    clearImmediate(timer);","                }","            };","        };","    }","    else if (has('host-node')) {","        nextTick = function (callback) {","            var removed = false;","            process.nextTick(function () {","                if (removed) {","                    return;","                }","                callback();","            });","            return {","                remove: function () {","                    this.remove = noop;","                    removed = true;","                }","            };","        };","    }","    else {","        var queue = new CallbackQueue();","        if (has('dom-mutationobserver')) {","            nextTick = (function () {","                var MutationObserver = this.MutationObserver || this.WebKitMutationObserver;","                var element = document.createElement('div');","                var observer = new MutationObserver(function () {","                    queue.drain();","                });","                observer.observe(element, { attributes: true });","                return function (callback) {","                    var handle = queue.add(callback);","                    element.setAttribute('drainQueue', '1');","                    return handle;","                };","            })();","        }","        else {","            nextTick = (function () {","                var timer;","                return function (callback) {","                    var handle = queue.add(callback);","                    if (!timer) {","                        timer = setTimeout(function () {","                            clearTimeout(timer);","                            timer = null;","                            queue.drain();","                        }, 0);","                    }","                    return handle;","                };","            })();","        }","    }","    return nextTick;","});","//# sourceMappingURL=_debug/nextTick.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":0,"14":1,"15":1,"16":1,"18":0,"19":0,"20":0,"22":0,"23":0,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"35":0,"37":0,"39":0,"40":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"74":0,"79":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/node.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/node.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":0,"29":0,"30":0,"31":1},"b":{"1":[1,0],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[1,1],"7":[0,1],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":27},"end":{"line":8,"column":55}}},"3":{"name":"(anonymous_3)","line":9,"loc":{"start":{"line":9,"column":18},"end":{"line":9,"column":30}}},"4":{"name":"load","line":17,"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":44}}},"5":{"name":"normalize","line":37,"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":44,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":11,"column":9}},"9":{"start":{"line":10,"column":8},"end":{"line":10,"column":20}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":67}},"11":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"12":{"start":{"line":14,"column":8},"end":{"line":14,"column":59}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":39}},"14":{"start":{"line":17,"column":4},"end":{"line":35,"column":5}},"15":{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},"16":{"start":{"line":20,"column":12},"end":{"line":20,"column":107}},"17":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"18":{"start":{"line":22,"column":16},"end":{"line":22,"column":37}},"19":{"start":{"line":25,"column":8},"end":{"line":25,"column":38}},"20":{"start":{"line":26,"column":8},"end":{"line":26,"column":19}},"21":{"start":{"line":27,"column":8},"end":{"line":27,"column":34}},"22":{"start":{"line":28,"column":8},"end":{"line":33,"column":9}},"23":{"start":{"line":29,"column":12},"end":{"line":29,"column":37}},"24":{"start":{"line":32,"column":12},"end":{"line":32,"column":38}},"25":{"start":{"line":34,"column":8},"end":{"line":34,"column":21}},"26":{"start":{"line":36,"column":4},"end":{"line":36,"column":24}},"27":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"28":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"29":{"start":{"line":39,"column":12},"end":{"line":39,"column":53}},"30":{"start":{"line":41,"column":8},"end":{"line":41,"column":18}},"31":{"start":{"line":43,"column":4},"end":{"line":43,"column":34}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":22},"end":{"line":12,"column":36}},{"start":{"line":12,"column":40},"end":{"line":12,"column":66}}]},"7":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"8":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]},"9":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":28}},{"start":{"line":19,"column":32},"end":{"line":19,"column":55}}]},"10":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":21,"column":12}},{"start":{"line":21,"column":12},"end":{"line":21,"column":12}}]},"11":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\"], function (require, exports) {","    var global = (function () {","        return this;","    })();","    var nodeRequire = global.require && global.require.nodeRequire;","    if (!nodeRequire) {","        throw new Error('Cannot find the Node.js require');","    }","    var module = nodeRequire('module');","    function load(id, contextRequire, load) {","        /*global define:true */","        if (module._findPath && module._nodeModulePaths) {","            var localModulePath = module._findPath(id, module._nodeModulePaths(contextRequire.toUrl('.')));","            if (localModulePath !== false) {","                id = localModulePath;","            }","        }","        var oldDefine = global.define;","        var result;","        global.define = undefined;","        try {","            result = nodeRequire(id);","        }","        finally {","            global.define = oldDefine;","        }","        load(result);","    }","    exports.load = load;","    function normalize(id, normalize) {","        if (id.charAt(0) === '.') {","            id = require.toUrl(normalize('./' + id));","        }","        return id;","    }","    exports.normalize = normalize;","});","//# sourceMappingURL=_debug/node.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"12":1,"13":1,"14":0,"16":1,"17":1,"19":0,"20":0,"21":0,"22":0,"25":0,"26":0,"27":0,"28":0,"29":0,"32":0,"34":0,"36":1,"37":1,"38":0,"39":0,"41":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/Observable.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/Observable.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":1,"70":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":52},"end":{"line":8,"column":80}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":22},"end":{"line":11,"column":34}}},"4":{"name":"Observable","line":12,"loc":{"start":{"line":12,"column":8},"end":{"line":12,"column":35}}},"5":{"name":"(anonymous_5)","line":35,"loc":{"start":{"line":35,"column":41},"end":{"line":35,"column":53}}},"6":{"name":"(anonymous_6)","line":55,"loc":{"start":{"line":55,"column":40},"end":{"line":55,"column":56}}},"7":{"name":"(anonymous_7)","line":58,"loc":{"start":{"line":58,"column":39},"end":{"line":58,"column":79}}},"8":{"name":"(anonymous_8)","line":76,"loc":{"start":{"line":76,"column":39},"end":{"line":76,"column":69}}},"9":{"name":"(anonymous_9)","line":88,"loc":{"start":{"line":88,"column":41},"end":{"line":88,"column":58}}},"10":{"name":"(anonymous_10)","line":97,"loc":{"start":{"line":97,"column":37},"end":{"line":97,"column":49}}},"11":{"name":"(anonymous_11)","line":101,"loc":{"start":{"line":101,"column":41},"end":{"line":101,"column":61}}},"12":{"name":"(anonymous_12)","line":115,"loc":{"start":{"line":115,"column":24},"end":{"line":115,"column":36}}},"13":{"name":"(anonymous_13)","line":116,"loc":{"start":{"line":116,"column":34},"end":{"line":116,"column":46}}},"14":{"name":"(anonymous_14)","line":122,"loc":{"start":{"line":122,"column":41},"end":{"line":122,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":130,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":33}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":43}},"10":{"start":{"line":11,"column":4},"end":{"line":128,"column":9}},"11":{"start":{"line":12,"column":8},"end":{"line":34,"column":9}},"12":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"13":{"start":{"line":14,"column":16},"end":{"line":14,"column":40}},"14":{"start":{"line":16,"column":12},"end":{"line":33,"column":15}},"15":{"start":{"line":35,"column":8},"end":{"line":54,"column":10}},"16":{"start":{"line":36,"column":12},"end":{"line":39,"column":13}},"17":{"start":{"line":37,"column":16},"end":{"line":37,"column":37}},"18":{"start":{"line":38,"column":16},"end":{"line":38,"column":35}},"19":{"start":{"line":40,"column":12},"end":{"line":40,"column":52}},"20":{"start":{"line":41,"column":12},"end":{"line":41,"column":54}},"21":{"start":{"line":42,"column":12},"end":{"line":53,"column":13}},"22":{"start":{"line":43,"column":16},"end":{"line":43,"column":59}},"23":{"start":{"line":44,"column":16},"end":{"line":46,"column":17}},"24":{"start":{"line":45,"column":20},"end":{"line":45,"column":29}},"25":{"start":{"line":47,"column":16},"end":{"line":47,"column":29}},"26":{"start":{"line":48,"column":16},"end":{"line":52,"column":17}},"27":{"start":{"line":49,"column":20},"end":{"line":51,"column":21}},"28":{"start":{"line":50,"column":24},"end":{"line":50,"column":99}},"29":{"start":{"line":55,"column":8},"end":{"line":57,"column":10}},"30":{"start":{"line":56,"column":12},"end":{"line":56,"column":38}},"31":{"start":{"line":58,"column":8},"end":{"line":75,"column":10}},"32":{"start":{"line":59,"column":12},"end":{"line":59,"column":54}},"33":{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},"34":{"start":{"line":61,"column":16},"end":{"line":61,"column":23}},"35":{"start":{"line":63,"column":12},"end":{"line":63,"column":61}},"36":{"start":{"line":64,"column":12},"end":{"line":73,"column":13}},"37":{"start":{"line":65,"column":16},"end":{"line":65,"column":49}},"38":{"start":{"line":68,"column":16},"end":{"line":72,"column":18}},"39":{"start":{"line":74,"column":12},"end":{"line":74,"column":29}},"40":{"start":{"line":76,"column":8},"end":{"line":121,"column":10}},"41":{"start":{"line":77,"column":12},"end":{"line":79,"column":14}},"42":{"start":{"line":80,"column":12},"end":{"line":112,"column":13}},"43":{"start":{"line":81,"column":16},"end":{"line":84,"column":18}},"44":{"start":{"line":85,"column":16},"end":{"line":106,"column":17}},"45":{"start":{"line":86,"column":20},"end":{"line":86,"column":55}},"46":{"start":{"line":87,"column":20},"end":{"line":94,"column":21}},"47":{"start":{"line":88,"column":24},"end":{"line":93,"column":26}},"48":{"start":{"line":89,"column":28},"end":{"line":89,"column":69}},"49":{"start":{"line":90,"column":28},"end":{"line":90,"column":69}},"50":{"start":{"line":91,"column":28},"end":{"line":91,"column":75}},"51":{"start":{"line":92,"column":28},"end":{"line":92,"column":52}},"52":{"start":{"line":97,"column":20},"end":{"line":99,"column":22}},"53":{"start":{"line":98,"column":24},"end":{"line":98,"column":44}},"54":{"start":{"line":100,"column":20},"end":{"line":105,"column":21}},"55":{"start":{"line":101,"column":24},"end":{"line":104,"column":26}},"56":{"start":{"line":102,"column":28},"end":{"line":102,"column":75}},"57":{"start":{"line":103,"column":28},"end":{"line":103,"column":52}},"58":{"start":{"line":107,"column":16},"end":{"line":107,"column":66}},"59":{"start":{"line":108,"column":16},"end":{"line":108,"column":61}},"60":{"start":{"line":111,"column":16},"end":{"line":111,"column":63}},"61":{"start":{"line":113,"column":12},"end":{"line":113,"column":28}},"62":{"start":{"line":114,"column":12},"end":{"line":120,"column":14}},"63":{"start":{"line":116,"column":20},"end":{"line":116,"column":50}},"64":{"start":{"line":117,"column":20},"end":{"line":117,"column":50}},"65":{"start":{"line":118,"column":20},"end":{"line":118,"column":82}},"66":{"start":{"line":122,"column":8},"end":{"line":126,"column":10}},"67":{"start":{"line":123,"column":12},"end":{"line":125,"column":13}},"68":{"start":{"line":124,"column":16},"end":{"line":124,"column":65}},"69":{"start":{"line":127,"column":8},"end":{"line":127,"column":26}},"70":{"start":{"line":129,"column":4},"end":{"line":129,"column":22}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":12},"end":{"line":13,"column":12}},{"start":{"line":13,"column":12},"end":{"line":13,"column":12}}]},"7":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":12}},{"start":{"line":36,"column":12},"end":{"line":36,"column":12}}]},"8":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":16}},{"start":{"line":44,"column":16},"end":{"line":44,"column":16}}]},"9":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":20},"end":{"line":49,"column":20}},{"start":{"line":49,"column":20},"end":{"line":49,"column":20}}]},"10":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":12}},{"start":{"line":60,"column":12},"end":{"line":60,"column":12}}]},"11":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":16},"end":{"line":60,"column":26}},{"start":{"line":60,"column":30},"end":{"line":60,"column":47}}]},"12":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":12}},{"start":{"line":64,"column":12},"end":{"line":64,"column":12}}]},"13":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":12},"end":{"line":80,"column":12}},{"start":{"line":80,"column":12},"end":{"line":80,"column":12}}]},"14":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":16},"end":{"line":85,"column":16}},{"start":{"line":85,"column":16},"end":{"line":85,"column":16}}]},"15":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":20},"end":{"line":85,"column":33}},{"start":{"line":85,"column":37},"end":{"line":85,"column":64}}]},"16":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":20},"end":{"line":87,"column":20}},{"start":{"line":87,"column":20},"end":{"line":87,"column":20}}]},"17":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":20},"end":{"line":100,"column":20}},{"start":{"line":100,"column":20},"end":{"line":100,"column":20}}]},"18":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":12},"end":{"line":123,"column":12}},{"start":{"line":123,"column":12},"end":{"line":123,"column":12}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './lang', './Scheduler'], function (require, exports) {","    var lang = require('./lang');","    var Scheduler = require('./Scheduler');","    var Observable = (function () {","        function Observable(props) {","            if (props) {","                lang.mixin(this, props);","            }","            Object.defineProperties(this, {","                _callbacks: {","                    value: {}","                },","                _dispatch: {","                    configurable: true,","                    value: this._dispatch.bind(this),","                    writable: true","                },","                _notifications: {","                    value: Object.create(null),","                    writable: true","                },","                _timer: {","                    value: null,","                    writable: true","                }","            });","        }","        Observable.prototype._dispatch = function () {","            if (this._timer) {","                this._timer.remove();","                this._timer = null;","            }","            var notifications = this._notifications;","            this._notifications = Object.create(null);","            for (var property in notifications) {","                var notification = notifications[property];","                if (this._isEqual(notification.oldValue, notification.newValue)) {","                    continue;","                }","                var callback;","                for (var i = 0; (callback = notification.callbacks[i]); i++) {","                    if (!callback.removed) {","                        callback.callback.call(this, notification.newValue, notification.oldValue);","                    }","                }","            }","        };","        Observable.prototype._isEqual = function (a, b) {","            return lang.isEqual(a, b);","        };","        Observable.prototype._notify = function (property, newValue, oldValue) {","            var callbacks = this._callbacks[property];","            if (!callbacks || !callbacks.length) {","                return;","            }","            var notification = this._notifications[property];","            if (notification) {","                notification.newValue = newValue;","            }","            else {","                this._notifications[property] = {","                    newValue: newValue,","                    oldValue: oldValue,","                    callbacks: callbacks.slice(0)","                };","            }","            this._schedule();","        };","        Observable.prototype.observe = function (property, callback) {","            var callbackObject = {","                callback: callback","            };","            if (!this._callbacks[property]) {","                var oldDescriptor = lang.getPropertyDescriptor(this, property), currentValue = this[property], descriptor = {","                    configurable: true,","                    enumerable: true","                };","                if (oldDescriptor && !('value' in oldDescriptor)) {","                    descriptor.get = oldDescriptor.get;","                    if (oldDescriptor.set) {","                        descriptor.set = function (value) {","                            oldDescriptor.set.apply(this, arguments);","                            var newValue = descriptor.get.call(this);","                            this._notify(property, newValue, currentValue);","                            currentValue = newValue;","                        };","                    }","                }","                else {","                    descriptor.get = function () {","                        return currentValue;","                    };","                    if (oldDescriptor.writable) {","                        descriptor.set = function (newValue) {","                            this._notify(property, newValue, currentValue);","                            currentValue = newValue;","                        };","                    }","                }","                Object.defineProperty(this, property, descriptor);","                this._callbacks[property] = [callbackObject];","            }","            else {","                this._callbacks[property].push(callbackObject);","            }","            var self = this;","            return {","                remove: function () {","                    this.remove = function () { };","                    callbackObject.removed = true;","                    lang.pullFromArray(self._callbacks[property], callbackObject);","                }","            };","        };","        Observable.prototype._schedule = function () {","            if (!this._timer) {","                this._timer = Scheduler.schedule(this._dispatch);","            }","        };","        return Observable;","    })();","    return Observable;","});","//# sourceMappingURL=_debug/Observable.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"16":0,"35":1,"36":0,"37":0,"38":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"50":0,"55":1,"56":0,"58":1,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"68":0,"74":0,"76":1,"77":0,"80":0,"81":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"97":0,"98":0,"100":0,"101":0,"102":0,"103":0,"107":0,"108":0,"111":0,"113":0,"114":0,"116":0,"117":0,"118":0,"122":1,"123":0,"124":0,"127":1,"129":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/Scheduler.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/Scheduler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":60},"end":{"line":8,"column":88}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":21},"end":{"line":11,"column":33}}},"4":{"name":"Scheduler","line":12,"loc":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}}},"5":{"name":"(anonymous_5)","line":15,"loc":{"start":{"line":15,"column":29},"end":{"line":15,"column":49}}},"6":{"name":"(anonymous_6)","line":18,"loc":{"start":{"line":18,"column":39},"end":{"line":18,"column":59}}},"7":{"name":"(anonymous_7)","line":21,"loc":{"start":{"line":21,"column":21},"end":{"line":21,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":30,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":51}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":41}},"10":{"start":{"line":11,"column":4},"end":{"line":27,"column":9}},"11":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"12":{"start":{"line":13,"column":12},"end":{"line":13,"column":50}},"13":{"start":{"line":15,"column":8},"end":{"line":17,"column":10}},"14":{"start":{"line":16,"column":12},"end":{"line":16,"column":48}},"15":{"start":{"line":18,"column":8},"end":{"line":25,"column":10}},"16":{"start":{"line":19,"column":12},"end":{"line":19,"column":29}},"17":{"start":{"line":20,"column":12},"end":{"line":20,"column":55}},"18":{"start":{"line":21,"column":12},"end":{"line":23,"column":15}},"19":{"start":{"line":22,"column":16},"end":{"line":22,"column":41}},"20":{"start":{"line":24,"column":12},"end":{"line":24,"column":26}},"21":{"start":{"line":26,"column":8},"end":{"line":26,"column":25}},"22":{"start":{"line":28,"column":4},"end":{"line":28,"column":36}},"23":{"start":{"line":29,"column":4},"end":{"line":29,"column":21}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './CallbackQueue', './nextTick'], function (require, exports) {","    var CallbackQueue = require('./CallbackQueue');","    var nextTick = require('./nextTick');","    var Scheduler = (function () {","        function Scheduler() {","            this._callbacks = new CallbackQueue();","        }","        Scheduler.schedule = function (callback) {","            return scheduler.schedule(callback);","        };","        Scheduler.prototype.schedule = function (callback) {","            var _this = this;","            var handle = this._callbacks.add(callback);","            nextTick(function () {","                _this._callbacks.drain();","            });","            return handle;","        };","        return Scheduler;","    })();","    var scheduler = new Scheduler();","    return Scheduler;","});","//# sourceMappingURL=_debug/Scheduler.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"16":0,"18":1,"19":0,"20":0,"21":0,"22":0,"24":0,"26":1,"28":1,"29":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/Promise.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/Promise.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":1,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":1,"161":1,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":1,"175":0,"176":1,"177":1,"178":1,"179":1,"180":1,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[1,1],"39":[1,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":0,"52":0,"53":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":41},"end":{"line":8,"column":69}}},"3":{"name":"isPromise","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":30}}},"4":{"name":"runCallbacks","line":13,"loc":{"start":{"line":13,"column":4},"end":{"line":13,"column":37}}},"5":{"name":"(anonymous_5)","line":22,"loc":{"start":{"line":22,"column":19},"end":{"line":22,"column":31}}},"6":{"name":"Promise","line":23,"loc":{"start":{"line":23,"column":8},"end":{"line":23,"column":38}}},"7":{"name":"(anonymous_7)","line":26,"loc":{"start":{"line":26,"column":21},"end":{"line":26,"column":33}}},"8":{"name":"isResolved","line":30,"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":34}}},"9":{"name":"(anonymous_9)","line":36,"loc":{"start":{"line":36,"column":31},"end":{"line":36,"column":51}}},"10":{"name":"(anonymous_10)","line":40,"loc":{"start":{"line":40,"column":31},"end":{"line":40,"column":51}}},"11":{"name":"(anonymous_11)","line":44,"loc":{"start":{"line":44,"column":27},"end":{"line":44,"column":39}}},"12":{"name":"originalSchedule","line":45,"loc":{"start":{"line":45,"column":16},"end":{"line":45,"column":44}}},"13":{"name":"(anonymous_13)","line":46,"loc":{"start":{"line":46,"column":31},"end":{"line":46,"column":43}}},"14":{"name":"run","line":47,"loc":{"start":{"line":47,"column":29},"end":{"line":47,"column":44}}},"15":{"name":"(anonymous_15)","line":66,"loc":{"start":{"line":66,"column":23},"end":{"line":66,"column":43}}},"16":{"name":"(anonymous_16)","line":71,"loc":{"start":{"line":71,"column":26},"end":{"line":71,"column":53}}},"17":{"name":"settle","line":94,"loc":{"start":{"line":94,"column":12},"end":{"line":94,"column":45}}},"18":{"name":"(anonymous_18)","line":101,"loc":{"start":{"line":101,"column":31},"end":{"line":101,"column":43}}},"19":{"name":"(anonymous_19)","line":102,"loc":{"start":{"line":102,"column":24},"end":{"line":102,"column":36}}},"20":{"name":"(anonymous_20)","line":107,"loc":{"start":{"line":107,"column":26},"end":{"line":107,"column":44}}},"21":{"name":"(anonymous_21)","line":127,"loc":{"start":{"line":127,"column":24},"end":{"line":127,"column":71}}},"22":{"name":"(anonymous_22)","line":128,"loc":{"start":{"line":128,"column":35},"end":{"line":128,"column":85}}},"23":{"name":"(anonymous_23)","line":129,"loc":{"start":{"line":129,"column":32},"end":{"line":129,"column":50}}},"24":{"name":"(anonymous_24)","line":137,"loc":{"start":{"line":137,"column":33},"end":{"line":137,"column":49}}},"25":{"name":"(anonymous_25)","line":152,"loc":{"start":{"line":152,"column":33},"end":{"line":152,"column":45}}},"26":{"name":"(anonymous_26)","line":172,"loc":{"start":{"line":172,"column":117},"end":{"line":172,"column":133}}},"27":{"name":"(anonymous_27)","line":176,"loc":{"start":{"line":176,"column":19},"end":{"line":176,"column":36}}},"28":{"name":"(anonymous_28)","line":186,"loc":{"start":{"line":186,"column":22},"end":{"line":186,"column":42}}},"29":{"name":"(anonymous_29)","line":187,"loc":{"start":{"line":187,"column":28},"end":{"line":187,"column":78}}},"30":{"name":"(anonymous_30)","line":188,"loc":{"start":{"line":188,"column":28},"end":{"line":188,"column":46}}},"31":{"name":"(anonymous_31)","line":189,"loc":{"start":{"line":189,"column":33},"end":{"line":189,"column":55}}},"32":{"name":"fulfill","line":196,"loc":{"start":{"line":196,"column":16},"end":{"line":196,"column":45}}},"33":{"name":"finish","line":202,"loc":{"start":{"line":202,"column":16},"end":{"line":202,"column":34}}},"34":{"name":"processItem","line":208,"loc":{"start":{"line":208,"column":16},"end":{"line":208,"column":49}}},"35":{"name":"walkIterable","line":217,"loc":{"start":{"line":217,"column":16},"end":{"line":217,"column":48}}},"36":{"name":"(anonymous_36)","line":240,"loc":{"start":{"line":240,"column":25},"end":{"line":240,"column":42}}},"37":{"name":"(anonymous_37)","line":241,"loc":{"start":{"line":241,"column":28},"end":{"line":241,"column":55}}},"38":{"name":"(anonymous_38)","line":245,"loc":{"start":{"line":245,"column":26},"end":{"line":245,"column":43}}},"39":{"name":"(anonymous_39)","line":249,"loc":{"start":{"line":249,"column":28},"end":{"line":249,"column":47}}},"40":{"name":"(anonymous_40)","line":253,"loc":{"start":{"line":253,"column":34},"end":{"line":253,"column":56}}},"41":{"name":"(anonymous_41)","line":256,"loc":{"start":{"line":256,"column":36},"end":{"line":256,"column":69}}},"42":{"name":"getFinalValue","line":257,"loc":{"start":{"line":257,"column":12},"end":{"line":257,"column":52}}},"43":{"name":"(anonymous_43)","line":263,"loc":{"start":{"line":263,"column":44},"end":{"line":263,"column":67}}},"44":{"name":"(anonymous_44)","line":271,"loc":{"start":{"line":271,"column":29},"end":{"line":271,"column":46}}},"45":{"name":"(anonymous_45)","line":272,"loc":{"start":{"line":272,"column":37},"end":{"line":272,"column":49}}},"46":{"name":"(anonymous_46)","line":275,"loc":{"start":{"line":275,"column":15},"end":{"line":275,"column":32}}},"47":{"name":"(anonymous_47)","line":276,"loc":{"start":{"line":276,"column":37},"end":{"line":276,"column":49}}},"48":{"name":"(anonymous_48)","line":281,"loc":{"start":{"line":281,"column":37},"end":{"line":281,"column":59}}},"49":{"name":"(anonymous_49)","line":287,"loc":{"start":{"line":287,"column":5},"end":{"line":287,"column":24}}},"50":{"name":"(anonymous_50)","line":288,"loc":{"start":{"line":288,"column":24},"end":{"line":288,"column":36}}},"51":{"name":"Deferred","line":289,"loc":{"start":{"line":289,"column":12},"end":{"line":289,"column":40}}},"52":{"name":"(anonymous_52)","line":291,"loc":{"start":{"line":291,"column":43},"end":{"line":291,"column":93}}},"53":{"name":"(anonymous_53)","line":301,"loc":{"start":{"line":301,"column":9},"end":{"line":301,"column":26}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":309,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":41}},"9":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"10":{"start":{"line":11,"column":8},"end":{"line":11,"column":57}},"11":{"start":{"line":13,"column":4},"end":{"line":21,"column":5}},"12":{"start":{"line":14,"column":8},"end":{"line":14,"column":22}},"13":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"14":{"start":{"line":16,"column":12},"end":{"line":16,"column":41}},"15":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"16":{"start":{"line":19,"column":12},"end":{"line":19,"column":39}},"17":{"start":{"line":22,"column":4},"end":{"line":285,"column":9}},"18":{"start":{"line":23,"column":8},"end":{"line":185,"column":9}},"19":{"start":{"line":24,"column":12},"end":{"line":24,"column":46}},"20":{"start":{"line":25,"column":12},"end":{"line":29,"column":15}},"21":{"start":{"line":27,"column":20},"end":{"line":27,"column":33}},"22":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"23":{"start":{"line":31,"column":16},"end":{"line":31,"column":68}},"24":{"start":{"line":33,"column":12},"end":{"line":33,"column":34}},"25":{"start":{"line":34,"column":12},"end":{"line":34,"column":30}},"26":{"start":{"line":35,"column":12},"end":{"line":35,"column":31}},"27":{"start":{"line":36,"column":12},"end":{"line":38,"column":14}},"28":{"start":{"line":37,"column":16},"end":{"line":37,"column":41}},"29":{"start":{"line":39,"column":12},"end":{"line":39,"column":39}},"30":{"start":{"line":40,"column":12},"end":{"line":42,"column":14}},"31":{"start":{"line":41,"column":16},"end":{"line":41,"column":49}},"32":{"start":{"line":43,"column":12},"end":{"line":43,"column":25}},"33":{"start":{"line":44,"column":12},"end":{"line":70,"column":17}},"34":{"start":{"line":45,"column":16},"end":{"line":63,"column":17}},"35":{"start":{"line":46,"column":20},"end":{"line":46,"column":47}},"36":{"start":{"line":47,"column":20},"end":{"line":62,"column":23}},"37":{"start":{"line":48,"column":24},"end":{"line":61,"column":25}},"38":{"start":{"line":49,"column":28},"end":{"line":49,"column":41}},"39":{"start":{"line":50,"column":28},"end":{"line":52,"column":29}},"40":{"start":{"line":51,"column":32},"end":{"line":51,"column":43}},"41":{"start":{"line":55,"column":28},"end":{"line":60,"column":29}},"42":{"start":{"line":56,"column":32},"end":{"line":56,"column":38}},"43":{"start":{"line":59,"column":32},"end":{"line":59,"column":60}},"44":{"start":{"line":64,"column":16},"end":{"line":64,"column":31}},"45":{"start":{"line":65,"column":16},"end":{"line":65,"column":48}},"46":{"start":{"line":66,"column":16},"end":{"line":69,"column":18}},"47":{"start":{"line":67,"column":20},"end":{"line":67,"column":41}},"48":{"start":{"line":68,"column":20},"end":{"line":68,"column":31}},"49":{"start":{"line":71,"column":12},"end":{"line":93,"column":25}},"50":{"start":{"line":72,"column":16},"end":{"line":74,"column":17}},"51":{"start":{"line":73,"column":20},"end":{"line":73,"column":27}},"52":{"start":{"line":75,"column":16},"end":{"line":92,"column":17}},"53":{"start":{"line":76,"column":20},"end":{"line":79,"column":21}},"54":{"start":{"line":77,"column":24},"end":{"line":77,"column":106}},"55":{"start":{"line":78,"column":24},"end":{"line":78,"column":31}},"56":{"start":{"line":80,"column":20},"end":{"line":88,"column":21}},"57":{"start":{"line":81,"column":24},"end":{"line":81,"column":122}},"58":{"start":{"line":82,"column":24},"end":{"line":82,"column":41}},"59":{"start":{"line":83,"column":24},"end":{"line":83,"column":48}},"60":{"start":{"line":86,"column":24},"end":{"line":86,"column":62}},"61":{"start":{"line":87,"column":24},"end":{"line":87,"column":31}},"62":{"start":{"line":91,"column":20},"end":{"line":91,"column":44}},"63":{"start":{"line":94,"column":12},"end":{"line":106,"column":13}},"64":{"start":{"line":95,"column":16},"end":{"line":97,"column":17}},"65":{"start":{"line":96,"column":20},"end":{"line":96,"column":27}},"66":{"start":{"line":98,"column":16},"end":{"line":98,"column":33}},"67":{"start":{"line":99,"column":16},"end":{"line":99,"column":38}},"68":{"start":{"line":100,"column":16},"end":{"line":100,"column":39}},"69":{"start":{"line":101,"column":16},"end":{"line":101,"column":47}},"70":{"start":{"line":102,"column":16},"end":{"line":105,"column":19}},"71":{"start":{"line":103,"column":20},"end":{"line":103,"column":44}},"72":{"start":{"line":104,"column":20},"end":{"line":104,"column":57}},"73":{"start":{"line":107,"column":12},"end":{"line":126,"column":14}},"74":{"start":{"line":108,"column":16},"end":{"line":110,"column":17}},"75":{"start":{"line":109,"column":20},"end":{"line":109,"column":27}},"76":{"start":{"line":111,"column":16},"end":{"line":114,"column":17}},"77":{"start":{"line":112,"column":20},"end":{"line":112,"column":52}},"78":{"start":{"line":113,"column":20},"end":{"line":113,"column":48}},"79":{"start":{"line":115,"column":16},"end":{"line":118,"column":17}},"80":{"start":{"line":116,"column":20},"end":{"line":116,"column":59}},"81":{"start":{"line":117,"column":20},"end":{"line":117,"column":50}},"82":{"start":{"line":119,"column":16},"end":{"line":125,"column":17}},"83":{"start":{"line":120,"column":20},"end":{"line":120,"column":71}},"84":{"start":{"line":123,"column":20},"end":{"line":123,"column":58}},"85":{"start":{"line":124,"column":20},"end":{"line":124,"column":49}},"86":{"start":{"line":127,"column":12},"end":{"line":170,"column":14}},"87":{"start":{"line":128,"column":16},"end":{"line":169,"column":19}},"88":{"start":{"line":129,"column":20},"end":{"line":136,"column":23}},"89":{"start":{"line":130,"column":24},"end":{"line":135,"column":25}},"90":{"start":{"line":131,"column":28},"end":{"line":131,"column":54}},"91":{"start":{"line":134,"column":28},"end":{"line":134,"column":41}},"92":{"start":{"line":137,"column":20},"end":{"line":151,"column":23}},"93":{"start":{"line":138,"column":24},"end":{"line":150,"column":25}},"94":{"start":{"line":139,"column":28},"end":{"line":144,"column":29}},"95":{"start":{"line":140,"column":32},"end":{"line":140,"column":59}},"96":{"start":{"line":143,"column":32},"end":{"line":143,"column":47}},"97":{"start":{"line":147,"column":28},"end":{"line":149,"column":29}},"98":{"start":{"line":148,"column":32},"end":{"line":148,"column":44}},"99":{"start":{"line":152,"column":20},"end":{"line":168,"column":23}},"100":{"start":{"line":153,"column":24},"end":{"line":153,"column":99}},"101":{"start":{"line":154,"column":24},"end":{"line":167,"column":25}},"102":{"start":{"line":155,"column":28},"end":{"line":160,"column":29}},"103":{"start":{"line":156,"column":32},"end":{"line":156,"column":65}},"104":{"start":{"line":159,"column":32},"end":{"line":159,"column":46}},"105":{"start":{"line":162,"column":29},"end":{"line":167,"column":25}},"106":{"start":{"line":163,"column":28},"end":{"line":163,"column":50}},"107":{"start":{"line":166,"column":28},"end":{"line":166,"column":51}},"108":{"start":{"line":171,"column":12},"end":{"line":184,"column":13}},"109":{"start":{"line":172,"column":16},"end":{"line":180,"column":19}},"110":{"start":{"line":173,"column":20},"end":{"line":175,"column":21}},"111":{"start":{"line":174,"column":24},"end":{"line":174,"column":82}},"112":{"start":{"line":177,"column":20},"end":{"line":179,"column":21}},"113":{"start":{"line":178,"column":24},"end":{"line":178,"column":41}},"114":{"start":{"line":183,"column":16},"end":{"line":183,"column":54}},"115":{"start":{"line":186,"column":8},"end":{"line":239,"column":10}},"116":{"start":{"line":187,"column":12},"end":{"line":238,"column":15}},"117":{"start":{"line":188,"column":16},"end":{"line":195,"column":19}},"118":{"start":{"line":189,"column":20},"end":{"line":193,"column":23}},"119":{"start":{"line":190,"column":24},"end":{"line":192,"column":25}},"120":{"start":{"line":191,"column":28},"end":{"line":191,"column":49}},"121":{"start":{"line":194,"column":20},"end":{"line":194,"column":33}},"122":{"start":{"line":196,"column":16},"end":{"line":201,"column":17}},"123":{"start":{"line":197,"column":20},"end":{"line":197,"column":40}},"124":{"start":{"line":198,"column":20},"end":{"line":198,"column":37}},"125":{"start":{"line":199,"column":20},"end":{"line":199,"column":31}},"126":{"start":{"line":200,"column":20},"end":{"line":200,"column":29}},"127":{"start":{"line":202,"column":16},"end":{"line":207,"column":17}},"128":{"start":{"line":203,"column":20},"end":{"line":205,"column":21}},"129":{"start":{"line":204,"column":24},"end":{"line":204,"column":31}},"130":{"start":{"line":206,"column":20},"end":{"line":206,"column":36}},"131":{"start":{"line":208,"column":16},"end":{"line":216,"column":17}},"132":{"start":{"line":209,"column":20},"end":{"line":209,"column":28}},"133":{"start":{"line":210,"column":20},"end":{"line":215,"column":21}},"134":{"start":{"line":211,"column":24},"end":{"line":211,"column":68}},"135":{"start":{"line":214,"column":24},"end":{"line":214,"column":44}},"136":{"start":{"line":217,"column":16},"end":{"line":230,"column":17}},"137":{"start":{"line":218,"column":20},"end":{"line":229,"column":21}},"138":{"start":{"line":219,"column":24},"end":{"line":223,"column":25}},"139":{"start":{"line":220,"column":28},"end":{"line":222,"column":29}},"140":{"start":{"line":221,"column":32},"end":{"line":221,"column":65}},"141":{"start":{"line":226,"column":24},"end":{"line":228,"column":25}},"142":{"start":{"line":227,"column":28},"end":{"line":227,"column":57}},"143":{"start":{"line":231,"column":16},"end":{"line":231,"column":63}},"144":{"start":{"line":232,"column":16},"end":{"line":232,"column":33}},"145":{"start":{"line":233,"column":16},"end":{"line":233,"column":30}},"146":{"start":{"line":234,"column":16},"end":{"line":234,"column":38}},"147":{"start":{"line":235,"column":16},"end":{"line":235,"column":42}},"148":{"start":{"line":236,"column":16},"end":{"line":236,"column":35}},"149":{"start":{"line":237,"column":16},"end":{"line":237,"column":25}},"150":{"start":{"line":240,"column":8},"end":{"line":244,"column":10}},"151":{"start":{"line":241,"column":12},"end":{"line":243,"column":15}},"152":{"start":{"line":242,"column":16},"end":{"line":242,"column":30}},"153":{"start":{"line":245,"column":8},"end":{"line":252,"column":10}},"154":{"start":{"line":246,"column":12},"end":{"line":248,"column":13}},"155":{"start":{"line":247,"column":16},"end":{"line":247,"column":29}},"156":{"start":{"line":249,"column":12},"end":{"line":251,"column":15}},"157":{"start":{"line":250,"column":16},"end":{"line":250,"column":31}},"158":{"start":{"line":253,"column":8},"end":{"line":255,"column":10}},"159":{"start":{"line":254,"column":12},"end":{"line":254,"column":47}},"160":{"start":{"line":256,"column":8},"end":{"line":280,"column":10}},"161":{"start":{"line":257,"column":12},"end":{"line":270,"column":13}},"162":{"start":{"line":258,"column":16},"end":{"line":258,"column":58}},"163":{"start":{"line":259,"column":16},"end":{"line":269,"column":17}},"164":{"start":{"line":260,"column":20},"end":{"line":260,"column":45}},"165":{"start":{"line":262,"column":21},"end":{"line":269,"column":17}},"166":{"start":{"line":263,"column":20},"end":{"line":265,"column":23}},"167":{"start":{"line":264,"column":24},"end":{"line":264,"column":91}},"168":{"start":{"line":268,"column":20},"end":{"line":268,"column":39}},"169":{"start":{"line":271,"column":12},"end":{"line":279,"column":15}},"170":{"start":{"line":272,"column":16},"end":{"line":274,"column":19}},"171":{"start":{"line":273,"column":20},"end":{"line":273,"column":33}},"172":{"start":{"line":276,"column":16},"end":{"line":278,"column":19}},"173":{"start":{"line":277,"column":20},"end":{"line":277,"column":32}},"174":{"start":{"line":281,"column":8},"end":{"line":283,"column":10}},"175":{"start":{"line":282,"column":12},"end":{"line":282,"column":53}},"176":{"start":{"line":284,"column":8},"end":{"line":284,"column":23}},"177":{"start":{"line":286,"column":4},"end":{"line":286,"column":16}},"178":{"start":{"line":287,"column":4},"end":{"line":307,"column":34}},"179":{"start":{"line":288,"column":8},"end":{"line":299,"column":13}},"180":{"start":{"line":289,"column":12},"end":{"line":297,"column":13}},"181":{"start":{"line":290,"column":16},"end":{"line":290,"column":33}},"182":{"start":{"line":291,"column":16},"end":{"line":296,"column":19}},"183":{"start":{"line":292,"column":20},"end":{"line":292,"column":46}},"184":{"start":{"line":293,"column":20},"end":{"line":293,"column":42}},"185":{"start":{"line":294,"column":20},"end":{"line":294,"column":44}},"186":{"start":{"line":295,"column":20},"end":{"line":295,"column":54}},"187":{"start":{"line":298,"column":12},"end":{"line":298,"column":28}},"188":{"start":{"line":300,"column":8},"end":{"line":300,"column":36}},"189":{"start":{"line":301,"column":8},"end":{"line":305,"column":50}},"190":{"start":{"line":302,"column":12},"end":{"line":302,"column":52}},"191":{"start":{"line":303,"column":12},"end":{"line":303,"column":56}},"192":{"start":{"line":304,"column":12},"end":{"line":304,"column":54}},"193":{"start":{"line":306,"column":8},"end":{"line":306,"column":34}},"194":{"start":{"line":308,"column":4},"end":{"line":308,"column":19}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":15},"end":{"line":11,"column":20}},{"start":{"line":11,"column":24},"end":{"line":11,"column":56}}]},"7":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":23},"end":{"line":31,"column":54}},{"start":{"line":31,"column":58},"end":{"line":31,"column":67}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":28},"end":{"line":55,"column":28}},{"start":{"line":55,"column":28},"end":{"line":55,"column":28}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":16}},{"start":{"line":72,"column":16},"end":{"line":72,"column":16}}]},"10":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":16},"end":{"line":75,"column":16}},{"start":{"line":75,"column":16},"end":{"line":75,"column":16}}]},"11":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":20},"end":{"line":76,"column":20}},{"start":{"line":76,"column":20},"end":{"line":76,"column":20}}]},"12":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":16},"end":{"line":95,"column":16}},{"start":{"line":95,"column":16},"end":{"line":95,"column":16}}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":16}},{"start":{"line":108,"column":16},"end":{"line":108,"column":16}}]},"14":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":16},"end":{"line":111,"column":16}},{"start":{"line":111,"column":16},"end":{"line":111,"column":16}}]},"15":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":16},"end":{"line":115,"column":16}},{"start":{"line":115,"column":16},"end":{"line":115,"column":16}}]},"16":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":24},"end":{"line":130,"column":24}},{"start":{"line":130,"column":24},"end":{"line":130,"column":24}}]},"17":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":28},"end":{"line":139,"column":28}},{"start":{"line":139,"column":28},"end":{"line":139,"column":28}}]},"18":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":28},"end":{"line":147,"column":28}},{"start":{"line":147,"column":28},"end":{"line":147,"column":28}}]},"19":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":74},"end":{"line":153,"column":84}},{"start":{"line":153,"column":87},"end":{"line":153,"column":98}}]},"20":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":24},"end":{"line":154,"column":24}},{"start":{"line":154,"column":24},"end":{"line":154,"column":24}}]},"21":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":29},"end":{"line":162,"column":29}},{"start":{"line":162,"column":29},"end":{"line":162,"column":29}}]},"22":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":20},"end":{"line":173,"column":20}},{"start":{"line":173,"column":20},"end":{"line":173,"column":20}}]},"23":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":20},"end":{"line":177,"column":20}},{"start":{"line":177,"column":20},"end":{"line":177,"column":20}}]},"24":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":24},"end":{"line":190,"column":24}},{"start":{"line":190,"column":24},"end":{"line":190,"column":24}}]},"25":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":28},"end":{"line":190,"column":33}},{"start":{"line":190,"column":37},"end":{"line":190,"column":49}}]},"26":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":20},"end":{"line":203,"column":20}},{"start":{"line":203,"column":20},"end":{"line":203,"column":20}}]},"27":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":24},"end":{"line":203,"column":34}},{"start":{"line":203,"column":38},"end":{"line":203,"column":54}}]},"28":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":20},"end":{"line":210,"column":20}},{"start":{"line":210,"column":20},"end":{"line":210,"column":20}}]},"29":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":20},"end":{"line":218,"column":20}},{"start":{"line":218,"column":20},"end":{"line":218,"column":20}}]},"30":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":28},"end":{"line":220,"column":28}},{"start":{"line":220,"column":28},"end":{"line":220,"column":28}}]},"31":{"line":231,"type":"cond-expr","locations":[{"start":{"line":231,"column":55},"end":{"line":231,"column":57}},{"start":{"line":231,"column":60},"end":{"line":231,"column":62}}]},"32":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":12},"end":{"line":246,"column":12}},{"start":{"line":246,"column":12},"end":{"line":246,"column":12}}]},"33":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":16},"end":{"line":259,"column":16}},{"start":{"line":259,"column":16},"end":{"line":259,"column":16}}]},"34":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":21},"end":{"line":262,"column":21}},{"start":{"line":262,"column":21},"end":{"line":262,"column":21}}]},"35":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":25},"end":{"line":262,"column":36}},{"start":{"line":262,"column":40},"end":{"line":262,"column":56}}]},"36":{"line":264,"type":"cond-expr","locations":[{"start":{"line":264,"column":59},"end":{"line":264,"column":70}},{"start":{"line":264,"column":73},"end":{"line":264,"column":90}}]},"37":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":20},"end":{"line":295,"column":28}},{"start":{"line":295,"column":32},"end":{"line":295,"column":53}}]},"38":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":11},"end":{"line":305,"column":24}},{"start":{"line":305,"column":29},"end":{"line":305,"column":47}}]},"39":{"line":307,"type":"binary-expr","locations":[{"start":{"line":307,"column":7},"end":{"line":307,"column":14}},{"start":{"line":307,"column":19},"end":{"line":307,"column":31}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './nextTick'], function (require, exports) {","    var nextTick = require('./nextTick');","    function isPromise(value) {","        return value && typeof value.then === 'function';","    }","    function runCallbacks(callbacks) {","        var args = [];","        for (var _i = 1; _i < arguments.length; _i++) {","            args[_i - 1] = arguments[_i];","        }","        for (var i = 0, callback; callback = callbacks[i]; ++i) {","            callback.apply(null, args);","        }","    }","    var Promise = (function () {","        function Promise(initializer) {","            var state = Promise.State.PENDING;","            Object.defineProperty(this, 'state', {","                get: function () {","                    return state;","                }","            });","            function isResolved() {","                return state !== Promise.State.PENDING || isChained;","            }","            var isChained = false;","            var resolvedValue;","            var callbacks = [];","            var whenFinished = function (callback) {","                callbacks.push(callback);","            };","            var progressCallbacks = [];","            var whenProgress = function (callback) {","                progressCallbacks.push(callback);","            };","            var canceler;","            var enqueue = (function () {","                function originalSchedule() {","                    schedule = function () { };","                    nextTick(function run() {","                        try {","                            var callback;","                            while ((callback = queue.shift())) {","                                callback();","                            }","                        }","                        finally {","                            if (queue.length) {","                                run();","                            }","                            else {","                                schedule = originalSchedule;","                            }","                        }","                    });","                }","                var queue = [];","                var schedule = originalSchedule;","                return function (callback) {","                    queue.push(callback);","                    schedule();","                };","            })();","            var resolve = function (newState, value) {","                if (isResolved()) {","                    return;","                }","                if (isPromise(value)) {","                    if (value === this) {","                        settle(Promise.State.REJECTED, new TypeError('Cannot chain a promise to itself'));","                        return;","                    }","                    try {","                        value.then(settle.bind(null, Promise.State.FULFILLED), settle.bind(null, Promise.State.REJECTED));","                        isChained = true;","                        canceler = value.cancel;","                    }","                    catch (error) {","                        settle(Promise.State.REJECTED, error);","                        return;","                    }","                }","                else {","                    settle(newState, value);","                }","            }.bind(this);","            function settle(newState, value) {","                if (state !== Promise.State.PENDING) {","                    return;","                }","                state = newState;","                resolvedValue = value;","                whenFinished = enqueue;","                whenProgress = function () { };","                enqueue(function () {","                    runCallbacks(callbacks);","                    callbacks = progressCallbacks = null;","                });","            }","            this.cancel = function (reason) {","                if (state !== Promise.State.PENDING) {","                    return;","                }","                if (!reason) {","                    reason = new Error('Cancelled');","                    reason.name = 'CancelError';","                }","                if (!canceler) {","                    settle(Promise.State.REJECTED, reason);","                    return Promise.reject(reason);","                }","                try {","                    resolve(Promise.State.FULFILLED, canceler(reason));","                }","                catch (error) {","                    settle(Promise.State.REJECTED, error);","                    return Promise.reject(error);","                }","            };","            this.then = function (onFulfilled, onRejected, onProgress) {","                return new Promise(function (resolve, reject, progress, setCanceler) {","                    setCanceler(function (reason) {","                        if (canceler) {","                            resolve(canceler(reason));","                        }","                        else {","                            throw reason;","                        }","                    });","                    whenProgress(function (data) {","                        try {","                            if (typeof onProgress === 'function') {","                                progress(onProgress(data));","                            }","                            else {","                                progress(data);","                            }","                        }","                        catch (error) {","                            if (error.name !== 'StopProgressPropagation') {","                                throw error;","                            }","                        }","                    });","                    whenFinished(function () {","                        var callback = state === Promise.State.REJECTED ? onRejected : onFulfilled;","                        if (typeof callback === 'function') {","                            try {","                                resolve(callback(resolvedValue));","                            }","                            catch (error) {","                                reject(error);","                            }","                        }","                        else if (state === Promise.State.REJECTED) {","                            reject(resolvedValue);","                        }","                        else {","                            resolve(resolvedValue);","                        }","                    });","                });","            };","            try {","                initializer(resolve.bind(null, Promise.State.FULFILLED), resolve.bind(null, Promise.State.REJECTED), function (data) {","                    if (state === Promise.State.PENDING) {","                        enqueue(runCallbacks.bind(null, progressCallbacks, data));","                    }","                }, function (value) {","                    if (!isResolved()) {","                        canceler = value;","                    }","                });","            }","            catch (error) {","                settle(Promise.State.REJECTED, error);","            }","        }","        Promise.all = function (iterable) {","            return new this(function (resolve, reject, progress, setCanceler) {","                setCanceler(function (reason) {","                    walkIterable(function (key, value) {","                        if (value && value.cancel) {","                            value.cancel(reason);","                        }","                    });","                    throw reason;","                });","                function fulfill(key, value) {","                    values[key] = value;","                    progress(values);","                    ++complete;","                    finish();","                }","                function finish() {","                    if (populating || complete < total) {","                        return;","                    }","                    resolve(values);","                }","                function processItem(key, value) {","                    ++total;","                    if (isPromise(value)) {","                        value.then(fulfill.bind(null, key), reject);","                    }","                    else {","                        fulfill(key, value);","                    }","                }","                function walkIterable(callback) {","                    if (Array.isArray(iterable)) {","                        for (var i = 0, j = iterable.length; i < j; ++i) {","                            if (i in iterable) {","                                callback(String(i), iterable[i]);","                            }","                        }","                    }","                    else {","                        for (var key in iterable) {","                            callback(key, iterable[key]);","                        }","                    }","                }","                var values = Array.isArray(iterable) ? [] : {};","                var complete = 0;","                var total = 0;","                var populating = true;","                walkIterable(processItem);","                populating = false;","                finish();","            });","        };","        Promise.reject = function (error) {","            return new this(function (resolve, reject) {","                reject(error);","            });","        };","        Promise.resolve = function (value) {","            if (value instanceof Promise) {","                return value;","            }","            return new this(function (resolve) {","                resolve(value);","            });","        };","        Promise.prototype.catch = function (onRejected) {","            return this.then(null, onRejected);","        };","        Promise.prototype.finally = function (onFulfilledOrRejected) {","            function getFinalValue(defaultCallback) {","                var returnValue = onFulfilledOrRejected();","                if (returnValue === undefined) {","                    return defaultCallback();","                }","                else if (returnValue && returnValue.then) {","                    return returnValue.then(function (returnValue) {","                        return returnValue !== undefined ? returnValue : defaultCallback();","                    });","                }","                else {","                    return returnValue;","                }","            }","            return this.then(function (value) {","                return getFinalValue(function () {","                    return value;","                });","            }, function (error) {","                return getFinalValue(function () {","                    throw error;","                });","            });","        };","        Promise.prototype.progress = function (onProgress) {","            return this.then(null, null, onProgress);","        };","        return Promise;","    })();","    var Promise;","    (function (Promise) {","        var Deferred = (function () {","            function Deferred(canceler) {","                var _this = this;","                this.promise = new Promise(function (resolve, reject, progress, setCanceler) {","                    _this.progress = progress;","                    _this.reject = reject;","                    _this.resolve = resolve;","                    canceler && setCanceler(canceler);","                });","            }","            return Deferred;","        })();","        Promise.Deferred = Deferred;","        (function (State) {","            State[State[\"PENDING\"] = 0] = \"PENDING\";","            State[State[\"FULFILLED\"] = 1] = \"FULFILLED\";","            State[State[\"REJECTED\"] = 2] = \"REJECTED\";","        })(Promise.State || (Promise.State = {}));","        var State = Promise.State;","    })(Promise || (Promise = {}));","    return Promise;","});","//# sourceMappingURL=_debug/Promise.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":0,"13":1,"14":0,"15":0,"16":0,"18":0,"19":0,"22":1,"23":1,"24":0,"25":0,"27":0,"30":1,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"55":0,"56":0,"59":0,"64":0,"65":0,"66":0,"67":0,"68":0,"71":0,"72":0,"73":0,"75":0,"76":0,"77":0,"78":0,"80":0,"81":0,"82":0,"83":0,"86":0,"87":0,"91":0,"94":1,"95":0,"96":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"107":0,"108":0,"109":0,"111":0,"112":0,"113":0,"115":0,"116":0,"117":0,"119":0,"120":0,"123":0,"124":0,"127":0,"128":0,"129":0,"130":0,"131":0,"134":0,"137":0,"138":0,"139":0,"140":0,"143":0,"147":0,"148":0,"152":0,"153":0,"154":0,"155":0,"156":0,"159":0,"162":0,"163":0,"166":0,"171":0,"172":0,"173":0,"174":0,"177":0,"178":0,"183":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"194":0,"196":1,"197":0,"198":0,"199":0,"200":0,"202":1,"203":0,"204":0,"206":0,"208":1,"209":0,"210":0,"211":0,"214":0,"217":1,"218":0,"219":0,"220":0,"221":0,"226":0,"227":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"240":1,"241":0,"242":0,"245":1,"246":0,"247":0,"249":0,"250":0,"253":1,"254":0,"256":1,"257":1,"258":0,"259":0,"260":0,"262":0,"263":0,"264":0,"268":0,"271":0,"272":0,"273":0,"276":0,"277":0,"281":1,"282":0,"284":1,"286":1,"287":1,"288":1,"289":1,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"298":1,"300":1,"301":1,"302":1,"303":1,"304":1,"306":1,"308":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/Registry.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/Registry.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":2,"12":2,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":1,"34":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,1]},"f":{"1":1,"2":1,"3":1,"4":2,"5":0,"6":1,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":37},"end":{"line":8,"column":65}}},"3":{"name":"(anonymous_3)","line":10,"loc":{"start":{"line":10,"column":20},"end":{"line":10,"column":32}}},"4":{"name":"Registry","line":11,"loc":{"start":{"line":11,"column":8},"end":{"line":11,"column":40}}},"5":{"name":"(anonymous_5)","line":15,"loc":{"start":{"line":15,"column":35},"end":{"line":15,"column":47}}},"6":{"name":"(anonymous_6)","line":32,"loc":{"start":{"line":32,"column":38},"end":{"line":32,"column":68}}},"7":{"name":"(anonymous_7)","line":40,"loc":{"start":{"line":40,"column":24},"end":{"line":40,"column":36}}},"8":{"name":"(anonymous_8)","line":41,"loc":{"start":{"line":41,"column":34},"end":{"line":41,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":50,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":33}},"9":{"start":{"line":10,"column":4},"end":{"line":48,"column":9}},"10":{"start":{"line":11,"column":8},"end":{"line":14,"column":9}},"11":{"start":{"line":12,"column":12},"end":{"line":12,"column":31}},"12":{"start":{"line":13,"column":12},"end":{"line":13,"column":46}},"13":{"start":{"line":15,"column":8},"end":{"line":31,"column":10}},"14":{"start":{"line":16,"column":12},"end":{"line":16,"column":26}},"15":{"start":{"line":17,"column":12},"end":{"line":19,"column":13}},"16":{"start":{"line":18,"column":16},"end":{"line":18,"column":45}},"17":{"start":{"line":20,"column":12},"end":{"line":20,"column":49}},"18":{"start":{"line":21,"column":12},"end":{"line":21,"column":22}},"19":{"start":{"line":22,"column":12},"end":{"line":26,"column":13}},"20":{"start":{"line":23,"column":16},"end":{"line":25,"column":17}},"21":{"start":{"line":24,"column":20},"end":{"line":24,"column":39}},"22":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"23":{"start":{"line":28,"column":16},"end":{"line":28,"column":42}},"24":{"start":{"line":30,"column":12},"end":{"line":30,"column":46}},"25":{"start":{"line":32,"column":8},"end":{"line":46,"column":10}},"26":{"start":{"line":33,"column":12},"end":{"line":33,"column":40}},"27":{"start":{"line":34,"column":12},"end":{"line":37,"column":14}},"28":{"start":{"line":38,"column":12},"end":{"line":38,"column":55}},"29":{"start":{"line":39,"column":12},"end":{"line":45,"column":14}},"30":{"start":{"line":41,"column":20},"end":{"line":41,"column":50}},"31":{"start":{"line":42,"column":20},"end":{"line":42,"column":55}},"32":{"start":{"line":43,"column":20},"end":{"line":43,"column":58}},"33":{"start":{"line":47,"column":8},"end":{"line":47,"column":24}},"34":{"start":{"line":49,"column":4},"end":{"line":49,"column":20}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":16},"end":{"line":23,"column":16}},{"start":{"line":23,"column":16},"end":{"line":23,"column":16}}]},"7":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":12}},{"start":{"line":27,"column":12},"end":{"line":27,"column":12}}]},"8":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":28},"end":{"line":38,"column":37}},{"start":{"line":38,"column":40},"end":{"line":38,"column":46}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './lang'], function (require, exports) {","    var lang = require('./lang');","    var Registry = (function () {","        function Registry(defaultValue) {","            this._entries = [];","            this._defaultValue = defaultValue;","        }","        Registry.prototype.match = function () {","            var args = [];","            for (var _i = 0; _i < arguments.length; _i++) {","                args[_i - 0] = arguments[_i];","            }","            var entries = this._entries.slice(0);","            var entry;","            for (var i = 0; (entry = entries[i]); ++i) {","                if (entry.test.apply(null, args)) {","                    return entry.value;","                }","            }","            if (this._defaultValue !== undefined) {","                return this._defaultValue;","            }","            throw new Error('No match found');","        };","        Registry.prototype.register = function (test, value, first) {","            var entries = this._entries;","            var entry = {","                test: test,","                value: value","            };","            entries[first ? 'unshift' : 'push'](entry);","            return {","                remove: function () {","                    this.remove = function () { };","                    lang.pullFromArray(entries, entry);","                    test = value = entries = entry = null;","                }","            };","        };","        return Registry;","    })();","    return Registry;","});","//# sourceMappingURL=_debug/Registry.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":2,"13":2,"15":1,"16":0,"17":0,"18":0,"20":0,"21":0,"22":0,"23":0,"24":0,"27":0,"28":0,"30":0,"32":1,"33":1,"34":1,"38":1,"39":1,"41":0,"42":0,"43":0,"47":1,"49":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/request.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/request.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":1,"30":0,"31":1,"32":0,"33":0,"34":1,"35":4,"36":0,"37":0,"38":0,"39":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":4,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":124},"end":{"line":8,"column":152}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":42}}},"4":{"name":"(anonymous_4)","line":22,"loc":{"start":{"line":22,"column":92},"end":{"line":22,"column":112}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":94},"end":{"line":24,"column":120}}},"6":{"name":"(anonymous_6)","line":29,"loc":{"start":{"line":29,"column":36},"end":{"line":29,"column":56}}},"7":{"name":"(anonymous_7)","line":35,"loc":{"start":{"line":35,"column":42},"end":{"line":35,"column":62}}},"8":{"name":"(anonymous_8)","line":38,"loc":{"start":{"line":38,"column":36},"end":{"line":38,"column":70}}},"9":{"name":"(anonymous_9)","line":40,"loc":{"start":{"line":40,"column":7},"end":{"line":40,"column":41}}},"10":{"name":"(anonymous_10)","line":43,"loc":{"start":{"line":43,"column":45},"end":{"line":43,"column":63}}},"11":{"name":"(anonymous_11)","line":44,"loc":{"start":{"line":44,"column":26},"end":{"line":44,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":51,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":31}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":39}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":41}},"11":{"start":{"line":12,"column":4},"end":{"line":12,"column":24}},"12":{"start":{"line":13,"column":4},"end":{"line":18,"column":5}},"13":{"start":{"line":14,"column":8},"end":{"line":14,"column":52}},"14":{"start":{"line":16,"column":9},"end":{"line":18,"column":5}},"15":{"start":{"line":17,"column":8},"end":{"line":17,"column":51}},"16":{"start":{"line":19,"column":4},"end":{"line":33,"column":6}},"17":{"start":{"line":20,"column":8},"end":{"line":20,"column":49}},"18":{"start":{"line":20,"column":34},"end":{"line":20,"column":47}},"19":{"start":{"line":21,"column":8},"end":{"line":21,"column":60}},"20":{"start":{"line":22,"column":8},"end":{"line":28,"column":11}},"21":{"start":{"line":23,"column":12},"end":{"line":23,"column":35}},"22":{"start":{"line":24,"column":12},"end":{"line":27,"column":15}},"23":{"start":{"line":25,"column":16},"end":{"line":25,"column":52}},"24":{"start":{"line":26,"column":16},"end":{"line":26,"column":32}},"25":{"start":{"line":29,"column":8},"end":{"line":31,"column":11}},"26":{"start":{"line":30,"column":12},"end":{"line":30,"column":33}},"27":{"start":{"line":32,"column":8},"end":{"line":32,"column":23}},"28":{"start":{"line":34,"column":4},"end":{"line":34,"column":61}},"29":{"start":{"line":35,"column":4},"end":{"line":37,"column":7}},"30":{"start":{"line":36,"column":8},"end":{"line":36,"column":24}},"31":{"start":{"line":38,"column":4},"end":{"line":42,"column":7}},"32":{"start":{"line":39,"column":8},"end":{"line":39,"column":84}},"33":{"start":{"line":41,"column":8},"end":{"line":41,"column":41}},"34":{"start":{"line":43,"column":4},"end":{"line":49,"column":7}},"35":{"start":{"line":44,"column":8},"end":{"line":48,"column":10}},"36":{"start":{"line":45,"column":12},"end":{"line":45,"column":45}},"37":{"start":{"line":46,"column":12},"end":{"line":46,"column":50}},"38":{"start":{"line":47,"column":12},"end":{"line":47,"column":41}},"39":{"start":{"line":50,"column":4},"end":{"line":50,"column":19}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"7":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":9},"end":{"line":16,"column":9}},{"start":{"line":16,"column":9},"end":{"line":16,"column":9}}]},"8":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":8}},{"start":{"line":20,"column":8},"end":{"line":20,"column":8}}]},"9":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":15},"end":{"line":39,"column":48}},{"start":{"line":39,"column":52},"end":{"line":39,"column":83}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", \"./has!host-browser?./request/xhr:host-node?./request/node\", './has', './Promise', './Registry'], function (require, exports) {","    var has = require('./has');","    var Promise = require('./Promise');","    var Registry = require('./Registry');","    var defaultProvider;","    if (has('host-node')) {","        defaultProvider = require('./request/node');","    }","    else if (has('host-browser')) {","        defaultProvider = require('./request/xhr');","    }","    var request = function (url, options) {","        if (options === void 0) { options = {}; }","        var args = Array.prototype.slice.call(arguments, 0);","        var promise = request.providerRegistry.match(arguments).apply(null, arguments).then(function (response) {","            args.unshift(response);","            return Promise.resolve(request.filterRegistry.match(args).apply(null, args)).then(function (filterResponse) {","                response.data = filterResponse.data;","                return response;","            });","        });","        promise.data = promise.then(function (response) {","            return response.data;","        });","        return promise;","    };","    request.providerRegistry = new Registry(defaultProvider);","    request.filterRegistry = new Registry(function (response) {","        return response;","    });","    request.filterRegistry.register(function (response, url, options) {","        return typeof response.data === 'string' && options.responseType === 'json';","    }, function (response, url, options) {","        return JSON.parse(response.data);","    });","    ['delete', 'get', 'post', 'put'].forEach(function (method) {","        request[method] = function (url, options) {","            options = Object.create(options);","            options.method = method.toUpperCase();","            return request(url, options);","        };","    });","    return request;","});","//# sourceMappingURL=_debug/request.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"16":0,"17":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"29":0,"30":0,"32":0,"34":1,"35":1,"36":0,"38":1,"39":0,"41":0,"43":1,"44":4,"45":0,"46":0,"47":0,"50":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/request/node.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/request/node.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1},"b":{"1":[1,0],"2":[1,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0,0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":78},"end":{"line":8,"column":106}}},"3":{"name":"node","line":14,"loc":{"start":{"line":14,"column":4},"end":{"line":14,"column":32}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":44},"end":{"line":16,"column":62}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":13},"end":{"line":50,"column":25}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":23},"end":{"line":62,"column":39}}},"7":{"name":"(anonymous_7)","line":81,"loc":{"start":{"line":81,"column":33},"end":{"line":81,"column":59}}},"8":{"name":"(anonymous_8)","line":109,"loc":{"start":{"line":109,"column":51},"end":{"line":109,"column":68}}},"9":{"name":"(anonymous_9)","line":115,"loc":{"start":{"line":115,"column":51},"end":{"line":115,"column":63}}},"10":{"name":"(anonymous_10)","line":119,"loc":{"start":{"line":119,"column":38},"end":{"line":119,"column":55}}},"11":{"name":"(anonymous_11)","line":124,"loc":{"start":{"line":124,"column":39},"end":{"line":124,"column":51}}},"12":{"name":"(anonymous_12)","line":148,"loc":{"start":{"line":148,"column":27},"end":{"line":148,"column":39}}},"13":{"name":"(anonymous_13)","line":149,"loc":{"start":{"line":149,"column":39},"end":{"line":149,"column":51}}},"14":{"name":"(anonymous_14)","line":155,"loc":{"start":{"line":155,"column":28},"end":{"line":155,"column":40}}},"15":{"name":"(anonymous_15)","line":156,"loc":{"start":{"line":156,"column":38},"end":{"line":156,"column":50}}},"16":{"name":"(anonymous_16)","line":162,"loc":{"start":{"line":162,"column":29},"end":{"line":162,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":173,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":31}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":38}},"11":{"start":{"line":12,"column":4},"end":{"line":12,"column":40}},"12":{"start":{"line":13,"column":4},"end":{"line":13,"column":33}},"13":{"start":{"line":14,"column":4},"end":{"line":171,"column":5}},"14":{"start":{"line":15,"column":8},"end":{"line":15,"column":49}},"15":{"start":{"line":15,"column":34},"end":{"line":15,"column":47}},"16":{"start":{"line":16,"column":8},"end":{"line":19,"column":11}},"17":{"start":{"line":17,"column":12},"end":{"line":17,"column":39}},"18":{"start":{"line":18,"column":12},"end":{"line":18,"column":25}},"19":{"start":{"line":20,"column":8},"end":{"line":20,"column":39}},"20":{"start":{"line":21,"column":8},"end":{"line":21,"column":60}},"21":{"start":{"line":22,"column":8},"end":{"line":41,"column":10}},"22":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"23":{"start":{"line":43,"column":12},"end":{"line":43,"column":126}},"24":{"start":{"line":45,"column":8},"end":{"line":55,"column":9}},"25":{"start":{"line":46,"column":12},"end":{"line":46,"column":38}},"26":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"27":{"start":{"line":48,"column":16},"end":{"line":48,"column":121}},"28":{"start":{"line":50,"column":12},"end":{"line":54,"column":17}},"29":{"start":{"line":51,"column":16},"end":{"line":51,"column":51}},"30":{"start":{"line":52,"column":16},"end":{"line":52,"column":64}},"31":{"start":{"line":53,"column":16},"end":{"line":53,"column":69}},"32":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"33":{"start":{"line":57,"column":12},"end":{"line":57,"column":124}},"34":{"start":{"line":59,"column":8},"end":{"line":59,"column":95}},"35":{"start":{"line":60,"column":8},"end":{"line":68,"column":10}},"36":{"start":{"line":63,"column":16},"end":{"line":63,"column":104}},"37":{"start":{"line":69,"column":8},"end":{"line":80,"column":9}},"38":{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},"39":{"start":{"line":71,"column":16},"end":{"line":71,"column":66}},"40":{"start":{"line":73,"column":12},"end":{"line":75,"column":13}},"41":{"start":{"line":74,"column":16},"end":{"line":74,"column":66}},"42":{"start":{"line":76,"column":12},"end":{"line":79,"column":13}},"43":{"start":{"line":77,"column":16},"end":{"line":77,"column":67}},"44":{"start":{"line":78,"column":16},"end":{"line":78,"column":81}},"45":{"start":{"line":81,"column":8},"end":{"line":134,"column":11}},"46":{"start":{"line":82,"column":12},"end":{"line":82,"column":21}},"47":{"start":{"line":83,"column":12},"end":{"line":83,"column":27}},"48":{"start":{"line":84,"column":12},"end":{"line":84,"column":66}},"49":{"start":{"line":85,"column":12},"end":{"line":85,"column":53}},"50":{"start":{"line":86,"column":12},"end":{"line":86,"column":60}},"51":{"start":{"line":87,"column":12},"end":{"line":102,"column":13}},"52":{"start":{"line":90,"column":16},"end":{"line":94,"column":17}},"53":{"start":{"line":92,"column":20},"end":{"line":92,"column":88}},"54":{"start":{"line":93,"column":20},"end":{"line":93,"column":27}},"55":{"start":{"line":95,"column":16},"end":{"line":99,"column":19}},"56":{"start":{"line":100,"column":16},"end":{"line":100,"column":81}},"57":{"start":{"line":101,"column":16},"end":{"line":101,"column":23}},"58":{"start":{"line":103,"column":12},"end":{"line":105,"column":13}},"59":{"start":{"line":104,"column":16},"end":{"line":104,"column":26}},"60":{"start":{"line":106,"column":12},"end":{"line":106,"column":89}},"61":{"start":{"line":107,"column":12},"end":{"line":118,"column":13}},"62":{"start":{"line":108,"column":16},"end":{"line":108,"column":58}},"63":{"start":{"line":109,"column":16},"end":{"line":114,"column":19}},"64":{"start":{"line":110,"column":20},"end":{"line":110,"column":64}},"65":{"start":{"line":111,"column":20},"end":{"line":111,"column":36}},"66":{"start":{"line":112,"column":20},"end":{"line":112,"column":46}},"67":{"start":{"line":113,"column":20},"end":{"line":113,"column":43}},"68":{"start":{"line":115,"column":16},"end":{"line":117,"column":19}},"69":{"start":{"line":116,"column":20},"end":{"line":116,"column":47}},"70":{"start":{"line":119,"column":12},"end":{"line":123,"column":15}},"71":{"start":{"line":120,"column":16},"end":{"line":120,"column":55}},"72":{"start":{"line":121,"column":16},"end":{"line":121,"column":118}},"73":{"start":{"line":122,"column":16},"end":{"line":122,"column":96}},"74":{"start":{"line":124,"column":12},"end":{"line":132,"column":15}},"75":{"start":{"line":125,"column":16},"end":{"line":125,"column":44}},"76":{"start":{"line":126,"column":16},"end":{"line":128,"column":17}},"77":{"start":{"line":127,"column":20},"end":{"line":127,"column":105}},"78":{"start":{"line":129,"column":16},"end":{"line":131,"column":17}},"79":{"start":{"line":130,"column":20},"end":{"line":130,"column":47}},"80":{"start":{"line":133,"column":12},"end":{"line":133,"column":84}},"81":{"start":{"line":135,"column":8},"end":{"line":135,"column":47}},"82":{"start":{"line":136,"column":8},"end":{"line":146,"column":9}},"83":{"start":{"line":137,"column":12},"end":{"line":142,"column":13}},"84":{"start":{"line":138,"column":16},"end":{"line":138,"column":43}},"85":{"start":{"line":141,"column":16},"end":{"line":141,"column":64}},"86":{"start":{"line":145,"column":12},"end":{"line":145,"column":26}},"87":{"start":{"line":147,"column":8},"end":{"line":161,"column":9}},"88":{"start":{"line":148,"column":12},"end":{"line":160,"column":17}},"89":{"start":{"line":149,"column":16},"end":{"line":153,"column":36}},"90":{"start":{"line":150,"column":20},"end":{"line":150,"column":95}},"91":{"start":{"line":151,"column":20},"end":{"line":151,"column":55}},"92":{"start":{"line":152,"column":20},"end":{"line":152,"column":42}},"93":{"start":{"line":154,"column":16},"end":{"line":159,"column":18}},"94":{"start":{"line":156,"column":24},"end":{"line":156,"column":54}},"95":{"start":{"line":157,"column":24},"end":{"line":157,"column":44}},"96":{"start":{"line":162,"column":8},"end":{"line":170,"column":11}},"97":{"start":{"line":163,"column":12},"end":{"line":163,"column":47}},"98":{"start":{"line":164,"column":12},"end":{"line":166,"column":13}},"99":{"start":{"line":165,"column":16},"end":{"line":165,"column":46}},"100":{"start":{"line":167,"column":12},"end":{"line":167,"column":57}},"101":{"start":{"line":168,"column":12},"end":{"line":168,"column":100}},"102":{"start":{"line":169,"column":12},"end":{"line":169,"column":24}},"103":{"start":{"line":172,"column":4},"end":{"line":172,"column":16}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":8}},{"start":{"line":15,"column":8},"end":{"line":15,"column":8}}]},"7":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":12},"end":{"line":17,"column":19}},{"start":{"line":17,"column":23},"end":{"line":17,"column":38}}]},"8":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":38},"end":{"line":21,"column":51}},{"start":{"line":21,"column":55},"end":{"line":21,"column":58}}]},"9":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":18},"end":{"line":24,"column":32}},{"start":{"line":24,"column":36},"end":{"line":24,"column":48}}]},"10":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":21},"end":{"line":28,"column":36}},{"start":{"line":28,"column":40},"end":{"line":28,"column":42}}]},"11":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":37},"end":{"line":33,"column":65}},{"start":{"line":33,"column":68},"end":{"line":33,"column":73}}]},"12":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"13":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"14":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":12}},{"start":{"line":47,"column":12},"end":{"line":47,"column":12}}]},"15":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":38},"end":{"line":53,"column":52}},{"start":{"line":53,"column":56},"end":{"line":53,"column":68}}]},"16":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":8}},{"start":{"line":56,"column":8},"end":{"line":56,"column":8}}]},"17":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":25}},{"start":{"line":56,"column":30},"end":{"line":56,"column":42}},{"start":{"line":56,"column":46},"end":{"line":56,"column":62}}]},"18":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":53},"end":{"line":57,"column":65}},{"start":{"line":57,"column":69},"end":{"line":57,"column":71}}]},"19":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":100},"end":{"line":57,"column":116}},{"start":{"line":57,"column":120},"end":{"line":57,"column":122}}]},"20":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":57},"end":{"line":59,"column":62}},{"start":{"line":59,"column":65},"end":{"line":59,"column":69}}]},"21":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":24},"end":{"line":63,"column":43}},{"start":{"line":63,"column":47},"end":{"line":63,"column":94}},{"start":{"line":63,"column":99},"end":{"line":63,"column":103}}]},"22":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"23":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12}},{"start":{"line":70,"column":12},"end":{"line":70,"column":12}}]},"24":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":12},"end":{"line":73,"column":12}},{"start":{"line":73,"column":12},"end":{"line":73,"column":12}}]},"25":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":12}},{"start":{"line":76,"column":12},"end":{"line":76,"column":12}}]},"26":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":62},"end":{"line":78,"column":74}},{"start":{"line":78,"column":78},"end":{"line":78,"column":79}}]},"27":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":12}},{"start":{"line":87,"column":12},"end":{"line":87,"column":12}}]},"28":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":16},"end":{"line":87,"column":42}},{"start":{"line":87,"column":46},"end":{"line":87,"column":71}},{"start":{"line":87,"column":75},"end":{"line":87,"column":102}},{"start":{"line":88,"column":16},"end":{"line":88,"column":49}},{"start":{"line":89,"column":16},"end":{"line":89,"column":47}}]},"29":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":16},"end":{"line":90,"column":16}},{"start":{"line":90,"column":16},"end":{"line":90,"column":16}}]},"30":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":20},"end":{"line":90,"column":59}},{"start":{"line":91,"column":21},"end":{"line":91,"column":48}},{"start":{"line":91,"column":52},"end":{"line":91,"column":83}}]},"31":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":103,"column":12}},{"start":{"line":103,"column":12},"end":{"line":103,"column":12}}]},"32":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":34}},{"start":{"line":106,"column":38},"end":{"line":106,"column":88}}]},"33":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"34":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":16},"end":{"line":120,"column":34}},{"start":{"line":120,"column":38},"end":{"line":120,"column":54}}]},"35":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":54},"end":{"line":121,"column":102}},{"start":{"line":121,"column":105},"end":{"line":121,"column":117}}]},"36":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":16},"end":{"line":125,"column":23}},{"start":{"line":125,"column":27},"end":{"line":125,"column":43}}]},"37":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":16},"end":{"line":126,"column":16}},{"start":{"line":126,"column":16},"end":{"line":126,"column":16}}]},"38":{"line":127,"type":"cond-expr","locations":[{"start":{"line":127,"column":61},"end":{"line":127,"column":74}},{"start":{"line":127,"column":77},"end":{"line":127,"column":104}}]},"39":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16}},{"start":{"line":129,"column":16},"end":{"line":129,"column":16}}]},"40":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"41":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":12},"end":{"line":137,"column":12}},{"start":{"line":137,"column":12},"end":{"line":137,"column":12}}]},"42":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":8}},{"start":{"line":147,"column":8},"end":{"line":147,"column":8}}]},"43":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":12},"end":{"line":147,"column":31}},{"start":{"line":147,"column":35},"end":{"line":147,"column":63}}]},"44":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":12},"end":{"line":164,"column":12}},{"start":{"line":164,"column":12},"end":{"line":164,"column":12}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", 'http', 'https', '../kernel', '../Promise', 'url'], function (require, exports) {","    var http = require('http');","    var https = require('https');","    var kernel = require('../kernel');","    var Promise = require('../Promise');","    var urlUtil = require('url');","    function node(url, options) {","        if (options === void 0) { options = {}; }","        var deferred = new Promise.Deferred(function (reason) {","            request && request.abort();","            throw reason;","        });","        var promise = deferred.promise;","        var parsedUrl = urlUtil.parse(options.proxy || url);","        var requestOptions = {","            agent: options.agent,","            auth: parsedUrl.auth || options.auth,","            ca: options.ca,","            cert: options.cert,","            ciphers: options.ciphers,","            headers: options.headers || {},","            host: parsedUrl.host,","            hostname: parsedUrl.hostname,","            key: options.key,","            localAddress: options.localAddress,","            method: options.method ? options.method.toUpperCase() : 'GET',","            passphrase: options.passphrase,","            path: parsedUrl.path,","            pfx: options.pfx,","            port: +parsedUrl.port,","            rejectUnauthorized: options.rejectUnauthorized,","            secureProtocol: options.secureProtocol,","            socketPath: options.socketPath","        };","        if (!('user-agent' in requestOptions.headers)) {","            requestOptions.headers['user-agent'] = 'dojo/' + kernel.version + ' Node.js/' + process.version.replace(/^v/, '');","        }","        if (options.proxy) {","            requestOptions.path = url;","            if (parsedUrl.auth) {","                requestOptions.headers['proxy-authorization'] = 'Basic ' + new Buffer(parsedUrl.auth).toString('base64');","            }","            (function () {","                var parsedUrl = urlUtil.parse(url);","                requestOptions.headers['host'] = parsedUrl.host;","                requestOptions.auth = parsedUrl.auth || options.auth;","            })();","        }","        if (!options.auth && (options.user || options.password)) {","            requestOptions.auth = encodeURIComponent(options.user || '') + ':' + encodeURIComponent(options.password || '');","        }","        var request = (parsedUrl.protocol === 'https:' ? https : http).request(requestOptions);","        var response = {","            data: null,","            getHeader: function (name) {","                return (this.nativeResponse && this.nativeResponse.headers[name.toLowerCase()]) || null;","            },","            requestOptions: options,","            statusCode: null,","            url: url","        };","        if (options.socketOptions) {","            if ('timeout' in options.socketOptions) {","                request.setTimeout(options.socketOptions.timeout);","            }","            if ('noDelay' in options.socketOptions) {","                request.setNoDelay(options.socketOptions.noDelay);","            }","            if ('keepAlive' in options.socketOptions) {","                var initialDelay = options.socketOptions.keepAlive;","                request.setSocketKeepAlive(initialDelay >= 0, initialDelay || 0);","            }","        }","        request.once('response', function (nativeResponse) {","            var data;","            var loaded = 0;","            var total = +nativeResponse.headers['content-length'];","            response.nativeResponse = nativeResponse;","            response.statusCode = nativeResponse.statusCode;","            if (response.statusCode >= 300 && response.statusCode < 400 && response.statusCode !== 304 &&","                options.followRedirects !== false &&","                nativeResponse.headers.location) {","                if (nativeResponse.headers.location === url &&","                    (response.statusCode !== 303 || requestOptions.method === 'GET')) {","                    deferred.reject(new Error('Redirect loop detected for URL ' + url));","                    return;","                }","                deferred.progress({","                    type: 'redirect',","                    location: nativeResponse.headers.location,","                    response: nativeResponse","                });","                deferred.resolve(node(nativeResponse.headers.location, options));","                return;","            }","            if (!options.streamData) {","                data = [];","            }","            options.streamEncoding && nativeResponse.setEncoding(options.streamEncoding);","            if (options.streamTarget) {","                nativeResponse.pipe(options.streamTarget);","                options.streamTarget.once('error', function (error) {","                    nativeResponse.unpipe(options.streamTarget);","                    request.abort();","                    error.response = response;","                    deferred.reject(error);","                });","                options.streamTarget.once('close', function () {","                    deferred.resolve(response);","                });","            }","            nativeResponse.on('data', function (chunk) {","                options.streamData || data.push(chunk);","                loaded += typeof chunk === 'string' ? Buffer.byteLength(chunk, options.streamEncoding) : chunk.length;","                deferred.progress({ type: 'data', chunk: chunk, loaded: loaded, total: total });","            });","            nativeResponse.once('end', function () {","                timeout && timeout.remove();","                if (!options.streamData) {","                    response.data = options.streamEncoding ? data.join('') : Buffer.concat(data, loaded);","                }","                if (!options.streamTarget) {","                    deferred.resolve(response);","                }","            });","            deferred.progress({ type: 'nativeResponse', response: nativeResponse });","        });","        request.once('error', deferred.reject);","        if (options.data) {","            if (options.data.pipe) {","                options.data.pipe(request);","            }","            else {","                request.end(options.data, options.dataEncoding);","            }","        }","        else {","            request.end();","        }","        if (options.timeout > 0 && options.timeout !== Infinity) {","            var timeout = (function () {","                var timer = setTimeout(function () {","                    var error = new Error('Request timed out after ' + options.timeout + 'ms');","                    error.name = 'RequestTimeoutError';","                    promise.cancel(error);","                }, options.timeout);","                return {","                    remove: function () {","                        this.remove = function () { };","                        clearTimeout(timer);","                    }","                };","            })();","        }","        return promise.catch(function (error) {","            var parsedUrl = urlUtil.parse(url);","            if (parsedUrl.auth) {","                parsedUrl.auth = '(redacted)';","            }","            var sanitizedUrl = urlUtil.format(parsedUrl);","            error.message = '[' + requestOptions.method + ' ' + sanitizedUrl + '] ' + error.message;","            throw error;","        });","    }","    return node;","});","//# sourceMappingURL=../_debug/request/node.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"20":0,"21":0,"22":0,"42":0,"43":0,"45":0,"46":0,"47":0,"48":0,"50":0,"51":0,"52":0,"53":0,"56":0,"57":0,"59":0,"60":0,"63":0,"69":0,"70":0,"71":0,"73":0,"74":0,"76":0,"77":0,"78":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"90":0,"92":0,"93":0,"95":0,"100":0,"101":0,"103":0,"104":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"115":0,"116":0,"119":0,"120":0,"121":0,"122":0,"124":0,"125":0,"126":0,"127":0,"129":0,"130":0,"133":0,"135":0,"136":0,"137":0,"138":0,"141":0,"145":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"154":0,"156":0,"157":0,"162":0,"163":0,"164":0,"165":0,"167":0,"168":0,"169":0,"172":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/text.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/text.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":1},"b":{"1":[1,0],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,1],"7":[1,0],"8":[0,1],"9":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":36},"end":{"line":8,"column":64}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":18},"end":{"line":12,"column":43}}},"4":{"name":"(anonymous_4)","line":14,"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":37}}},"5":{"name":"(anonymous_5)","line":23,"loc":{"start":{"line":23,"column":18},"end":{"line":23,"column":43}}},"6":{"name":"(anonymous_6)","line":24,"loc":{"start":{"line":24,"column":51},"end":{"line":24,"column":74}}},"7":{"name":"(anonymous_7)","line":33,"loc":{"start":{"line":33,"column":18},"end":{"line":33,"column":30}}},"8":{"name":"load","line":37,"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":41,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":31}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":16}},"10":{"start":{"line":11,"column":4},"end":{"line":36,"column":5}},"11":{"start":{"line":12,"column":8},"end":{"line":19,"column":10}},"12":{"start":{"line":13,"column":12},"end":{"line":13,"column":43}},"13":{"start":{"line":14,"column":12},"end":{"line":16,"column":14}},"14":{"start":{"line":15,"column":16},"end":{"line":15,"column":43}},"15":{"start":{"line":17,"column":12},"end":{"line":17,"column":39}},"16":{"start":{"line":18,"column":12},"end":{"line":18,"column":27}},"17":{"start":{"line":21,"column":9},"end":{"line":36,"column":5}},"18":{"start":{"line":22,"column":8},"end":{"line":22,"column":81}},"19":{"start":{"line":23,"column":8},"end":{"line":30,"column":10}},"20":{"start":{"line":24,"column":12},"end":{"line":29,"column":15}},"21":{"start":{"line":25,"column":16},"end":{"line":27,"column":17}},"22":{"start":{"line":26,"column":20},"end":{"line":26,"column":32}},"23":{"start":{"line":28,"column":16},"end":{"line":28,"column":31}},"24":{"start":{"line":33,"column":8},"end":{"line":35,"column":10}},"25":{"start":{"line":34,"column":12},"end":{"line":34,"column":72}},"26":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"27":{"start":{"line":38,"column":8},"end":{"line":38,"column":49}},"28":{"start":{"line":40,"column":4},"end":{"line":40,"column":24}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]},"6":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]},"7":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":9},"end":{"line":21,"column":9}},{"start":{"line":21,"column":9},"end":{"line":21,"column":9}}]},"8":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":39},"end":{"line":22,"column":64}},{"start":{"line":22,"column":67},"end":{"line":22,"column":80}}]},"9":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":16}},{"start":{"line":25,"column":16},"end":{"line":25,"column":16}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './has'], function (require, exports) {","    var has = require('./has');","    var getText;","    if (has('host-browser')) {","        getText = function (url, callback) {","            var xhr = new XMLHttpRequest();","            xhr.onload = function () {","                callback(xhr.responseText);","            };","            xhr.open('GET', url, true);","            xhr.send(null);","        };","    }","    else if (has('host-node')) {","        var fs = require.nodeRequire ? require.nodeRequire('fs') : require('fs');","        getText = function (url, callback) {","            fs.readFile(url, { encoding: 'utf8' }, function (error, data) {","                if (error) {","                    throw error;","                }","                callback(data);","            });","        };","    }","    else {","        getText = function () {","            throw new Error('dojo/text not supported on this platform');","        };","    }","    function load(resourceId, require, load) {","        getText(require.toUrl(resourceId), load);","    }","    exports.load = load;","});","//# sourceMappingURL=_debug/text.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"17":0,"18":0,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"28":0,"33":0,"34":0,"37":1,"38":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/topic.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/dojo/topic.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[1,0],"2":[1,1],"3":[0,1],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":26}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":40},"end":{"line":8,"column":68}}},"3":{"name":"subscribe","line":11,"loc":{"start":{"line":11,"column":4},"end":{"line":11,"column":40}}},"4":{"name":"publish","line":15,"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":3}},"2":{"start":{"line":2,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":42}},"4":{"start":{"line":3,"column":43},"end":{"line":3,"column":83}},"5":{"start":{"line":3,"column":64},"end":{"line":3,"column":83}},"6":{"start":{"line":5,"column":9},"end":{"line":7,"column":5}},"7":{"start":{"line":6,"column":8},"end":{"line":6,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":39}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":28}},"10":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"11":{"start":{"line":12,"column":8},"end":{"line":12,"column":44}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":34}},"13":{"start":{"line":15,"column":4},"end":{"line":21,"column":5}},"14":{"start":{"line":16,"column":8},"end":{"line":16,"column":22}},"15":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"16":{"start":{"line":18,"column":12},"end":{"line":18,"column":41}},"17":{"start":{"line":20,"column":8},"end":{"line":20,"column":39}},"18":{"start":{"line":22,"column":4},"end":{"line":22,"column":30}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":8},"end":{"line":2,"column":34}},{"start":{"line":2,"column":38},"end":{"line":2,"column":72}}]},"3":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":43},"end":{"line":3,"column":43}},{"start":{"line":3,"column":43},"end":{"line":3,"column":43}}]},"4":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":9}},{"start":{"line":5,"column":9},"end":{"line":5,"column":9}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":13},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":55}}]}},"code":["(function (deps, factory) {","    if (typeof module === 'object' && typeof module.exports === 'object') {","        var v = factory(require, exports); if (v !== undefined) module.exports = v;","    }","    else if (typeof define === 'function' && define.amd) {","        define(deps, factory);","    }","})([\"require\", \"exports\", './Evented'], function (require, exports) {","    var Evented = require('./Evented');","    var hub = new Evented();","    function subscribe(topic, listener) {","        return hub.on.apply(hub, arguments);","    }","    exports.subscribe = subscribe;","    function publish(topic) {","        var args = [];","        for (var _i = 1; _i < arguments.length; _i++) {","            args[_i - 1] = arguments[_i];","        }","        hub.emit.apply(hub, arguments);","    }","    exports.publish = publish;","});","//# sourceMappingURL=_debug/topic.js.map"],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"9":1,"10":1,"11":1,"12":0,"14":1,"15":1,"16":0,"17":0,"18":0,"20":0,"22":1}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/add.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/add.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":35},"end":{"line":1,"column":65}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":32},"end":{"line":18,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":3}},"2":{"start":{"line":18,"column":2},"end":{"line":20,"column":8}},"3":{"start":{"line":19,"column":4},"end":{"line":19,"column":27}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":13}}},"branchMap":{},"code":["define(['./_createMathOperation'], function(createMathOperation) {","","  /**","   * Adds two numbers.","   *","   * @static","   * @memberOf _","   * @since 3.4.0","   * @category Math","   * @param {number} augend The first number in an addition.","   * @param {number} addend The second number in an addition.","   * @returns {number} Returns the total.","   * @example","   *","   * _.add(6, 4);","   * // => 10","   */","  var add = createMathOperation(function(augend, addend) {","    return augend + addend;","  }, 0);","","  return add;","});",""],"l":{"1":1,"18":0,"19":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_addMapEntry.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_addMapEntry.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"addMapEntry","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":15,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":30}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":15}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":21}}},"branchMap":{},"code":["define([], function() {","","  /**","   * Adds the key-value `pair` to `map`.","   *","   * @private","   * @param {Object} map The map to modify.","   * @param {Array} pair The key-value pair to add.","   * @returns {Object} Returns `map`.","   */","  function addMapEntry(map, pair) {","    // Don't return `map.set` because it's not chainable in IE 11.","    map.set(pair[0], pair[1]);","    return map;","  }","","  return addMapEntry;","});",""],"l":{"1":1,"11":1,"13":0,"14":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_addSetEntry.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_addSetEntry.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"addSetEntry","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":15,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":19}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":15}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":21}}},"branchMap":{},"code":["define([], function() {","","  /**","   * Adds `value` to `set`.","   *","   * @private","   * @param {Object} set The set to modify.","   * @param {*} value The value to add.","   * @returns {Object} Returns `set`.","   */","  function addSetEntry(set, value) {","    // Don't return `set.add` because it's not chainable in IE 11.","    set.add(value);","    return set;","  }","","  return addSetEntry;","});",""],"l":{"1":1,"11":1,"13":0,"14":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/after.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/after.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":24},"end":{"line":1,"column":44}}},"2":{"name":"after","line":30,"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":26}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":11},"end":{"line":35,"column":22}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":43,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":46}},"3":{"start":{"line":30,"column":2},"end":{"line":40,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"5":{"start":{"line":32,"column":6},"end":{"line":32,"column":43}},"6":{"start":{"line":34,"column":4},"end":{"line":34,"column":21}},"7":{"start":{"line":35,"column":4},"end":{"line":39,"column":6}},"8":{"start":{"line":36,"column":6},"end":{"line":38,"column":7}},"9":{"start":{"line":37,"column":8},"end":{"line":37,"column":43}},"10":{"start":{"line":42,"column":2},"end":{"line":42,"column":15}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]}},"code":["define(['./toInteger'], function(toInteger) {","","  /** Error message constants. */","  var FUNC_ERROR_TEXT = 'Expected a function';","","  /**","   * The opposite of `_.before`; this method creates a function that invokes","   * `func` once it's called `n` or more times.","   *","   * @static","   * @memberOf _","   * @since 0.1.0","   * @category Function","   * @param {number} n The number of calls before `func` is invoked.","   * @param {Function} func The function to restrict.","   * @returns {Function} Returns the new restricted function.","   * @example","   *","   * var saves = ['profile', 'settings'];","   *","   * var done = _.after(saves.length, function() {","   *   console.log('done saving!');","   * });","   *","   * _.forEach(saves, function(type) {","   *   asyncSave({ 'type': type, 'complete': done });","   * });","   * // => Logs 'done saving!' after the two async saves have completed.","   */","  function after(n, func) {","    if (typeof func != 'function') {","      throw new TypeError(FUNC_ERROR_TEXT);","    }","    n = toInteger(n);","    return function() {","      if (--n < 1) {","        return func.apply(this, arguments);","      }","    };","  }","","  return after;","});",""],"l":{"1":1,"4":0,"30":1,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_apply.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_apply.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"apply","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":24,"column":3}},"2":{"start":{"line":13,"column":2},"end":{"line":21,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":19,"column":5}},"4":{"start":{"line":15,"column":14},"end":{"line":15,"column":40}},"5":{"start":{"line":16,"column":14},"end":{"line":16,"column":49}},"6":{"start":{"line":17,"column":14},"end":{"line":17,"column":58}},"7":{"start":{"line":18,"column":14},"end":{"line":18,"column":67}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":37}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":15}}},"branchMap":{"1":{"line":14,"type":"switch","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":40}},{"start":{"line":16,"column":6},"end":{"line":16,"column":49}},{"start":{"line":17,"column":6},"end":{"line":17,"column":58}},{"start":{"line":18,"column":6},"end":{"line":18,"column":67}}]}},"code":["define([], function() {","","  /**","   * A faster alternative to `Function#apply`, this function invokes `func`","   * with the `this` binding of `thisArg` and the arguments of `args`.","   *","   * @private","   * @param {Function} func The function to invoke.","   * @param {*} thisArg The `this` binding of `func`.","   * @param {Array} args The arguments to invoke `func` with.","   * @returns {*} Returns the result of `func`.","   */","  function apply(func, thisArg, args) {","    switch (args.length) {","      case 0: return func.call(thisArg);","      case 1: return func.call(thisArg, args[0]);","      case 2: return func.call(thisArg, args[0], args[1]);","      case 3: return func.call(thisArg, args[0], args[1], args[2]);","    }","    return func.apply(thisArg, args);","  }","","  return apply;","});",""],"l":{"1":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"20":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayAggregator.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayAggregator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"arrayAggregator","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":25,"column":3}},"2":{"start":{"line":13,"column":2},"end":{"line":22,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":15,"column":42}},"4":{"start":{"line":17,"column":4},"end":{"line":20,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":18,"column":31}},"6":{"start":{"line":19,"column":6},"end":{"line":19,"column":57}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":23}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":25}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":25},"end":{"line":15,"column":37}},{"start":{"line":15,"column":40},"end":{"line":15,"column":41}}]}},"code":["define([], function() {","","  /**","   * A specialized version of `baseAggregator` for arrays.","   *","   * @private","   * @param {Array} [array] The array to iterate over.","   * @param {Function} setter The function to set `accumulator` values.","   * @param {Function} iteratee The iteratee to transform keys.","   * @param {Object} accumulator The initial aggregated object.","   * @returns {Function} Returns `accumulator`.","   */","  function arrayAggregator(array, setter, iteratee, accumulator) {","    var index = -1,","        length = array ? array.length : 0;","","    while (++index < length) {","      var value = array[index];","      setter(accumulator, value, iteratee(value), array);","    }","    return accumulator;","  }","","  return arrayAggregator;","});",""],"l":{"1":1,"13":1,"14":0,"17":0,"18":0,"19":0,"21":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayEach.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayEach.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"arrayEach","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":25,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":22,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":14,"column":42}},"4":{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},"5":{"start":{"line":17,"column":6},"end":{"line":19,"column":7}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":14}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":17}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":19}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":37}},{"start":{"line":14,"column":40},"end":{"line":14,"column":41}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":6}},{"start":{"line":17,"column":6},"end":{"line":17,"column":6}}]}},"code":["define([], function() {","","  /**","   * A specialized version of `_.forEach` for arrays without support for","   * iteratee shorthands.","   *","   * @private","   * @param {Array} [array] The array to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @returns {Array} Returns `array`.","   */","  function arrayEach(array, iteratee) {","    var index = -1,","        length = array ? array.length : 0;","","    while (++index < length) {","      if (iteratee(array[index], index, array) === false) {","        break;","      }","    }","    return array;","  }","","  return arrayEach;","});",""],"l":{"1":1,"12":1,"13":0,"16":0,"17":0,"18":0,"21":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayEachRight.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayEachRight.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"arrayEachRight","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":24,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":21,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":42}},"4":{"start":{"line":15,"column":4},"end":{"line":19,"column":5}},"5":{"start":{"line":16,"column":6},"end":{"line":18,"column":7}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":14}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":17}},"8":{"start":{"line":23,"column":2},"end":{"line":23,"column":24}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":25},"end":{"line":13,"column":37}},{"start":{"line":13,"column":40},"end":{"line":13,"column":41}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":6}},{"start":{"line":16,"column":6},"end":{"line":16,"column":6}}]}},"code":["define([], function() {","","  /**","   * A specialized version of `_.forEachRight` for arrays without support for","   * iteratee shorthands.","   *","   * @private","   * @param {Array} [array] The array to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @returns {Array} Returns `array`.","   */","  function arrayEachRight(array, iteratee) {","    var length = array ? array.length : 0;","","    while (length--) {","      if (iteratee(array[length], length, array) === false) {","        break;","      }","    }","    return array;","  }","","  return arrayEachRight;","});",""],"l":{"1":1,"12":1,"13":0,"15":0,"16":0,"17":0,"20":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayEvery.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayEvery.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"arrayEvery","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":26,"column":3}},"2":{"start":{"line":13,"column":2},"end":{"line":23,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":15,"column":42}},"4":{"start":{"line":17,"column":4},"end":{"line":21,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":20,"column":7}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":21}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":16}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":20}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":25},"end":{"line":15,"column":37}},{"start":{"line":15,"column":40},"end":{"line":15,"column":41}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]}},"code":["define([], function() {","","  /**","   * A specialized version of `_.every` for arrays without support for","   * iteratee shorthands.","   *","   * @private","   * @param {Array} [array] The array to iterate over.","   * @param {Function} predicate The function invoked per iteration.","   * @returns {boolean} Returns `true` if all elements pass the predicate check,","   *  else `false`.","   */","  function arrayEvery(array, predicate) {","    var index = -1,","        length = array ? array.length : 0;","","    while (++index < length) {","      if (!predicate(array[index], index, array)) {","        return false;","      }","    }","    return true;","  }","","  return arrayEvery;","});",""],"l":{"1":1,"13":1,"14":0,"17":0,"18":0,"19":0,"22":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayFilter.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayFilter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"arrayFilter","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":28,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":25,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":16,"column":20}},"4":{"start":{"line":18,"column":4},"end":{"line":23,"column":5}},"5":{"start":{"line":19,"column":6},"end":{"line":19,"column":31}},"6":{"start":{"line":20,"column":6},"end":{"line":22,"column":7}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":35}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":21}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":37}},{"start":{"line":14,"column":40},"end":{"line":14,"column":41}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]}},"code":["define([], function() {","","  /**","   * A specialized version of `_.filter` for arrays without support for","   * iteratee shorthands.","   *","   * @private","   * @param {Array} [array] The array to iterate over.","   * @param {Function} predicate The function invoked per iteration.","   * @returns {Array} Returns the new filtered array.","   */","  function arrayFilter(array, predicate) {","    var index = -1,","        length = array ? array.length : 0,","        resIndex = 0,","        result = [];","","    while (++index < length) {","      var value = array[index];","      if (predicate(value, index, array)) {","        result[resIndex++] = value;","      }","    }","    return result;","  }","","  return arrayFilter;","});",""],"l":{"1":1,"12":1,"13":0,"18":0,"19":0,"20":0,"21":0,"24":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayIncludes.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayIncludes.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":27},"end":{"line":1,"column":49}}},"2":{"name":"arrayIncludes","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":15,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":42}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":57}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":23}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":25},"end":{"line":13,"column":37}},{"start":{"line":13,"column":40},"end":{"line":13,"column":41}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":11},"end":{"line":14,"column":19}},{"start":{"line":14,"column":23},"end":{"line":14,"column":56}}]}},"code":["define(['./_baseIndexOf'], function(baseIndexOf) {","","  /**","   * A specialized version of `_.includes` for arrays without support for","   * specifying an index to search from.","   *","   * @private","   * @param {Array} [array] The array to inspect.","   * @param {*} target The value to search for.","   * @returns {boolean} Returns `true` if `target` is found, else `false`.","   */","  function arrayIncludes(array, value) {","    var length = array ? array.length : 0;","    return !!length && baseIndexOf(array, value, 0) > -1;","  }","","  return arrayIncludes;","});",""],"l":{"1":1,"12":1,"13":0,"14":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayIncludesWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayIncludesWith.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"arrayIncludesWith","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":25,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":22,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":14,"column":42}},"4":{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},"5":{"start":{"line":17,"column":6},"end":{"line":19,"column":7}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":20}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":17}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":27}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":37}},{"start":{"line":14,"column":40},"end":{"line":14,"column":41}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":6}},{"start":{"line":17,"column":6},"end":{"line":17,"column":6}}]}},"code":["define([], function() {","","  /**","   * This function is like `arrayIncludes` except that it accepts a comparator.","   *","   * @private","   * @param {Array} [array] The array to inspect.","   * @param {*} target The value to search for.","   * @param {Function} comparator The comparator invoked per element.","   * @returns {boolean} Returns `true` if `target` is found, else `false`.","   */","  function arrayIncludesWith(array, value, comparator) {","    var index = -1,","        length = array ? array.length : 0;","","    while (++index < length) {","      if (comparator(value, array[index])) {","        return true;","      }","    }","    return false;","  }","","  return arrayIncludesWith;","});",""],"l":{"1":1,"12":1,"13":0,"16":0,"17":0,"18":0,"21":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/array.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/array.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":951},"end":{"line":1,"column":1642}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":69,"column":3}},"2":{"start":{"line":2,"column":2},"end":{"line":68,"column":4}}},"branchMap":{},"code":["define(['./chunk', './compact', './concat', './difference', './differenceBy', './differenceWith', './drop', './dropRight', './dropRightWhile', './dropWhile', './fill', './findIndex', './findLastIndex', './first', './flatten', './flattenDeep', './flattenDepth', './fromPairs', './head', './indexOf', './initial', './intersection', './intersectionBy', './intersectionWith', './join', './last', './lastIndexOf', './nth', './pull', './pullAll', './pullAllBy', './pullAllWith', './pullAt', './remove', './reverse', './slice', './sortedIndex', './sortedIndexBy', './sortedIndexOf', './sortedLastIndex', './sortedLastIndexBy', './sortedLastIndexOf', './sortedUniq', './sortedUniqBy', './tail', './take', './takeRight', './takeRightWhile', './takeWhile', './union', './unionBy', './unionWith', './uniq', './uniqBy', './uniqWith', './unzip', './unzipWith', './without', './xor', './xorBy', './xorWith', './zip', './zipObject', './zipObjectDeep', './zipWith'], function(chunk, compact, concat, difference, differenceBy, differenceWith, drop, dropRight, dropRightWhile, dropWhile, fill, findIndex, findLastIndex, first, flatten, flattenDeep, flattenDepth, fromPairs, head, indexOf, initial, intersection, intersectionBy, intersectionWith, join, last, lastIndexOf, nth, pull, pullAll, pullAllBy, pullAllWith, pullAt, remove, reverse, slice, sortedIndex, sortedIndexBy, sortedIndexOf, sortedLastIndex, sortedLastIndexBy, sortedLastIndexOf, sortedUniq, sortedUniqBy, tail, take, takeRight, takeRightWhile, takeWhile, union, unionBy, unionWith, uniq, uniqBy, uniqWith, unzip, unzipWith, without, xor, xorBy, xorWith, zip, zipObject, zipObjectDeep, zipWith) {","  return {","    'chunk': chunk,","    'compact': compact,","    'concat': concat,","    'difference': difference,","    'differenceBy': differenceBy,","    'differenceWith': differenceWith,","    'drop': drop,","    'dropRight': dropRight,","    'dropRightWhile': dropRightWhile,","    'dropWhile': dropWhile,","    'fill': fill,","    'findIndex': findIndex,","    'findLastIndex': findLastIndex,","    'first': first,","    'flatten': flatten,","    'flattenDeep': flattenDeep,","    'flattenDepth': flattenDepth,","    'fromPairs': fromPairs,","    'head': head,","    'indexOf': indexOf,","    'initial': initial,","    'intersection': intersection,","    'intersectionBy': intersectionBy,","    'intersectionWith': intersectionWith,","    'join': join,","    'last': last,","    'lastIndexOf': lastIndexOf,","    'nth': nth,","    'pull': pull,","    'pullAll': pullAll,","    'pullAllBy': pullAllBy,","    'pullAllWith': pullAllWith,","    'pullAt': pullAt,","    'remove': remove,","    'reverse': reverse,","    'slice': slice,","    'sortedIndex': sortedIndex,","    'sortedIndexBy': sortedIndexBy,","    'sortedIndexOf': sortedIndexOf,","    'sortedLastIndex': sortedLastIndex,","    'sortedLastIndexBy': sortedLastIndexBy,","    'sortedLastIndexOf': sortedLastIndexOf,","    'sortedUniq': sortedUniq,","    'sortedUniqBy': sortedUniqBy,","    'tail': tail,","    'take': take,","    'takeRight': takeRight,","    'takeRightWhile': takeRightWhile,","    'takeWhile': takeWhile,","    'union': union,","    'unionBy': unionBy,","    'unionWith': unionWith,","    'uniq': uniq,","    'uniqBy': uniqBy,","    'uniqWith': uniqWith,","    'unzip': unzip,","    'unzipWith': unzipWith,","    'without': without,","    'xor': xor,","    'xorBy': xorBy,","    'xorWith': xorWith,","    'zip': zip,","    'zipObject': zipObject,","    'zipObjectDeep': zipObjectDeep,","    'zipWith': zipWith","  };","});",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayLikeKeys.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayLikeKeys.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0,0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0,0,0,0,0,0,0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":101},"end":{"line":1,"column":176}}},"2":{"name":"arrayLikeKeys","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":45,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":37}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":50}},"4":{"start":{"line":17,"column":2},"end":{"line":42,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":24,"column":31}},"6":{"start":{"line":26,"column":4},"end":{"line":40,"column":5}},"7":{"start":{"line":27,"column":6},"end":{"line":39,"column":7}},"8":{"start":{"line":38,"column":8},"end":{"line":38,"column":25}},"9":{"start":{"line":41,"column":4},"end":{"line":41,"column":18}},"10":{"start":{"line":44,"column":2},"end":{"line":44,"column":23}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":16},"end":{"line":19,"column":22}},{"start":{"line":19,"column":26},"end":{"line":19,"column":44}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":17},"end":{"line":20,"column":23}},{"start":{"line":20,"column":27},"end":{"line":20,"column":33}},{"start":{"line":20,"column":37},"end":{"line":20,"column":52}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":17},"end":{"line":21,"column":23}},{"start":{"line":21,"column":27},"end":{"line":21,"column":33}},{"start":{"line":21,"column":37},"end":{"line":21,"column":44}},{"start":{"line":21,"column":48},"end":{"line":21,"column":67}}]},"4":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":22},"end":{"line":22,"column":27}},{"start":{"line":22,"column":31},"end":{"line":22,"column":36}},{"start":{"line":22,"column":40},"end":{"line":22,"column":46}},{"start":{"line":22,"column":50},"end":{"line":22,"column":56}}]},"5":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":31},"end":{"line":23,"column":62}},{"start":{"line":23,"column":65},"end":{"line":23,"column":67}}]},"6":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":6}},{"start":{"line":27,"column":6},"end":{"line":27,"column":6}}]},"7":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":11},"end":{"line":27,"column":20}},{"start":{"line":27,"column":24},"end":{"line":27,"column":55}},{"start":{"line":28,"column":10},"end":{"line":37,"column":12}}]},"8":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":23}},{"start":{"line":30,"column":13},"end":{"line":30,"column":28}},{"start":{"line":32,"column":14},"end":{"line":32,"column":20}},{"start":{"line":32,"column":25},"end":{"line":32,"column":40}},{"start":{"line":32,"column":44},"end":{"line":32,"column":59}},{"start":{"line":34,"column":14},"end":{"line":34,"column":20}},{"start":{"line":34,"column":25},"end":{"line":34,"column":40}},{"start":{"line":34,"column":44},"end":{"line":34,"column":63}},{"start":{"line":34,"column":67},"end":{"line":34,"column":86}},{"start":{"line":36,"column":13},"end":{"line":36,"column":33}}]}},"code":["define(['./_baseTimes', './isArguments', './isArray', './isBuffer', './_isIndex', './isTypedArray'], function(baseTimes, isArguments, isArray, isBuffer, isIndex, isTypedArray) {","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /** Used to check objects for own properties. */","  var hasOwnProperty = objectProto.hasOwnProperty;","","  /**","   * Creates an array of the enumerable property names of the array-like `value`.","   *","   * @private","   * @param {*} value The value to query.","   * @param {boolean} inherited Specify returning inherited property names.","   * @returns {Array} Returns the array of property names.","   */","  function arrayLikeKeys(value, inherited) {","    var isArr = isArray(value),","        isArg = !isArr && isArguments(value),","        isBuff = !isArr && !isArg && isBuffer(value),","        isType = !isArr && !isArg && !isBuff && isTypedArray(value),","        skipIndexes = isArr || isArg || isBuff || isType,","        result = skipIndexes ? baseTimes(value.length, String) : [],","        length = result.length;","","    for (var key in value) {","      if ((inherited || hasOwnProperty.call(value, key)) &&","          !(skipIndexes && (","             // Safari 9 has enumerable `arguments.length` in strict mode.","             key == 'length' ||","             // Node.js 0.10 has enumerable non-index properties on buffers.","             (isBuff && (key == 'offset' || key == 'parent')) ||","             // PhantomJS 2 has enumerable non-index properties on typed arrays.","             (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||","             // Skip index properties.","             isIndex(key, length)","          ))) {","        result.push(key);","      }","    }","    return result;","  }","","  return arrayLikeKeys;","});",""],"l":{"1":1,"4":0,"7":0,"17":1,"18":0,"26":0,"27":0,"38":0,"41":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayMap.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayMap.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"arrayMap","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":24,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":21,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":15,"column":31}},"4":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":18,"column":59}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":18}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":37}},{"start":{"line":14,"column":40},"end":{"line":14,"column":41}}]}},"code":["define([], function() {","","  /**","   * A specialized version of `_.map` for arrays without support for iteratee","   * shorthands.","   *","   * @private","   * @param {Array} [array] The array to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @returns {Array} Returns the new mapped array.","   */","  function arrayMap(array, iteratee) {","    var index = -1,","        length = array ? array.length : 0,","        result = Array(length);","","    while (++index < length) {","      result[index] = iteratee(array[index], index, array);","    }","    return result;","  }","","  return arrayMap;","});",""],"l":{"1":1,"12":1,"13":0,"17":0,"18":0,"20":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayPush.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayPush.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"arrayPush","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":20,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":14,"column":30}},"4":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"5":{"start":{"line":17,"column":6},"end":{"line":17,"column":44}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":17}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":19}}},"branchMap":{},"code":["define([], function() {","","  /**","   * Appends the elements of `values` to `array`.","   *","   * @private","   * @param {Array} array The array to modify.","   * @param {Array} values The values to append.","   * @returns {Array} Returns `array`.","   */","  function arrayPush(array, values) {","    var index = -1,","        length = values.length,","        offset = array.length;","","    while (++index < length) {","      array[offset + index] = values[index];","    }","    return array;","  }","","  return arrayPush;","});",""],"l":{"1":1,"11":1,"12":0,"16":0,"17":0,"19":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayReduce.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayReduce.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"arrayReduce","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":3}},"2":{"start":{"line":15,"column":2},"end":{"line":26,"column":3}},"3":{"start":{"line":16,"column":4},"end":{"line":17,"column":42}},"4":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"5":{"start":{"line":20,"column":6},"end":{"line":20,"column":35}},"6":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"7":{"start":{"line":23,"column":6},"end":{"line":23,"column":70}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":23}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":21}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":25},"end":{"line":17,"column":37}},{"start":{"line":17,"column":40},"end":{"line":17,"column":41}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"3":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":17}},{"start":{"line":19,"column":21},"end":{"line":19,"column":27}}]}},"code":["define([], function() {","","  /**","   * A specialized version of `_.reduce` for arrays without support for","   * iteratee shorthands.","   *","   * @private","   * @param {Array} [array] The array to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @param {*} [accumulator] The initial value.","   * @param {boolean} [initAccum] Specify using the first element of `array` as","   *  the initial value.","   * @returns {*} Returns the accumulated value.","   */","  function arrayReduce(array, iteratee, accumulator, initAccum) {","    var index = -1,","        length = array ? array.length : 0;","","    if (initAccum && length) {","      accumulator = array[++index];","    }","    while (++index < length) {","      accumulator = iteratee(accumulator, array[index], index, array);","    }","    return accumulator;","  }","","  return arrayReduce;","});",""],"l":{"1":1,"15":1,"16":0,"19":0,"20":0,"22":0,"23":0,"25":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayReduceRight.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayReduceRight.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"arrayReduceRight","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":3}},"2":{"start":{"line":15,"column":2},"end":{"line":24,"column":3}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":42}},"4":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":18,"column":36}},"6":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"7":{"start":{"line":21,"column":6},"end":{"line":21,"column":72}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":23}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":26}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":25},"end":{"line":16,"column":37}},{"start":{"line":16,"column":40},"end":{"line":16,"column":41}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":17}},{"start":{"line":17,"column":21},"end":{"line":17,"column":27}}]}},"code":["define([], function() {","","  /**","   * A specialized version of `_.reduceRight` for arrays without support for","   * iteratee shorthands.","   *","   * @private","   * @param {Array} [array] The array to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @param {*} [accumulator] The initial value.","   * @param {boolean} [initAccum] Specify using the last element of `array` as","   *  the initial value.","   * @returns {*} Returns the accumulated value.","   */","  function arrayReduceRight(array, iteratee, accumulator, initAccum) {","    var length = array ? array.length : 0;","    if (initAccum && length) {","      accumulator = array[--length];","    }","    while (length--) {","      accumulator = iteratee(accumulator, array[length], length, array);","    }","    return accumulator;","  }","","  return arrayReduceRight;","});",""],"l":{"1":1,"15":1,"16":0,"17":0,"18":0,"20":0,"21":0,"23":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arraySample.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arraySample.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":26},"end":{"line":1,"column":47}}},"2":{"name":"arraySample","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":13,"column":2},"end":{"line":16,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":30}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":65}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":21}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":20},"end":{"line":15,"column":52}},{"start":{"line":15,"column":55},"end":{"line":15,"column":64}}]}},"code":["define(['./_baseRandom'], function(baseRandom) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * A specialized version of `_.sample` for arrays.","   *","   * @private","   * @param {Array} array The array to sample.","   * @returns {*} Returns the random element.","   */","  function arraySample(array) {","    var length = array.length;","    return length ? array[baseRandom(0, length - 1)] : undefined;","  }","","  return arraySample;","});",""],"l":{"1":1,"4":0,"13":1,"14":0,"15":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arraySampleSize.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arraySampleSize.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":59},"end":{"line":1,"column":103}}},"2":{"name":"arraySampleSize","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":72}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":25}}},"branchMap":{},"code":["define(['./_baseClamp', './_copyArray', './_shuffleSelf'], function(baseClamp, copyArray, shuffleSelf) {","","  /**","   * A specialized version of `_.sampleSize` for arrays.","   *","   * @private","   * @param {Array} array The array to sample.","   * @param {number} n The number of elements to sample.","   * @returns {Array} Returns the random elements.","   */","  function arraySampleSize(array, n) {","    return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));","  }","","  return arraySampleSize;","});",""],"l":{"1":1,"11":1,"12":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayShuffle.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arrayShuffle.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":43},"end":{"line":1,"column":76}}},"2":{"name":"arrayShuffle","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":41}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":22}}},"branchMap":{},"code":["define(['./_copyArray', './_shuffleSelf'], function(copyArray, shuffleSelf) {","","  /**","   * A specialized version of `_.shuffle` for arrays.","   *","   * @private","   * @param {Array} array The array to shuffle.","   * @returns {Array} Returns the new shuffled array.","   */","  function arrayShuffle(array) {","    return shuffleSelf(copyArray(array));","  }","","  return arrayShuffle;","});",""],"l":{"1":1,"10":1,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arraySome.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_arraySome.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"arraySome","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":26,"column":3}},"2":{"start":{"line":13,"column":2},"end":{"line":23,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":15,"column":42}},"4":{"start":{"line":17,"column":4},"end":{"line":21,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":20,"column":7}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":20}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":17}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":19}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":25},"end":{"line":15,"column":37}},{"start":{"line":15,"column":40},"end":{"line":15,"column":41}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]}},"code":["define([], function() {","","  /**","   * A specialized version of `_.some` for arrays without support for iteratee","   * shorthands.","   *","   * @private","   * @param {Array} [array] The array to iterate over.","   * @param {Function} predicate The function invoked per iteration.","   * @returns {boolean} Returns `true` if any element passes the predicate check,","   *  else `false`.","   */","  function arraySome(array, predicate) {","    var index = -1,","        length = array ? array.length : 0;","","    while (++index < length) {","      if (predicate(array[index], index, array)) {","        return true;","      }","    }","    return false;","  }","","  return arraySome;","});",""],"l":{"1":1,"13":1,"14":0,"17":0,"18":0,"19":0,"22":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/ary.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/ary.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":26},"end":{"line":1,"column":47}}},"2":{"name":"ary","line":26,"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":33,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":21}},"4":{"start":{"line":26,"column":2},"end":{"line":30,"column":3}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":30}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":46}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":85}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":13}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":25}},{"start":{"line":27,"column":28},"end":{"line":27,"column":29}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":30},"end":{"line":28,"column":41}},{"start":{"line":28,"column":44},"end":{"line":28,"column":45}}]},"3":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":13}},{"start":{"line":28,"column":17},"end":{"line":28,"column":26}}]}},"code":["define(['./_createWrap'], function(createWrap) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used to compose bitmasks for function metadata. */","  var ARY_FLAG = 128;","","  /**","   * Creates a function that invokes `func`, with up to `n` arguments,","   * ignoring any additional arguments.","   *","   * @static","   * @memberOf _","   * @since 3.0.0","   * @category Function","   * @param {Function} func The function to cap arguments for.","   * @param {number} [n=func.length] The arity cap.","   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.","   * @returns {Function} Returns the new capped function.","   * @example","   *","   * _.map(['6', '8', '10'], _.ary(parseInt, 1));","   * // => [6, 8, 10]","   */","  function ary(func, n, guard) {","    n = guard ? undefined : n;","    n = (func && n == null) ? func.length : n;","    return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);","  }","","  return ary;","});",""],"l":{"1":1,"4":0,"7":0,"26":1,"27":0,"28":0,"29":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_asciiSize.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_asciiSize.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":28},"end":{"line":1,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":13,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":10,"column":41}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":19}}},"branchMap":{},"code":["define(['./_baseProperty'], function(baseProperty) {","","  /**","   * Gets the size of an ASCII `string`.","   *","   * @private","   * @param {string} string The string inspect.","   * @returns {number} Returns the string size.","   */","  var asciiSize = baseProperty('length');","","  return asciiSize;","});",""],"l":{"1":1,"10":0,"12":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_asciiToArray.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_asciiToArray.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"asciiToArray","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":22}}},"branchMap":{},"code":["define([], function() {","","  /**","   * Converts an ASCII `string` to an array.","   *","   * @private","   * @param {string} string The string to convert.","   * @returns {Array} Returns the converted array.","   */","  function asciiToArray(string) {","    return string.split('');","  }","","  return asciiToArray;","});",""],"l":{"1":1,"10":1,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_asciiWords.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_asciiWords.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"asciiWords","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":64}},"3":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":43}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":20}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":11},"end":{"line":14,"column":36}},{"start":{"line":14,"column":40},"end":{"line":14,"column":42}}]}},"code":["define([], function() {","","  /** Used to match words composed of alphanumeric characters. */","  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;","","  /**","   * Splits an ASCII `string` into an array of its words.","   *","   * @private","   * @param {string} The string to inspect.","   * @returns {Array} Returns the words of `string`.","   */","  function asciiWords(string) {","    return string.match(reAsciiWord) || [];","  }","","  return asciiWords;","});",""],"l":{"1":1,"4":0,"13":1,"14":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_assignInDefaults.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_assignInDefaults.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":30}}},"2":{"name":"assignInDefaults","line":22,"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":31,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":37}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":50}},"5":{"start":{"line":22,"column":2},"end":{"line":28,"column":3}},"6":{"start":{"line":23,"column":4},"end":{"line":26,"column":5}},"7":{"start":{"line":25,"column":6},"end":{"line":25,"column":22}},"8":{"start":{"line":27,"column":4},"end":{"line":27,"column":20}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":26}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":30}},{"start":{"line":24,"column":9},"end":{"line":24,"column":39}},{"start":{"line":24,"column":43},"end":{"line":24,"column":76}}]}},"code":["define(['./eq'], function(eq) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /** Used to check objects for own properties. */","  var hasOwnProperty = objectProto.hasOwnProperty;","","  /**","   * Used by `_.defaults` to customize its `_.assignIn` use.","   *","   * @private","   * @param {*} objValue The destination value.","   * @param {*} srcValue The source value.","   * @param {string} key The key of the property to assign.","   * @param {Object} object The parent object of `objValue`.","   * @returns {*} Returns the value to assign.","   */","  function assignInDefaults(objValue, srcValue, key, object) {","    if (objValue === undefined ||","        (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {","      return srcValue;","    }","    return objValue;","  }","","  return assignInDefaults;","});",""],"l":{"1":1,"4":0,"7":0,"10":0,"22":1,"23":0,"25":0,"27":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/assignIn.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/assignIn.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":59},"end":{"line":1,"column":104}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":32},"end":{"line":34,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":39,"column":3}},"2":{"start":{"line":34,"column":2},"end":{"line":36,"column":5}},"3":{"start":{"line":35,"column":4},"end":{"line":35,"column":47}},"4":{"start":{"line":38,"column":2},"end":{"line":38,"column":18}}},"branchMap":{},"code":["define(['./_copyObject', './_createAssigner', './keysIn'], function(copyObject, createAssigner, keysIn) {","","  /**","   * This method is like `_.assign` except that it iterates over own and","   * inherited source properties.","   *","   * **Note:** This method mutates `object`.","   *","   * @static","   * @memberOf _","   * @since 4.0.0","   * @alias extend","   * @category Object","   * @param {Object} object The destination object.","   * @param {...Object} [sources] The source objects.","   * @returns {Object} Returns `object`.","   * @see _.assign","   * @example","   *","   * function Foo() {","   *   this.a = 1;","   * }","   *","   * function Bar() {","   *   this.c = 3;","   * }","   *","   * Foo.prototype.b = 2;","   * Bar.prototype.d = 4;","   *","   * _.assignIn({ 'a': 0 }, new Foo, new Bar);","   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }","   */","  var assignIn = createAssigner(function(object, source) {","    copyObject(source, keysIn(source), object);","  });","","  return assignIn;","});",""],"l":{"1":1,"34":0,"35":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/assignInWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/assignInWith.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":59},"end":{"line":1,"column":104}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":36},"end":{"line":32,"column":83}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":37,"column":3}},"2":{"start":{"line":32,"column":2},"end":{"line":34,"column":5}},"3":{"start":{"line":33,"column":4},"end":{"line":33,"column":59}},"4":{"start":{"line":36,"column":2},"end":{"line":36,"column":22}}},"branchMap":{},"code":["define(['./_copyObject', './_createAssigner', './keysIn'], function(copyObject, createAssigner, keysIn) {","","  /**","   * This method is like `_.assignIn` except that it accepts `customizer`","   * which is invoked to produce the assigned values. If `customizer` returns","   * `undefined`, assignment is handled by the method instead. The `customizer`","   * is invoked with five arguments: (objValue, srcValue, key, object, source).","   *","   * **Note:** This method mutates `object`.","   *","   * @static","   * @memberOf _","   * @since 4.0.0","   * @alias extendWith","   * @category Object","   * @param {Object} object The destination object.","   * @param {...Object} sources The source objects.","   * @param {Function} [customizer] The function to customize assigned values.","   * @returns {Object} Returns `object`.","   * @see _.assignWith","   * @example","   *","   * function customizer(objValue, srcValue) {","   *   return _.isUndefined(objValue) ? srcValue : objValue;","   * }","   *","   * var defaults = _.partialRight(_.assignInWith, customizer);","   *","   * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });","   * // => { 'a': 1, 'b': 2 }","   */","  var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {","    copyObject(source, keysIn(source), object, customizer);","  });","","  return assignInWith;","});",""],"l":{"1":1,"32":0,"33":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/assign.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/assign.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":110},"end":{"line":1,"column":192}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":30},"end":{"line":41,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":54,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":37}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":50}},"4":{"start":{"line":41,"column":2},"end":{"line":51,"column":5}},"5":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"6":{"start":{"line":43,"column":6},"end":{"line":43,"column":47}},"7":{"start":{"line":44,"column":6},"end":{"line":44,"column":13}},"8":{"start":{"line":46,"column":4},"end":{"line":50,"column":5}},"9":{"start":{"line":47,"column":6},"end":{"line":49,"column":7}},"10":{"start":{"line":48,"column":8},"end":{"line":48,"column":46}},"11":{"start":{"line":53,"column":2},"end":{"line":53,"column":16}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"2":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":27}},{"start":{"line":42,"column":31},"end":{"line":42,"column":50}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":6}},{"start":{"line":47,"column":6},"end":{"line":47,"column":6}}]}},"code":["define(['./_assignValue', './_copyObject', './_createAssigner', './isArrayLike', './_isPrototype', './keys'], function(assignValue, copyObject, createAssigner, isArrayLike, isPrototype, keys) {","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /** Used to check objects for own properties. */","  var hasOwnProperty = objectProto.hasOwnProperty;","","  /**","   * Assigns own enumerable string keyed properties of source objects to the","   * destination object. Source objects are applied from left to right.","   * Subsequent sources overwrite property assignments of previous sources.","   *","   * **Note:** This method mutates `object` and is loosely based on","   * [`Object.assign`](https://mdn.io/Object/assign).","   *","   * @static","   * @memberOf _","   * @since 0.10.0","   * @category Object","   * @param {Object} object The destination object.","   * @param {...Object} [sources] The source objects.","   * @returns {Object} Returns `object`.","   * @see _.assignIn","   * @example","   *","   * function Foo() {","   *   this.a = 1;","   * }","   *","   * function Bar() {","   *   this.c = 3;","   * }","   *","   * Foo.prototype.b = 2;","   * Bar.prototype.d = 4;","   *","   * _.assign({ 'a': 0 }, new Foo, new Bar);","   * // => { 'a': 1, 'c': 3 }","   */","  var assign = createAssigner(function(object, source) {","    if (isPrototype(source) || isArrayLike(source)) {","      copyObject(source, keys(source), object);","      return;","    }","    for (var key in source) {","      if (hasOwnProperty.call(source, key)) {","        assignValue(object, key, source[key]);","      }","    }","  });","","  return assign;","});",""],"l":{"1":1,"4":0,"7":0,"41":0,"42":0,"43":0,"44":0,"46":0,"47":0,"48":0,"53":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_assignMergeValue.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_assignMergeValue.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0],"2":[0,0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":39},"end":{"line":1,"column":69}}},"2":{"name":"assignMergeValue","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":15,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":16,"column":4},"end":{"line":19,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":18,"column":42}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":26}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":9},"end":{"line":16,"column":28}},{"start":{"line":16,"column":32},"end":{"line":16,"column":55}},{"start":{"line":17,"column":9},"end":{"line":17,"column":28}},{"start":{"line":17,"column":32},"end":{"line":17,"column":48}}]}},"code":["define(['./_baseAssignValue', './eq'], function(baseAssignValue, eq) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * This function is like `assignValue` except that it doesn't assign","   * `undefined` values.","   *","   * @private","   * @param {Object} object The object to modify.","   * @param {string} key The key of the property to assign.","   * @param {*} value The value to assign.","   */","  function assignMergeValue(object, key, value) {","    if ((value !== undefined && !eq(object[key], value)) ||","        (value === undefined && !(key in object))) {","      baseAssignValue(object, key, value);","    }","  }","","  return assignMergeValue;","});",""],"l":{"1":1,"4":0,"15":1,"16":0,"18":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_assignValue.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_assignValue.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":39},"end":{"line":1,"column":69}}},"2":{"name":"assignValue","line":22,"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":31,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":37}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":50}},"5":{"start":{"line":22,"column":2},"end":{"line":28,"column":3}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":31}},"7":{"start":{"line":24,"column":4},"end":{"line":27,"column":5}},"8":{"start":{"line":26,"column":6},"end":{"line":26,"column":42}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":21}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":66}},{"start":{"line":25,"column":9},"end":{"line":25,"column":28}},{"start":{"line":25,"column":32},"end":{"line":25,"column":48}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":10},"end":{"line":24,"column":42}},{"start":{"line":24,"column":46},"end":{"line":24,"column":65}}]}},"code":["define(['./_baseAssignValue', './eq'], function(baseAssignValue, eq) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /** Used to check objects for own properties. */","  var hasOwnProperty = objectProto.hasOwnProperty;","","  /**","   * Assigns `value` to `key` of `object` if the existing value is not equivalent","   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)","   * for equality comparisons.","   *","   * @private","   * @param {Object} object The object to modify.","   * @param {string} key The key of the property to assign.","   * @param {*} value The value to assign.","   */","  function assignValue(object, key, value) {","    var objValue = object[key];","    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||","        (value === undefined && !(key in object))) {","      baseAssignValue(object, key, value);","    }","  }","","  return assignValue;","});",""],"l":{"1":1,"4":0,"7":0,"10":0,"22":1,"23":0,"24":0,"26":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/assignWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/assignWith.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":57},"end":{"line":1,"column":100}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":34},"end":{"line":31,"column":81}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":36,"column":3}},"2":{"start":{"line":31,"column":2},"end":{"line":33,"column":5}},"3":{"start":{"line":32,"column":4},"end":{"line":32,"column":57}},"4":{"start":{"line":35,"column":2},"end":{"line":35,"column":20}}},"branchMap":{},"code":["define(['./_copyObject', './_createAssigner', './keys'], function(copyObject, createAssigner, keys) {","","  /**","   * This method is like `_.assign` except that it accepts `customizer`","   * which is invoked to produce the assigned values. If `customizer` returns","   * `undefined`, assignment is handled by the method instead. The `customizer`","   * is invoked with five arguments: (objValue, srcValue, key, object, source).","   *","   * **Note:** This method mutates `object`.","   *","   * @static","   * @memberOf _","   * @since 4.0.0","   * @category Object","   * @param {Object} object The destination object.","   * @param {...Object} sources The source objects.","   * @param {Function} [customizer] The function to customize assigned values.","   * @returns {Object} Returns `object`.","   * @see _.assignInWith","   * @example","   *","   * function customizer(objValue, srcValue) {","   *   return _.isUndefined(objValue) ? srcValue : objValue;","   * }","   *","   * var defaults = _.partialRight(_.assignWith, customizer);","   *","   * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });","   * // => { 'a': 1, 'b': 2 }","   */","  var assignWith = createAssigner(function(object, source, srcIndex, customizer) {","    copyObject(source, keys(source), object, customizer);","  });","","  return assignWith;","});",""],"l":{"1":1,"31":0,"32":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_assocIndexOf.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_assocIndexOf.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":30}}},"2":{"name":"assocIndexOf","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":19,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":30}},"4":{"start":{"line":13,"column":4},"end":{"line":17,"column":5}},"5":{"start":{"line":14,"column":6},"end":{"line":16,"column":7}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":22}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":14}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":22}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":6}},{"start":{"line":14,"column":6},"end":{"line":14,"column":6}}]}},"code":["define(['./eq'], function(eq) {","","  /**","   * Gets the index at which the `key` is found in `array` of key-value pairs.","   *","   * @private","   * @param {Array} array The array to inspect.","   * @param {*} key The key to search for.","   * @returns {number} Returns the index of the matched value, else `-1`.","   */","  function assocIndexOf(array, key) {","    var length = array.length;","    while (length--) {","      if (eq(array[length][0], key)) {","        return length;","      }","    }","    return -1;","  }","","  return assocIndexOf;","});",""],"l":{"1":1,"11":1,"12":0,"13":0,"14":0,"15":0,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/at.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/at.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":37},"end":{"line":1,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":3}},"2":{"start":{"line":20,"column":2},"end":{"line":20,"column":28}},"3":{"start":{"line":22,"column":2},"end":{"line":22,"column":12}}},"branchMap":{},"code":["define(['./_baseAt', './_flatRest'], function(baseAt, flatRest) {","","  /**","   * Creates an array of values corresponding to `paths` of `object`.","   *","   * @static","   * @memberOf _","   * @since 1.0.0","   * @category Object","   * @param {Object} object The object to iterate over.","   * @param {...(string|string[])} [paths] The property paths of elements to pick.","   * @returns {Array} Returns the picked values.","   * @example","   *","   * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };","   *","   * _.at(object, ['a[0].b.c', 'a[1]']);","   * // => [3, 4]","   */","  var at = flatRest(baseAt);","","  return at;","});",""],"l":{"1":1,"20":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/attempt.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/attempt.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":49},"end":{"line":1,"column":84}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":37,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":28,"column":2},"end":{"line":34,"column":5}},"4":{"start":{"line":29,"column":4},"end":{"line":33,"column":5}},"5":{"start":{"line":30,"column":6},"end":{"line":30,"column":42}},"6":{"start":{"line":32,"column":6},"end":{"line":32,"column":43}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":17}}},"branchMap":{"1":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":26},"end":{"line":32,"column":27}},{"start":{"line":32,"column":30},"end":{"line":32,"column":42}}]}},"code":["define(['./_apply', './_baseRest', './isError'], function(apply, baseRest, isError) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * Attempts to invoke `func`, returning either the result or the caught error","   * object. Any additional arguments are provided to `func` when it's invoked.","   *","   * @static","   * @memberOf _","   * @since 3.0.0","   * @category Util","   * @param {Function} func The function to attempt.","   * @param {...*} [args] The arguments to invoke `func` with.","   * @returns {*} Returns the `func` result or error object.","   * @example","   *","   * // Avoid throwing errors for invalid selectors.","   * var elements = _.attempt(function(selector) {","   *   return document.querySelectorAll(selector);","   * }, '>_>');","   *","   * if (_.isError(elements)) {","   *   elements = [];","   * }","   */","  var attempt = baseRest(function(func, args) {","    try {","      return apply(func, undefined, args);","    } catch (e) {","      return isError(e) ? e : new Error(e);","    }","  });","","  return attempt;","});",""],"l":{"1":1,"4":0,"28":0,"29":0,"30":0,"32":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseAggregator.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseAggregator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":24},"end":{"line":1,"column":43}}},"2":{"name":"baseAggregator","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":69}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":25},"end":{"line":15,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":14,"column":2},"end":{"line":19,"column":3}},"3":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"4":{"start":{"line":16,"column":6},"end":{"line":16,"column":62}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":23}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":24}}},"branchMap":{},"code":["define(['./_baseEach'], function(baseEach) {","","  /**","   * Aggregates elements of `collection` on `accumulator` with keys transformed","   * by `iteratee` and values set by `setter`.","   *","   * @private","   * @param {Array|Object} collection The collection to iterate over.","   * @param {Function} setter The function to set `accumulator` values.","   * @param {Function} iteratee The iteratee to transform keys.","   * @param {Object} accumulator The initial aggregated object.","   * @returns {Function} Returns `accumulator`.","   */","  function baseAggregator(collection, setter, iteratee, accumulator) {","    baseEach(collection, function(value, key, collection) {","      setter(accumulator, value, iteratee(value), collection);","    });","    return accumulator;","  }","","  return baseAggregator;","});",""],"l":{"1":1,"14":1,"15":0,"16":0,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseAssign.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseAssign.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":36},"end":{"line":1,"column":63}}},"2":{"name":"baseAssign","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":62}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":20}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":11},"end":{"line":13,"column":17}},{"start":{"line":13,"column":21},"end":{"line":13,"column":61}}]}},"code":["define(['./_copyObject', './keys'], function(copyObject, keys) {","","  /**","   * The base implementation of `_.assign` without support for multiple sources","   * or `customizer` functions.","   *","   * @private","   * @param {Object} object The destination object.","   * @param {Object} source The source object.","   * @returns {Object} Returns `object`.","   */","  function baseAssign(object, source) {","    return object && copyObject(source, keys(source), object);","  }","","  return baseAssign;","});",""],"l":{"1":1,"12":1,"13":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseAssignValue.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseAssignValue.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":30},"end":{"line":1,"column":55}}},"2":{"name":"baseAssignValue","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":26,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":23,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":22,"column":5}},"4":{"start":{"line":14,"column":6},"end":{"line":19,"column":9}},"5":{"start":{"line":21,"column":6},"end":{"line":21,"column":26}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":25}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":26}},{"start":{"line":13,"column":30},"end":{"line":13,"column":44}}]}},"code":["define(['./_defineProperty'], function(defineProperty) {","","  /**","   * The base implementation of `assignValue` and `assignMergeValue` without","   * value checks.","   *","   * @private","   * @param {Object} object The object to modify.","   * @param {string} key The key of the property to assign.","   * @param {*} value The value to assign.","   */","  function baseAssignValue(object, key, value) {","    if (key == '__proto__' && defineProperty) {","      defineProperty(object, key, {","        'configurable': true,","        'enumerable': true,","        'value': value,","        'writable': true","      });","    } else {","      object[key] = value;","    }","  }","","  return baseAssignValue;","});",""],"l":{"1":1,"12":1,"13":0,"14":0,"21":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseAt.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseAt.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":18},"end":{"line":1,"column":32}}},"2":{"name":"baseAt","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":14,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":18,"column":31}},"5":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"6":{"start":{"line":21,"column":6},"end":{"line":21,"column":68}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":16}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":30},"end":{"line":21,"column":39}},{"start":{"line":21,"column":42},"end":{"line":21,"column":67}}]}},"code":["define(['./get'], function(get) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.at` without support for individual paths.","   *","   * @private","   * @param {Object} object The object to iterate over.","   * @param {string[]} paths The property paths of elements to pick.","   * @returns {Array} Returns the picked elements.","   */","  function baseAt(object, paths) {","    var index = -1,","        isNil = object == null,","        length = paths.length,","        result = Array(length);","","    while (++index < length) {","      result[index] = isNil ? undefined : get(object, paths[index]);","    }","    return result;","  }","","  return baseAt;","});",""],"l":{"1":1,"4":0,"14":1,"15":0,"20":0,"21":0,"23":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseClamp.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseClamp.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseClamp","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":28,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":15,"column":2},"end":{"line":25,"column":3}},"4":{"start":{"line":16,"column":4},"end":{"line":23,"column":5}},"5":{"start":{"line":17,"column":6},"end":{"line":19,"column":7}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":50}},"7":{"start":{"line":20,"column":6},"end":{"line":22,"column":7}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":50}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":19}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":6}},{"start":{"line":17,"column":6},"end":{"line":17,"column":6}}]},"3":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":35},"end":{"line":18,"column":41}},{"start":{"line":18,"column":44},"end":{"line":18,"column":49}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"5":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":35},"end":{"line":21,"column":41}},{"start":{"line":21,"column":44},"end":{"line":21,"column":49}}]}},"code":["define([], function() {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.clamp` which doesn't coerce arguments.","   *","   * @private","   * @param {number} number The number to clamp.","   * @param {number} [lower] The lower bound.","   * @param {number} upper The upper bound.","   * @returns {number} Returns the clamped number.","   */","  function baseClamp(number, lower, upper) {","    if (number === number) {","      if (upper !== undefined) {","        number = number <= upper ? number : upper;","      }","      if (lower !== undefined) {","        number = number >= lower ? number : lower;","      }","    }","    return number;","  }","","  return baseClamp;","});",""],"l":{"1":1,"4":0,"15":1,"16":0,"17":0,"18":0,"20":0,"21":0,"24":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseClone.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseClone.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":269},"end":{"line":1,"column":462}}},"2":{"name":"baseClone","line":65,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":76}}},"3":{"name":"(anonymous_3)","line":110,"loc":{"start":{"line":110,"column":30},"end":{"line":110,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":122,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":21,"column":38}},"4":{"start":{"line":23,"column":2},"end":{"line":33,"column":41}},"5":{"start":{"line":36,"column":2},"end":{"line":36,"column":25}},"6":{"start":{"line":37,"column":2},"end":{"line":47,"column":61}},"7":{"start":{"line":48,"column":2},"end":{"line":49,"column":36}},"8":{"start":{"line":65,"column":2},"end":{"line":119,"column":3}},"9":{"start":{"line":66,"column":4},"end":{"line":66,"column":15}},"10":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"11":{"start":{"line":68,"column":6},"end":{"line":68,"column":82}},"12":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"13":{"start":{"line":71,"column":6},"end":{"line":71,"column":20}},"14":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"15":{"start":{"line":74,"column":6},"end":{"line":74,"column":19}},"16":{"start":{"line":76,"column":4},"end":{"line":76,"column":31}},"17":{"start":{"line":77,"column":4},"end":{"line":100,"column":5}},"18":{"start":{"line":78,"column":6},"end":{"line":78,"column":37}},"19":{"start":{"line":79,"column":6},"end":{"line":81,"column":7}},"20":{"start":{"line":80,"column":8},"end":{"line":80,"column":40}},"21":{"start":{"line":83,"column":6},"end":{"line":84,"column":51}},"22":{"start":{"line":86,"column":6},"end":{"line":88,"column":7}},"23":{"start":{"line":87,"column":8},"end":{"line":87,"column":42}},"24":{"start":{"line":89,"column":6},"end":{"line":99,"column":7}},"25":{"start":{"line":90,"column":8},"end":{"line":90,"column":54}},"26":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"27":{"start":{"line":92,"column":10},"end":{"line":92,"column":63}},"28":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"29":{"start":{"line":96,"column":10},"end":{"line":96,"column":37}},"30":{"start":{"line":98,"column":8},"end":{"line":98,"column":63}},"31":{"start":{"line":102,"column":4},"end":{"line":102,"column":33}},"32":{"start":{"line":103,"column":4},"end":{"line":103,"column":35}},"33":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"34":{"start":{"line":105,"column":6},"end":{"line":105,"column":21}},"35":{"start":{"line":107,"column":4},"end":{"line":107,"column":29}},"36":{"start":{"line":109,"column":4},"end":{"line":109,"column":72}},"37":{"start":{"line":110,"column":4},"end":{"line":117,"column":7}},"38":{"start":{"line":111,"column":6},"end":{"line":114,"column":7}},"39":{"start":{"line":112,"column":8},"end":{"line":112,"column":23}},"40":{"start":{"line":113,"column":8},"end":{"line":113,"column":30}},"41":{"start":{"line":116,"column":6},"end":{"line":116,"column":99}},"42":{"start":{"line":118,"column":4},"end":{"line":118,"column":18}},"43":{"start":{"line":121,"column":2},"end":{"line":121,"column":19}}},"branchMap":{"1":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"2":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":24},"end":{"line":68,"column":61}},{"start":{"line":68,"column":64},"end":{"line":68,"column":81}}]},"3":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"4":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"5":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"6":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"7":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":19},"end":{"line":84,"column":33}},{"start":{"line":84,"column":37},"end":{"line":84,"column":50}}]},"8":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":6}},{"start":{"line":86,"column":6},"end":{"line":86,"column":6}}]},"9":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":6}},{"start":{"line":89,"column":6},"end":{"line":89,"column":6}}]},"10":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":10},"end":{"line":89,"column":26}},{"start":{"line":89,"column":30},"end":{"line":89,"column":44}},{"start":{"line":89,"column":49},"end":{"line":89,"column":55}},{"start":{"line":89,"column":59},"end":{"line":89,"column":66}}]},"11":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":42},"end":{"line":90,"column":44}},{"start":{"line":90,"column":47},"end":{"line":90,"column":52}}]},"12":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":91,"column":8}},{"start":{"line":91,"column":8},"end":{"line":91,"column":8}}]},"13":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"14":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":26},"end":{"line":96,"column":31}},{"start":{"line":96,"column":34},"end":{"line":96,"column":36}}]},"15":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":9}},{"start":{"line":102,"column":14},"end":{"line":102,"column":31}}]},"16":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"17":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":24},"end":{"line":109,"column":33}},{"start":{"line":109,"column":36},"end":{"line":109,"column":71}}]},"18":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":46},"end":{"line":109,"column":56}},{"start":{"line":109,"column":59},"end":{"line":109,"column":63}}]},"19":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":14},"end":{"line":110,"column":19}},{"start":{"line":110,"column":23},"end":{"line":110,"column":28}}]},"20":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":6}},{"start":{"line":111,"column":6},"end":{"line":111,"column":6}}]}},"code":["define(['./_Stack', './_arrayEach', './_assignValue', './_baseAssign', './_cloneBuffer', './_copyArray', './_copySymbols', './_getAllKeys', './_getTag', './_initCloneArray', './_initCloneByTag', './_initCloneObject', './isArray', './isBuffer', './isObject', './keys'], function(Stack, arrayEach, assignValue, baseAssign, cloneBuffer, copyArray, copySymbols, getAllKeys, getTag, initCloneArray, initCloneByTag, initCloneObject, isArray, isBuffer, isObject, keys) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** `Object#toString` result references. */","  var argsTag = '[object Arguments]',","      arrayTag = '[object Array]',","      boolTag = '[object Boolean]',","      dateTag = '[object Date]',","      errorTag = '[object Error]',","      funcTag = '[object Function]',","      genTag = '[object GeneratorFunction]',","      mapTag = '[object Map]',","      numberTag = '[object Number]',","      objectTag = '[object Object]',","      regexpTag = '[object RegExp]',","      setTag = '[object Set]',","      stringTag = '[object String]',","      symbolTag = '[object Symbol]',","      weakMapTag = '[object WeakMap]';","","  var arrayBufferTag = '[object ArrayBuffer]',","      dataViewTag = '[object DataView]',","      float32Tag = '[object Float32Array]',","      float64Tag = '[object Float64Array]',","      int8Tag = '[object Int8Array]',","      int16Tag = '[object Int16Array]',","      int32Tag = '[object Int32Array]',","      uint8Tag = '[object Uint8Array]',","      uint8ClampedTag = '[object Uint8ClampedArray]',","      uint16Tag = '[object Uint16Array]',","      uint32Tag = '[object Uint32Array]';","","  /** Used to identify `toStringTag` values supported by `_.clone`. */","  var cloneableTags = {};","  cloneableTags[argsTag] = cloneableTags[arrayTag] =","  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =","  cloneableTags[boolTag] = cloneableTags[dateTag] =","  cloneableTags[float32Tag] = cloneableTags[float64Tag] =","  cloneableTags[int8Tag] = cloneableTags[int16Tag] =","  cloneableTags[int32Tag] = cloneableTags[mapTag] =","  cloneableTags[numberTag] = cloneableTags[objectTag] =","  cloneableTags[regexpTag] = cloneableTags[setTag] =","  cloneableTags[stringTag] = cloneableTags[symbolTag] =","  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =","  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;","  cloneableTags[errorTag] = cloneableTags[funcTag] =","  cloneableTags[weakMapTag] = false;","","  /**","   * The base implementation of `_.clone` and `_.cloneDeep` which tracks","   * traversed objects.","   *","   * @private","   * @param {*} value The value to clone.","   * @param {boolean} [isDeep] Specify a deep clone.","   * @param {boolean} [isFull] Specify a clone including symbols.","   * @param {Function} [customizer] The function to customize cloning.","   * @param {string} [key] The key of `value`.","   * @param {Object} [object] The parent object of `value`.","   * @param {Object} [stack] Tracks traversed objects and their clone counterparts.","   * @returns {*} Returns the cloned value.","   */","  function baseClone(value, isDeep, isFull, customizer, key, object, stack) {","    var result;","    if (customizer) {","      result = object ? customizer(value, key, object, stack) : customizer(value);","    }","    if (result !== undefined) {","      return result;","    }","    if (!isObject(value)) {","      return value;","    }","    var isArr = isArray(value);","    if (isArr) {","      result = initCloneArray(value);","      if (!isDeep) {","        return copyArray(value, result);","      }","    } else {","      var tag = getTag(value),","          isFunc = tag == funcTag || tag == genTag;","","      if (isBuffer(value)) {","        return cloneBuffer(value, isDeep);","      }","      if (tag == objectTag || tag == argsTag || (isFunc && !object)) {","        result = initCloneObject(isFunc ? {} : value);","        if (!isDeep) {","          return copySymbols(value, baseAssign(result, value));","        }","      } else {","        if (!cloneableTags[tag]) {","          return object ? value : {};","        }","        result = initCloneByTag(value, tag, baseClone, isDeep);","      }","    }","    // Check for circular references and return its corresponding clone.","    stack || (stack = new Stack);","    var stacked = stack.get(value);","    if (stacked) {","      return stacked;","    }","    stack.set(value, result);","","    var props = isArr ? undefined : (isFull ? getAllKeys : keys)(value);","    arrayEach(props || value, function(subValue, key) {","      if (props) {","        key = subValue;","        subValue = value[key];","      }","      // Recursively populate clone (susceptible to call stack limits).","      assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));","    });","    return result;","  }","","  return baseClone;","});",""],"l":{"1":1,"4":0,"7":0,"23":0,"36":0,"37":0,"48":0,"65":1,"66":0,"67":0,"68":0,"70":0,"71":0,"73":0,"74":0,"76":0,"77":0,"78":0,"79":0,"80":0,"83":0,"86":0,"87":0,"89":0,"90":0,"91":0,"92":0,"95":0,"96":0,"98":0,"102":0,"103":0,"104":0,"105":0,"107":0,"109":0,"110":0,"111":0,"112":0,"113":0,"116":0,"118":0,"121":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseConforms.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseConforms.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":40},"end":{"line":1,"column":71}}},"2":{"name":"baseConforms","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":32}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":15,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":29}},"4":{"start":{"line":12,"column":4},"end":{"line":14,"column":6}},"5":{"start":{"line":13,"column":6},"end":{"line":13,"column":51}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":22}}},"branchMap":{},"code":["define(['./_baseConformsTo', './keys'], function(baseConformsTo, keys) {","","  /**","   * The base implementation of `_.conforms` which doesn't clone `source`.","   *","   * @private","   * @param {Object} source The object of property predicates to conform to.","   * @returns {Function} Returns the new spec function.","   */","  function baseConforms(source) {","    var props = keys(source);","    return function(object) {","      return baseConformsTo(object, source, props);","    };","  }","","  return baseConforms;","});",""],"l":{"1":1,"10":1,"11":0,"12":0,"13":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseConformsTo.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseConformsTo.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseConformsTo","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":33,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":14,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":30}},"5":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"6":{"start":{"line":17,"column":6},"end":{"line":17,"column":21}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":28}},"8":{"start":{"line":20,"column":4},"end":{"line":28,"column":5}},"9":{"start":{"line":21,"column":6},"end":{"line":23,"column":30}},"10":{"start":{"line":25,"column":6},"end":{"line":27,"column":7}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":21}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":16}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":6}},{"start":{"line":25,"column":6},"end":{"line":25,"column":6}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":11},"end":{"line":25,"column":30}},{"start":{"line":25,"column":34},"end":{"line":25,"column":50}},{"start":{"line":25,"column":55},"end":{"line":25,"column":72}}]}},"code":["define([], function() {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.conformsTo` which accepts `props` to check.","   *","   * @private","   * @param {Object} object The object to inspect.","   * @param {Object} source The object of property predicates to conform to.","   * @returns {boolean} Returns `true` if `object` conforms, else `false`.","   */","  function baseConformsTo(object, source, props) {","    var length = props.length;","    if (object == null) {","      return !length;","    }","    object = Object(object);","    while (length--) {","      var key = props[length],","          predicate = source[key],","          value = object[key];","","      if ((value === undefined && !(key in object)) || !predicate(value)) {","        return false;","      }","    }","    return true;","  }","","  return baseConformsTo;","});",""],"l":{"1":1,"4":0,"14":1,"15":0,"16":0,"17":0,"19":0,"20":0,"21":0,"25":0,"26":0,"29":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseCreate.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseCreate.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":42}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":20},"end":{"line":17,"column":31}}},"3":{"name":"object","line":18,"loc":{"start":{"line":18,"column":4},"end":{"line":18,"column":22}}},"4":{"name":"(anonymous_4)","line":19,"loc":{"start":{"line":19,"column":11},"end":{"line":19,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":34,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":35}},"4":{"start":{"line":17,"column":2},"end":{"line":31,"column":7}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":24}},"6":{"start":{"line":19,"column":4},"end":{"line":30,"column":6}},"7":{"start":{"line":20,"column":6},"end":{"line":22,"column":7}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":18}},"9":{"start":{"line":23,"column":6},"end":{"line":25,"column":7}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":35}},"11":{"start":{"line":26,"column":6},"end":{"line":26,"column":31}},"12":{"start":{"line":27,"column":6},"end":{"line":27,"column":30}},"13":{"start":{"line":28,"column":6},"end":{"line":28,"column":35}},"14":{"start":{"line":29,"column":6},"end":{"line":29,"column":20}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":20}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":6}},{"start":{"line":23,"column":6},"end":{"line":23,"column":6}}]}},"code":["define(['./isObject'], function(isObject) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Built-in value references. */","  var objectCreate = Object.create;","","  /**","   * The base implementation of `_.create` without support for assigning","   * properties to the created object.","   *","   * @private","   * @param {Object} proto The object to inherit from.","   * @returns {Object} Returns the new object.","   */","  var baseCreate = (function() {","    function object() {}","    return function(proto) {","      if (!isObject(proto)) {","        return {};","      }","      if (objectCreate) {","        return objectCreate(proto);","      }","      object.prototype = proto;","      var result = new object;","      object.prototype = undefined;","      return result;","    };","  }());","","  return baseCreate;","});",""],"l":{"1":1,"4":0,"7":0,"17":0,"18":1,"19":0,"20":0,"21":0,"23":0,"24":0,"26":0,"27":0,"28":0,"29":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseDelay.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseDelay.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseDelay","line":19,"loc":{"start":{"line":19,"column":2},"end":{"line":19,"column":39}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":22},"end":{"line":23,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":46}},"4":{"start":{"line":19,"column":2},"end":{"line":24,"column":3}},"5":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"6":{"start":{"line":21,"column":6},"end":{"line":21,"column":43}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":73}},"8":{"start":{"line":23,"column":35},"end":{"line":23,"column":63}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":19}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]}},"code":["define([], function() {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Error message constants. */","  var FUNC_ERROR_TEXT = 'Expected a function';","","  /**","   * The base implementation of `_.delay` and `_.defer` which accepts `args`","   * to provide to `func`.","   *","   * @private","   * @param {Function} func The function to delay.","   * @param {number} wait The number of milliseconds to delay invocation.","   * @param {Array} args The arguments to provide to `func`.","   * @returns {number|Object} Returns the timer id or timeout object.","   */","  function baseDelay(func, wait, args) {","    if (typeof func != 'function') {","      throw new TypeError(FUNC_ERROR_TEXT);","    }","    return setTimeout(function() { func.apply(undefined, args); }, wait);","  }","","  return baseDelay;","});",""],"l":{"1":1,"4":0,"7":0,"19":1,"20":0,"21":0,"23":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseDifference.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseDifference.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":114},"end":{"line":1,"column":198}}},"2":{"name":"baseDifference","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":63}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":63,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":29}},"3":{"start":{"line":17,"column":2},"end":{"line":60,"column":3}},"4":{"start":{"line":18,"column":4},"end":{"line":23,"column":37}},"5":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"6":{"start":{"line":26,"column":6},"end":{"line":26,"column":20}},"7":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"8":{"start":{"line":29,"column":6},"end":{"line":29,"column":53}},"9":{"start":{"line":31,"column":4},"end":{"line":39,"column":5}},"10":{"start":{"line":32,"column":6},"end":{"line":32,"column":35}},"11":{"start":{"line":33,"column":6},"end":{"line":33,"column":23}},"12":{"start":{"line":35,"column":9},"end":{"line":39,"column":5}},"13":{"start":{"line":36,"column":6},"end":{"line":36,"column":26}},"14":{"start":{"line":37,"column":6},"end":{"line":37,"column":23}},"15":{"start":{"line":38,"column":6},"end":{"line":38,"column":36}},"16":{"start":{"line":40,"column":4},"end":{"line":58,"column":5}},"17":{"start":{"line":41,"column":4},"end":{"line":58,"column":5}},"18":{"start":{"line":42,"column":6},"end":{"line":43,"column":56}},"19":{"start":{"line":45,"column":6},"end":{"line":45,"column":54}},"20":{"start":{"line":46,"column":6},"end":{"line":57,"column":7}},"21":{"start":{"line":47,"column":8},"end":{"line":47,"column":39}},"22":{"start":{"line":48,"column":8},"end":{"line":52,"column":9}},"23":{"start":{"line":49,"column":10},"end":{"line":51,"column":11}},"24":{"start":{"line":50,"column":12},"end":{"line":50,"column":27}},"25":{"start":{"line":53,"column":8},"end":{"line":53,"column":27}},"26":{"start":{"line":55,"column":11},"end":{"line":57,"column":7}},"27":{"start":{"line":56,"column":8},"end":{"line":56,"column":27}},"28":{"start":{"line":59,"column":4},"end":{"line":59,"column":18}},"29":{"start":{"line":62,"column":2},"end":{"line":62,"column":24}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":9},"end":{"line":35,"column":9}},{"start":{"line":35,"column":9},"end":{"line":35,"column":9}}]},"5":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":32},"end":{"line":43,"column":47}},{"start":{"line":43,"column":50},"end":{"line":43,"column":55}}]},"6":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":44},"end":{"line":45,"column":49}},{"start":{"line":45,"column":52},"end":{"line":45,"column":53}}]},"7":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":15},"end":{"line":45,"column":25}},{"start":{"line":45,"column":29},"end":{"line":45,"column":40}}]},"8":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"9":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":10},"end":{"line":46,"column":18}},{"start":{"line":46,"column":22},"end":{"line":46,"column":43}}]},"10":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":10},"end":{"line":49,"column":10}},{"start":{"line":49,"column":10},"end":{"line":49,"column":10}}]},"11":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":11},"end":{"line":55,"column":11}},{"start":{"line":55,"column":11},"end":{"line":55,"column":11}}]}},"code":["define(['./_SetCache', './_arrayIncludes', './_arrayIncludesWith', './_arrayMap', './_baseUnary', './_cacheHas'], function(SetCache, arrayIncludes, arrayIncludesWith, arrayMap, baseUnary, cacheHas) {","","  /** Used as the size to enable large array optimizations. */","  var LARGE_ARRAY_SIZE = 200;","","  /**","   * The base implementation of methods like `_.difference` without support","   * for excluding multiple arrays or iteratee shorthands.","   *","   * @private","   * @param {Array} array The array to inspect.","   * @param {Array} values The values to exclude.","   * @param {Function} [iteratee] The iteratee invoked per element.","   * @param {Function} [comparator] The comparator invoked per element.","   * @returns {Array} Returns the new array of filtered values.","   */","  function baseDifference(array, values, iteratee, comparator) {","    var index = -1,","        includes = arrayIncludes,","        isCommon = true,","        length = array.length,","        result = [],","        valuesLength = values.length;","","    if (!length) {","      return result;","    }","    if (iteratee) {","      values = arrayMap(values, baseUnary(iteratee));","    }","    if (comparator) {","      includes = arrayIncludesWith;","      isCommon = false;","    }","    else if (values.length >= LARGE_ARRAY_SIZE) {","      includes = cacheHas;","      isCommon = false;","      values = new SetCache(values);","    }","    outer:","    while (++index < length) {","      var value = array[index],","          computed = iteratee ? iteratee(value) : value;","","      value = (comparator || value !== 0) ? value : 0;","      if (isCommon && computed === computed) {","        var valuesIndex = valuesLength;","        while (valuesIndex--) {","          if (values[valuesIndex] === computed) {","            continue outer;","          }","        }","        result.push(value);","      }","      else if (!includes(values, computed, comparator)) {","        result.push(value);","      }","    }","    return result;","  }","","  return baseDifference;","});",""],"l":{"1":1,"4":0,"17":1,"18":0,"25":0,"26":0,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"40":0,"41":0,"42":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"53":0,"55":0,"56":0,"59":0,"62":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseEach.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseEach.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":47},"end":{"line":1,"column":84}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":14,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":44}},"3":{"start":{"line":13,"column":2},"end":{"line":13,"column":18}}},"branchMap":{},"code":["define(['./_baseForOwn', './_createBaseEach'], function(baseForOwn, createBaseEach) {","","  /**","   * The base implementation of `_.forEach` without support for iteratee shorthands.","   *","   * @private","   * @param {Array|Object} collection The collection to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @returns {Array|Object} Returns `collection`.","   */","  var baseEach = createBaseEach(baseForOwn);","","  return baseEach;","});",""],"l":{"1":1,"11":0,"13":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseEachRight.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseEachRight.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":52},"end":{"line":1,"column":94}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":14,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":60}},"3":{"start":{"line":13,"column":2},"end":{"line":13,"column":23}}},"branchMap":{},"code":["define(['./_baseForOwnRight', './_createBaseEach'], function(baseForOwnRight, createBaseEach) {","","  /**","   * The base implementation of `_.forEachRight` without support for iteratee shorthands.","   *","   * @private","   * @param {Array|Object} collection The collection to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @returns {Array|Object} Returns `collection`.","   */","  var baseEachRight = createBaseEach(baseForOwnRight, true);","","  return baseEachRight;","});",""],"l":{"1":1,"11":0,"13":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseEvery.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseEvery.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":24},"end":{"line":1,"column":43}}},"2":{"name":"baseEvery","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":44}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":19,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":22}},"4":{"start":{"line":14,"column":4},"end":{"line":17,"column":7}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":53}},"6":{"start":{"line":16,"column":6},"end":{"line":16,"column":20}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":19}}},"branchMap":{},"code":["define(['./_baseEach'], function(baseEach) {","","  /**","   * The base implementation of `_.every` without support for iteratee shorthands.","   *","   * @private","   * @param {Array|Object} collection The collection to iterate over.","   * @param {Function} predicate The function invoked per iteration.","   * @returns {boolean} Returns `true` if all elements pass the predicate check,","   *  else `false`","   */","  function baseEvery(collection, predicate) {","    var result = true;","    baseEach(collection, function(value, index, collection) {","      result = !!predicate(value, index, collection);","      return result;","    });","    return result;","  }","","  return baseEvery;","});",""],"l":{"1":1,"12":1,"13":0,"14":0,"15":0,"16":0,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseExtremum.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseExtremum.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":42}}},"2":{"name":"baseExtremum","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":36,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":16,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":17,"column":4},"end":{"line":18,"column":30}},"5":{"start":{"line":20,"column":4},"end":{"line":31,"column":5}},"6":{"start":{"line":21,"column":6},"end":{"line":22,"column":36}},"7":{"start":{"line":24,"column":6},"end":{"line":30,"column":7}},"8":{"start":{"line":28,"column":8},"end":{"line":29,"column":27}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":18}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":22}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":6}},{"start":{"line":24,"column":6},"end":{"line":24,"column":6}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":10},"end":{"line":24,"column":25}},{"start":{"line":24,"column":30},"end":{"line":26,"column":43}}]},"3":{"line":24,"type":"cond-expr","locations":[{"start":{"line":25,"column":15},"end":{"line":25,"column":56}},{"start":{"line":26,"column":14},"end":{"line":26,"column":43}}]},"4":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":15},"end":{"line":25,"column":34}},{"start":{"line":25,"column":38},"end":{"line":25,"column":56}}]}},"code":["define(['./isSymbol'], function(isSymbol) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of methods like `_.max` and `_.min` which accepts a","   * `comparator` to determine the extremum value.","   *","   * @private","   * @param {Array} array The array to iterate over.","   * @param {Function} iteratee The iteratee invoked per iteration.","   * @param {Function} comparator The comparator used to compare values.","   * @returns {*} Returns the extremum value.","   */","  function baseExtremum(array, iteratee, comparator) {","    var index = -1,","        length = array.length;","","    while (++index < length) {","      var value = array[index],","          current = iteratee(value);","","      if (current != null && (computed === undefined","            ? (current === current && !isSymbol(current))","            : comparator(current, computed)","          )) {","        var computed = current,","            result = value;","      }","    }","    return result;","  }","","  return baseExtremum;","});",""],"l":{"1":1,"4":0,"16":1,"17":0,"20":0,"21":0,"24":0,"28":0,"32":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFill.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFill.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":38},"end":{"line":1,"column":68}}},"2":{"name":"baseFill","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":35,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":16,"column":2},"end":{"line":32,"column":3}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":30}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":29}},"6":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"7":{"start":{"line":21,"column":6},"end":{"line":21,"column":53}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":72}},"9":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"10":{"start":{"line":25,"column":6},"end":{"line":25,"column":20}},"11":{"start":{"line":27,"column":4},"end":{"line":27,"column":42}},"12":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"13":{"start":{"line":29,"column":6},"end":{"line":29,"column":29}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":17}},"15":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":32},"end":{"line":21,"column":33}},{"start":{"line":21,"column":37},"end":{"line":21,"column":51}}]},"3":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":48},"end":{"line":23,"column":54}},{"start":{"line":23,"column":57},"end":{"line":23,"column":71}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":11},"end":{"line":23,"column":28}},{"start":{"line":23,"column":32},"end":{"line":23,"column":44}}]},"5":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"6":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":24},"end":{"line":27,"column":25}},{"start":{"line":27,"column":28},"end":{"line":27,"column":41}}]}},"code":["define(['./toInteger', './toLength'], function(toInteger, toLength) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.fill` without an iteratee call guard.","   *","   * @private","   * @param {Array} array The array to fill.","   * @param {*} value The value to fill `array` with.","   * @param {number} [start=0] The start position.","   * @param {number} [end=array.length] The end position.","   * @returns {Array} Returns `array`.","   */","  function baseFill(array, value, start, end) {","    var length = array.length;","","    start = toInteger(start);","    if (start < 0) {","      start = -start > length ? 0 : (length + start);","    }","    end = (end === undefined || end > length) ? length : toInteger(end);","    if (end < 0) {","      end += length;","    }","    end = start > end ? 0 : toLength(end);","    while (start < end) {","      array[start++] = value;","    }","    return array;","  }","","  return baseFill;","});",""],"l":{"1":1,"4":0,"16":1,"17":0,"19":0,"20":0,"21":0,"23":0,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFilter.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFilter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":24},"end":{"line":1,"column":43}}},"2":{"name":"baseFilter","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":45}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":25},"end":{"line":13,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":19,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":20}},"4":{"start":{"line":13,"column":4},"end":{"line":17,"column":7}},"5":{"start":{"line":14,"column":6},"end":{"line":16,"column":7}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":27}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":20}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":6}},{"start":{"line":14,"column":6},"end":{"line":14,"column":6}}]}},"code":["define(['./_baseEach'], function(baseEach) {","","  /**","   * The base implementation of `_.filter` without support for iteratee shorthands.","   *","   * @private","   * @param {Array|Object} collection The collection to iterate over.","   * @param {Function} predicate The function invoked per iteration.","   * @returns {Array} Returns the new filtered array.","   */","  function baseFilter(collection, predicate) {","    var result = [];","    baseEach(collection, function(value, index, collection) {","      if (predicate(value, index, collection)) {","        result.push(value);","      }","    });","    return result;","  }","","  return baseFilter;","});",""],"l":{"1":1,"11":1,"12":0,"13":0,"14":0,"15":0,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFindIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFindIndex.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseFindIndex","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":3}},"2":{"start":{"line":14,"column":2},"end":{"line":24,"column":3}},"3":{"start":{"line":15,"column":4},"end":{"line":16,"column":49}},"4":{"start":{"line":18,"column":4},"end":{"line":22,"column":5}},"5":{"start":{"line":19,"column":6},"end":{"line":21,"column":7}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":21}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":14}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":23}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":41},"end":{"line":16,"column":42}},{"start":{"line":16,"column":45},"end":{"line":16,"column":47}}]},"2":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":24},"end":{"line":18,"column":31}},{"start":{"line":18,"column":34},"end":{"line":18,"column":50}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":6}},{"start":{"line":19,"column":6},"end":{"line":19,"column":6}}]}},"code":["define([], function() {","","  /**","   * The base implementation of `_.findIndex` and `_.findLastIndex` without","   * support for iteratee shorthands.","   *","   * @private","   * @param {Array} array The array to inspect.","   * @param {Function} predicate The function invoked per iteration.","   * @param {number} fromIndex The index to search from.","   * @param {boolean} [fromRight] Specify iterating from right to left.","   * @returns {number} Returns the index of the matched value, else `-1`.","   */","  function baseFindIndex(array, predicate, fromIndex, fromRight) {","    var length = array.length,","        index = fromIndex + (fromRight ? 1 : -1);","","    while ((fromRight ? index-- : ++index < length)) {","      if (predicate(array[index], index, array)) {","        return index;","      }","    }","    return -1;","  }","","  return baseFindIndex;","});",""],"l":{"1":1,"14":1,"15":0,"18":0,"19":0,"20":0,"23":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFindKey.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFindKey.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseFindKey","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":56}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":25},"end":{"line":16,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":26,"column":3}},"2":{"start":{"line":14,"column":2},"end":{"line":23,"column":3}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":15}},"4":{"start":{"line":16,"column":4},"end":{"line":21,"column":7}},"5":{"start":{"line":17,"column":6},"end":{"line":20,"column":7}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":21}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":21}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":18}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":21}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":6}},{"start":{"line":17,"column":6},"end":{"line":17,"column":6}}]}},"code":["define([], function() {","","  /**","   * The base implementation of methods like `_.findKey` and `_.findLastKey`,","   * without support for iteratee shorthands, which iterates over `collection`","   * using `eachFunc`.","   *","   * @private","   * @param {Array|Object} collection The collection to inspect.","   * @param {Function} predicate The function invoked per iteration.","   * @param {Function} eachFunc The function to iterate over `collection`.","   * @returns {*} Returns the found element or its key, else `undefined`.","   */","  function baseFindKey(collection, predicate, eachFunc) {","    var result;","    eachFunc(collection, function(value, key, collection) {","      if (predicate(value, key, collection)) {","        result = key;","        return false;","      }","    });","    return result;","  }","","  return baseFindKey;","});",""],"l":{"1":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"22":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFlatten.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFlatten.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":45},"end":{"line":1,"column":80}}},"2":{"name":"baseFlatten","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":66}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":38,"column":3}},"2":{"start":{"line":14,"column":2},"end":{"line":35,"column":3}},"3":{"start":{"line":15,"column":4},"end":{"line":16,"column":30}},"4":{"start":{"line":18,"column":4},"end":{"line":18,"column":45}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":28}},"6":{"start":{"line":21,"column":4},"end":{"line":33,"column":5}},"7":{"start":{"line":22,"column":6},"end":{"line":22,"column":31}},"8":{"start":{"line":23,"column":6},"end":{"line":32,"column":7}},"9":{"start":{"line":24,"column":8},"end":{"line":29,"column":9}},"10":{"start":{"line":26,"column":10},"end":{"line":26,"column":69}},"11":{"start":{"line":28,"column":10},"end":{"line":28,"column":35}},"12":{"start":{"line":30,"column":13},"end":{"line":32,"column":7}},"13":{"start":{"line":31,"column":8},"end":{"line":31,"column":38}},"14":{"start":{"line":34,"column":4},"end":{"line":34,"column":18}},"15":{"start":{"line":37,"column":2},"end":{"line":37,"column":21}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":13}},{"start":{"line":18,"column":18},"end":{"line":18,"column":43}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":10}},{"start":{"line":19,"column":15},"end":{"line":19,"column":26}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":6}},{"start":{"line":23,"column":6},"end":{"line":23,"column":6}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":10},"end":{"line":23,"column":19}},{"start":{"line":23,"column":23},"end":{"line":23,"column":39}}]},"5":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"6":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":13},"end":{"line":30,"column":13}},{"start":{"line":30,"column":13},"end":{"line":30,"column":13}}]}},"code":["define(['./_arrayPush', './_isFlattenable'], function(arrayPush, isFlattenable) {","","  /**","   * The base implementation of `_.flatten` with support for restricting flattening.","   *","   * @private","   * @param {Array} array The array to flatten.","   * @param {number} depth The maximum recursion depth.","   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.","   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.","   * @param {Array} [result=[]] The initial result value.","   * @returns {Array} Returns the new flattened array.","   */","  function baseFlatten(array, depth, predicate, isStrict, result) {","    var index = -1,","        length = array.length;","","    predicate || (predicate = isFlattenable);","    result || (result = []);","","    while (++index < length) {","      var value = array[index];","      if (depth > 0 && predicate(value)) {","        if (depth > 1) {","          // Recursively flatten arrays (susceptible to call stack limits).","          baseFlatten(value, depth - 1, predicate, isStrict, result);","        } else {","          arrayPush(result, value);","        }","      } else if (!isStrict) {","        result[result.length] = value;","      }","    }","    return result;","  }","","  return baseFlatten;","});",""],"l":{"1":1,"14":1,"15":0,"18":0,"19":0,"21":0,"22":0,"23":0,"24":0,"26":0,"28":0,"30":0,"31":0,"34":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFor.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFor.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":29},"end":{"line":1,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}},"2":{"start":{"line":14,"column":2},"end":{"line":14,"column":32}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":17}}},"branchMap":{},"code":["define(['./_createBaseFor'], function(createBaseFor) {","","  /**","   * The base implementation of `baseForOwn` which iterates over `object`","   * properties returned by `keysFunc` and invokes `iteratee` for each property.","   * Iteratee functions may exit iteration early by explicitly returning `false`.","   *","   * @private","   * @param {Object} object The object to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @param {Function} keysFunc The function to get the keys of `object`.","   * @returns {Object} Returns `object`.","   */","  var baseFor = createBaseFor();","","  return baseFor;","});",""],"l":{"1":1,"14":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseForOwn.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseForOwn.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":33},"end":{"line":1,"column":57}}},"2":{"name":"baseForOwn","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":53}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":20}}},"branchMap":{"1":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":11},"end":{"line":12,"column":17}},{"start":{"line":12,"column":21},"end":{"line":12,"column":52}}]}},"code":["define(['./_baseFor', './keys'], function(baseFor, keys) {","","  /**","   * The base implementation of `_.forOwn` without support for iteratee shorthands.","   *","   * @private","   * @param {Object} object The object to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @returns {Object} Returns `object`.","   */","  function baseForOwn(object, iteratee) {","    return object && baseFor(object, iteratee, keys);","  }","","  return baseForOwn;","});",""],"l":{"1":1,"11":1,"12":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseForOwnRight.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseForOwnRight.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":38},"end":{"line":1,"column":67}}},"2":{"name":"baseForOwnRight","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":58}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":25}}},"branchMap":{"1":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":11},"end":{"line":12,"column":17}},{"start":{"line":12,"column":21},"end":{"line":12,"column":57}}]}},"code":["define(['./_baseForRight', './keys'], function(baseForRight, keys) {","","  /**","   * The base implementation of `_.forOwnRight` without support for iteratee shorthands.","   *","   * @private","   * @param {Object} object The object to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @returns {Object} Returns `object`.","   */","  function baseForOwnRight(object, iteratee) {","    return object && baseForRight(object, iteratee, keys);","  }","","  return baseForOwnRight;","});",""],"l":{"1":1,"11":1,"12":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseForRight.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseForRight.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":29},"end":{"line":1,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":41}},"3":{"start":{"line":15,"column":2},"end":{"line":15,"column":22}}},"branchMap":{},"code":["define(['./_createBaseFor'], function(createBaseFor) {","","  /**","   * This function is like `baseFor` except that it iterates over properties","   * in the opposite order.","   *","   * @private","   * @param {Object} object The object to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @param {Function} keysFunc The function to get the keys of `object`.","   * @returns {Object} Returns `object`.","   */","  var baseForRight = createBaseFor(true);","","  return baseForRight;","});",""],"l":{"1":1,"13":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFunctions.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseFunctions.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":43},"end":{"line":1,"column":77}}},"2":{"name":"baseFunctions","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":40}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":30},"end":{"line":13,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":16,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":15,"column":7}},"4":{"start":{"line":14,"column":6},"end":{"line":14,"column":37}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":23}}},"branchMap":{},"code":["define(['./_arrayFilter', './isFunction'], function(arrayFilter, isFunction) {","","  /**","   * The base implementation of `_.functions` which creates an array of","   * `object` function property names filtered from `props`.","   *","   * @private","   * @param {Object} object The object to inspect.","   * @param {Array} props The property names to filter.","   * @returns {Array} Returns the function names.","   */","  function baseFunctions(object, props) {","    return arrayFilter(props, function(key) {","      return isFunction(object[key]);","    });","  }","","  return baseFunctions;","});",""],"l":{"1":1,"12":1,"13":0,"14":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseGetAllKeys.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseGetAllKeys.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":38},"end":{"line":1,"column":67}}},"2":{"name":"baseGetAllKeys","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":3}},"2":{"start":{"line":14,"column":2},"end":{"line":17,"column":3}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":34}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":77}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":24}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":29},"end":{"line":16,"column":35}},{"start":{"line":16,"column":38},"end":{"line":16,"column":76}}]}},"code":["define(['./_arrayPush', './isArray'], function(arrayPush, isArray) {","","  /**","   * The base implementation of `getAllKeys` and `getAllKeysIn` which uses","   * `keysFunc` and `symbolsFunc` to get the enumerable property names and","   * symbols of `object`.","   *","   * @private","   * @param {Object} object The object to query.","   * @param {Function} keysFunc The function to get the keys of `object`.","   * @param {Function} symbolsFunc The function to get the symbols of `object`.","   * @returns {Array} Returns the array of property names and symbols.","   */","  function baseGetAllKeys(object, keysFunc, symbolsFunc) {","    var result = keysFunc(object);","    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));","  }","","  return baseGetAllKeys;","});",""],"l":{"1":1,"14":1,"15":0,"16":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseGet.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseGet.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":48},"end":{"line":1,"column":81}}},"2":{"name":"baseGet","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":14,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":57}},"5":{"start":{"line":17,"column":4},"end":{"line":18,"column":29}},"6":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"7":{"start":{"line":21,"column":6},"end":{"line":21,"column":44}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":59}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":17}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":33},"end":{"line":15,"column":39}},{"start":{"line":15,"column":42},"end":{"line":15,"column":56}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":11},"end":{"line":20,"column":25}},{"start":{"line":20,"column":29},"end":{"line":20,"column":43}}]},"3":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":40},"end":{"line":23,"column":46}},{"start":{"line":23,"column":49},"end":{"line":23,"column":58}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":17}},{"start":{"line":23,"column":21},"end":{"line":23,"column":36}}]}},"code":["define(['./_castPath', './_isKey', './_toKey'], function(castPath, isKey, toKey) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.get` without support for default values.","   *","   * @private","   * @param {Object} object The object to query.","   * @param {Array|string} path The path of the property to get.","   * @returns {*} Returns the resolved value.","   */","  function baseGet(object, path) {","    path = isKey(path, object) ? [path] : castPath(path);","","    var index = 0,","        length = path.length;","","    while (object != null && index < length) {","      object = object[toKey(path[index++])];","    }","    return (index && index == length) ? object : undefined;","  }","","  return baseGet;","});",""],"l":{"1":1,"4":0,"14":1,"15":0,"17":0,"20":0,"21":0,"23":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseGetTag.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseGetTag.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseGetTag","line":20,"loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":25,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":37}},"3":{"start":{"line":11,"column":2},"end":{"line":11,"column":44}},"4":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":38}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":20}}},"branchMap":{},"code":["define([], function() {","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /**","   * Used to resolve the","   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)","   * of values.","   */","  var objectToString = objectProto.toString;","","  /**","   * The base implementation of `getTag`.","   *","   * @private","   * @param {*} value The value to query.","   * @returns {string} Returns the `toStringTag`.","   */","  function baseGetTag(value) {","    return objectToString.call(value);","  }","","  return baseGetTag;","});",""],"l":{"1":1,"4":0,"11":0,"20":1,"21":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseGt.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseGt.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseGt","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":16}}},"branchMap":{},"code":["define([], function() {","","  /**","   * The base implementation of `_.gt` which doesn't coerce arguments.","   *","   * @private","   * @param {*} value The value to compare.","   * @param {*} other The other value to compare.","   * @returns {boolean} Returns `true` if `value` is greater than `other`,","   *  else `false`.","   */","  function baseGt(value, other) {","    return value > other;","  }","","  return baseGt;","});",""],"l":{"1":1,"12":1,"13":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseHasIn.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseHasIn.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseHasIn","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":51}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":19}}},"branchMap":{"1":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":11},"end":{"line":12,"column":25}},{"start":{"line":12,"column":29},"end":{"line":12,"column":50}}]}},"code":["define([], function() {","","  /**","   * The base implementation of `_.hasIn` without support for deep paths.","   *","   * @private","   * @param {Object} [object] The object to query.","   * @param {Array|string} key The key to check.","   * @returns {boolean} Returns `true` if `key` exists, else `false`.","   */","  function baseHasIn(object, key) {","    return object != null && key in Object(object);","  }","","  return baseHasIn;","});",""],"l":{"1":1,"11":1,"12":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseHas.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseHas.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseHas","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":37}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":50}},"4":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":62}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":17}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":11},"end":{"line":18,"column":25}},{"start":{"line":18,"column":29},"end":{"line":18,"column":61}}]}},"code":["define([], function() {","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /** Used to check objects for own properties. */","  var hasOwnProperty = objectProto.hasOwnProperty;","","  /**","   * The base implementation of `_.has` without support for deep paths.","   *","   * @private","   * @param {Object} [object] The object to query.","   * @param {Array|string} key The key to check.","   * @returns {boolean} Returns `true` if `key` exists, else `false`.","   */","  function baseHas(object, key) {","    return object != null && hasOwnProperty.call(object, key);","  }","","  return baseHas;","});",""],"l":{"1":1,"4":0,"7":0,"17":1,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIndexOf.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIndexOf.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":65},"end":{"line":1,"column":115}}},"2":{"name":"baseIndexOf","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":16,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":15,"column":51}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":21}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":46}},{"start":{"line":15,"column":8},"end":{"line":15,"column":50}}]}},"code":["define(['./_baseFindIndex', './_baseIsNaN', './_strictIndexOf'], function(baseFindIndex, baseIsNaN, strictIndexOf) {","","  /**","   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.","   *","   * @private","   * @param {Array} array The array to inspect.","   * @param {*} value The value to search for.","   * @param {number} fromIndex The index to search from.","   * @returns {number} Returns the index of the matched value, else `-1`.","   */","  function baseIndexOf(array, value, fromIndex) {","    return value === value","      ? strictIndexOf(array, value, fromIndex)","      : baseFindIndex(array, baseIsNaN, fromIndex);","  }","","  return baseIndexOf;","});",""],"l":{"1":1,"12":1,"13":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIndexOfWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIndexOfWith.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseIndexOfWith","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":26,"column":3}},"2":{"start":{"line":13,"column":2},"end":{"line":23,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":15,"column":30}},"4":{"start":{"line":17,"column":4},"end":{"line":21,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":20,"column":7}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":21}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":14}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":25}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]}},"code":["define([], function() {","","  /**","   * This function is like `baseIndexOf` except that it accepts a comparator.","   *","   * @private","   * @param {Array} array The array to inspect.","   * @param {*} value The value to search for.","   * @param {number} fromIndex The index to search from.","   * @param {Function} comparator The comparator invoked per element.","   * @returns {number} Returns the index of the matched value, else `-1`.","   */","  function baseIndexOfWith(array, value, fromIndex, comparator) {","    var index = fromIndex - 1,","        length = array.length;","","    while (++index < length) {","      if (comparator(array[index], value)) {","        return index;","      }","    }","    return -1;","  }","","  return baseIndexOfWith;","});",""],"l":{"1":1,"13":1,"14":0,"17":0,"18":0,"19":0,"22":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseInRange.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseInRange.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseInRange","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":5,"column":27}},"3":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":77}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":21}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":11},"end":{"line":17,"column":42}},{"start":{"line":17,"column":46},"end":{"line":17,"column":76}}]}},"code":["define([], function() {","","  /* Built-in method references for those with the same name as other `lodash` methods. */","  var nativeMax = Math.max,","      nativeMin = Math.min;","","  /**","   * The base implementation of `_.inRange` which doesn't coerce arguments.","   *","   * @private","   * @param {number} number The number to check.","   * @param {number} start The start of the range.","   * @param {number} end The end of the range.","   * @returns {boolean} Returns `true` if `number` is in the range, else `false`.","   */","  function baseInRange(number, start, end) {","    return number >= nativeMin(start, end) && number < nativeMax(start, end);","  }","","  return baseInRange;","});",""],"l":{"1":1,"4":0,"16":1,"17":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIntersection.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIntersection.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":114},"end":{"line":1,"column":198}}},"2":{"name":"baseIntersection","line":19,"loc":{"start":{"line":19,"column":2},"end":{"line":19,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":73,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":27}},"4":{"start":{"line":19,"column":2},"end":{"line":70,"column":3}},"5":{"start":{"line":20,"column":4},"end":{"line":26,"column":20}},"6":{"start":{"line":28,"column":4},"end":{"line":37,"column":5}},"7":{"start":{"line":29,"column":6},"end":{"line":29,"column":35}},"8":{"start":{"line":30,"column":6},"end":{"line":32,"column":7}},"9":{"start":{"line":31,"column":8},"end":{"line":31,"column":53}},"10":{"start":{"line":33,"column":6},"end":{"line":33,"column":53}},"11":{"start":{"line":34,"column":6},"end":{"line":36,"column":20}},"12":{"start":{"line":38,"column":4},"end":{"line":38,"column":22}},"13":{"start":{"line":40,"column":4},"end":{"line":41,"column":25}},"14":{"start":{"line":43,"column":4},"end":{"line":68,"column":5}},"15":{"start":{"line":44,"column":4},"end":{"line":68,"column":5}},"16":{"start":{"line":45,"column":6},"end":{"line":46,"column":56}},"17":{"start":{"line":48,"column":6},"end":{"line":48,"column":54}},"18":{"start":{"line":49,"column":6},"end":{"line":67,"column":7}},"19":{"start":{"line":53,"column":8},"end":{"line":53,"column":29}},"20":{"start":{"line":54,"column":8},"end":{"line":62,"column":9}},"21":{"start":{"line":55,"column":10},"end":{"line":55,"column":39}},"22":{"start":{"line":56,"column":10},"end":{"line":61,"column":11}},"23":{"start":{"line":60,"column":12},"end":{"line":60,"column":27}},"24":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"25":{"start":{"line":64,"column":10},"end":{"line":64,"column":30}},"26":{"start":{"line":66,"column":8},"end":{"line":66,"column":27}},"27":{"start":{"line":69,"column":4},"end":{"line":69,"column":18}},"28":{"start":{"line":72,"column":2},"end":{"line":72,"column":26}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":32},"end":{"line":20,"column":49}},{"start":{"line":20,"column":52},"end":{"line":20,"column":65}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":6}},{"start":{"line":30,"column":6},"end":{"line":30,"column":6}}]},"3":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":10},"end":{"line":30,"column":18}},{"start":{"line":30,"column":22},"end":{"line":30,"column":30}}]},"4":{"line":34,"type":"cond-expr","locations":[{"start":{"line":35,"column":10},"end":{"line":35,"column":41}},{"start":{"line":36,"column":10},"end":{"line":36,"column":19}}]},"5":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":25},"end":{"line":34,"column":36}},{"start":{"line":34,"column":41},"end":{"line":34,"column":49}},{"start":{"line":34,"column":54},"end":{"line":34,"column":67}},{"start":{"line":34,"column":71},"end":{"line":34,"column":90}}]},"6":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":23},"end":{"line":35,"column":31}},{"start":{"line":35,"column":35},"end":{"line":35,"column":40}}]},"7":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":11},"end":{"line":44,"column":27}},{"start":{"line":44,"column":31},"end":{"line":44,"column":56}}]},"8":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":32},"end":{"line":46,"column":47}},{"start":{"line":46,"column":50},"end":{"line":46,"column":55}}]},"9":{"line":48,"type":"cond-expr","locations":[{"start":{"line":48,"column":44},"end":{"line":48,"column":49}},{"start":{"line":48,"column":52},"end":{"line":48,"column":53}}]},"10":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":15},"end":{"line":48,"column":25}},{"start":{"line":48,"column":29},"end":{"line":48,"column":40}}]},"11":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"12":{"line":49,"type":"cond-expr","locations":[{"start":{"line":50,"column":14},"end":{"line":50,"column":38}},{"start":{"line":51,"column":14},"end":{"line":51,"column":52}}]},"13":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":10},"end":{"line":56,"column":10}},{"start":{"line":56,"column":10},"end":{"line":56,"column":10}}]},"14":{"line":56,"type":"cond-expr","locations":[{"start":{"line":57,"column":18},"end":{"line":57,"column":43}},{"start":{"line":58,"column":18},"end":{"line":58,"column":66}}]},"15":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]}},"code":["define(['./_SetCache', './_arrayIncludes', './_arrayIncludesWith', './_arrayMap', './_baseUnary', './_cacheHas'], function(SetCache, arrayIncludes, arrayIncludesWith, arrayMap, baseUnary, cacheHas) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /* Built-in method references for those with the same name as other `lodash` methods. */","  var nativeMin = Math.min;","","  /**","   * The base implementation of methods like `_.intersection`, without support","   * for iteratee shorthands, that accepts an array of arrays to inspect.","   *","   * @private","   * @param {Array} arrays The arrays to inspect.","   * @param {Function} [iteratee] The iteratee invoked per element.","   * @param {Function} [comparator] The comparator invoked per element.","   * @returns {Array} Returns the new array of shared values.","   */","  function baseIntersection(arrays, iteratee, comparator) {","    var includes = comparator ? arrayIncludesWith : arrayIncludes,","        length = arrays[0].length,","        othLength = arrays.length,","        othIndex = othLength,","        caches = Array(othLength),","        maxLength = Infinity,","        result = [];","","    while (othIndex--) {","      var array = arrays[othIndex];","      if (othIndex && iteratee) {","        array = arrayMap(array, baseUnary(iteratee));","      }","      maxLength = nativeMin(array.length, maxLength);","      caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))","        ? new SetCache(othIndex && array)","        : undefined;","    }","    array = arrays[0];","","    var index = -1,","        seen = caches[0];","","    outer:","    while (++index < length && result.length < maxLength) {","      var value = array[index],","          computed = iteratee ? iteratee(value) : value;","","      value = (comparator || value !== 0) ? value : 0;","      if (!(seen","            ? cacheHas(seen, computed)","            : includes(result, computed, comparator)","          )) {","        othIndex = othLength;","        while (--othIndex) {","          var cache = caches[othIndex];","          if (!(cache","                ? cacheHas(cache, computed)","                : includes(arrays[othIndex], computed, comparator))","              ) {","            continue outer;","          }","        }","        if (seen) {","          seen.push(computed);","        }","        result.push(value);","      }","    }","    return result;","  }","","  return baseIntersection;","});",""],"l":{"1":1,"4":0,"7":0,"19":1,"20":0,"28":0,"29":0,"30":0,"31":0,"33":0,"34":0,"38":0,"40":0,"43":0,"44":0,"45":0,"48":0,"49":0,"53":0,"54":0,"55":0,"56":0,"60":0,"63":0,"64":0,"66":0,"69":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseInverter.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseInverter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":26},"end":{"line":1,"column":47}}},"2":{"name":"baseInverter","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":63}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":23},"end":{"line":15,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":14,"column":2},"end":{"line":19,"column":3}},"3":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"4":{"start":{"line":16,"column":6},"end":{"line":16,"column":56}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":23}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":22}}},"branchMap":{},"code":["define(['./_baseForOwn'], function(baseForOwn) {","","  /**","   * The base implementation of `_.invert` and `_.invertBy` which inverts","   * `object` with values transformed by `iteratee` and set by `setter`.","   *","   * @private","   * @param {Object} object The object to iterate over.","   * @param {Function} setter The function to set `accumulator` values.","   * @param {Function} iteratee The iteratee to transform values.","   * @param {Object} accumulator The initial inverted object.","   * @returns {Function} Returns `accumulator`.","   */","  function baseInverter(object, setter, iteratee, accumulator) {","    baseForOwn(object, function(value, key, object) {","      setter(accumulator, iteratee(value), key, object);","    });","    return accumulator;","  }","","  return baseInverter;","});",""],"l":{"1":1,"14":1,"15":0,"16":0,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseInvoke.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseInvoke.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":83},"end":{"line":1,"column":137}}},"2":{"name":"baseInvoke","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":16,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":17,"column":4},"end":{"line":21,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":18,"column":28}},"6":{"start":{"line":19,"column":6},"end":{"line":19,"column":36}},"7":{"start":{"line":20,"column":6},"end":{"line":20,"column":24}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":61}},"9":{"start":{"line":23,"column":4},"end":{"line":23,"column":64}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":20}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":32},"end":{"line":22,"column":38}},{"start":{"line":22,"column":41},"end":{"line":22,"column":60}}]},"3":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":26},"end":{"line":23,"column":35}},{"start":{"line":23,"column":38},"end":{"line":23,"column":63}}]}},"code":["define(['./_apply', './_castPath', './_isKey', './last', './_parent', './_toKey'], function(apply, castPath, isKey, last, parent, toKey) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.invoke` without support for individual","   * method arguments.","   *","   * @private","   * @param {Object} object The object to query.","   * @param {Array|string} path The path of the method to invoke.","   * @param {Array} args The arguments to invoke the method with.","   * @returns {*} Returns the result of the invoked method.","   */","  function baseInvoke(object, path, args) {","    if (!isKey(path, object)) {","      path = castPath(path);","      object = parent(object, path);","      path = last(path);","    }","    var func = object == null ? object : object[toKey(path)];","    return func == null ? undefined : apply(func, object, args);","  }","","  return baseInvoke;","});",""],"l":{"1":1,"4":0,"16":1,"17":0,"18":0,"19":0,"20":0,"22":0,"23":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsArguments.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsArguments.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":27},"end":{"line":1,"column":50}}},"2":{"name":"baseIsArguments","line":23,"loc":{"start":{"line":23,"column":2},"end":{"line":23,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":28,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":37}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":37}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":44}},"5":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":72}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":25}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":11},"end":{"line":24,"column":30}},{"start":{"line":24,"column":34},"end":{"line":24,"column":71}}]}},"code":["define(['./isObjectLike'], function(isObjectLike) {","","  /** `Object#toString` result references. */","  var argsTag = '[object Arguments]';","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /**","   * Used to resolve the","   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)","   * of values.","   */","  var objectToString = objectProto.toString;","","  /**","   * The base implementation of `_.isArguments`.","   *","   * @private","   * @param {*} value The value to check.","   * @returns {boolean} Returns `true` if `value` is an `arguments` object,","   */","  function baseIsArguments(value) {","    return isObjectLike(value) && objectToString.call(value) == argsTag;","  }","","  return baseIsArguments;","});",""],"l":{"1":1,"4":0,"7":0,"14":0,"23":1,"24":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsArrayBuffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsArrayBuffer.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":27},"end":{"line":1,"column":50}}},"2":{"name":"baseIsArrayBuffer","line":22,"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":3}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":46}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":37}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":44}},"5":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":79}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":27}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":11},"end":{"line":23,"column":30}},{"start":{"line":23,"column":34},"end":{"line":23,"column":78}}]}},"code":["define(['./isObjectLike'], function(isObjectLike) {","","  var arrayBufferTag = '[object ArrayBuffer]';","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /**","   * Used to resolve the","   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)","   * of values.","   */","  var objectToString = objectProto.toString;","","  /**","   * The base implementation of `_.isArrayBuffer` without Node.js optimizations.","   *","   * @private","   * @param {*} value The value to check.","   * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.","   */","  function baseIsArrayBuffer(value) {","    return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;","  }","","  return baseIsArrayBuffer;","});",""],"l":{"1":1,"3":0,"6":0,"13":0,"22":1,"23":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsDate.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsDate.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":27},"end":{"line":1,"column":50}}},"2":{"name":"baseIsDate","line":23,"loc":{"start":{"line":23,"column":2},"end":{"line":23,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":28,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":32}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":37}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":44}},"5":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":72}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":20}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":11},"end":{"line":24,"column":30}},{"start":{"line":24,"column":34},"end":{"line":24,"column":71}}]}},"code":["define(['./isObjectLike'], function(isObjectLike) {","","  /** `Object#toString` result references. */","  var dateTag = '[object Date]';","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /**","   * Used to resolve the","   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)","   * of values.","   */","  var objectToString = objectProto.toString;","","  /**","   * The base implementation of `_.isDate` without Node.js optimizations.","   *","   * @private","   * @param {*} value The value to check.","   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.","   */","  function baseIsDate(value) {","    return isObjectLike(value) && objectToString.call(value) == dateTag;","  }","","  return baseIsDate;","});",""],"l":{"1":1,"4":0,"7":0,"14":0,"23":1,"24":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsEqualDeep.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsEqualDeep.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":133},"end":{"line":1,"column":229}}},"2":{"name":"baseIsEqualDeep","line":32,"loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":81}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":83,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":31}},"3":{"start":{"line":7,"column":2},"end":{"line":9,"column":36}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":37}},"5":{"start":{"line":15,"column":2},"end":{"line":15,"column":50}},"6":{"start":{"line":32,"column":2},"end":{"line":80,"column":3}},"7":{"start":{"line":33,"column":4},"end":{"line":36,"column":26}},"8":{"start":{"line":38,"column":4},"end":{"line":41,"column":5}},"9":{"start":{"line":39,"column":6},"end":{"line":39,"column":30}},"10":{"start":{"line":40,"column":6},"end":{"line":40,"column":54}},"11":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"12":{"start":{"line":43,"column":6},"end":{"line":43,"column":29}},"13":{"start":{"line":44,"column":6},"end":{"line":44,"column":54}},"14":{"start":{"line":46,"column":4},"end":{"line":48,"column":37}},"15":{"start":{"line":50,"column":4},"end":{"line":56,"column":5}},"16":{"start":{"line":51,"column":6},"end":{"line":53,"column":7}},"17":{"start":{"line":52,"column":8},"end":{"line":52,"column":21}},"18":{"start":{"line":54,"column":6},"end":{"line":54,"column":22}},"19":{"start":{"line":55,"column":6},"end":{"line":55,"column":23}},"20":{"start":{"line":57,"column":4},"end":{"line":62,"column":5}},"21":{"start":{"line":58,"column":6},"end":{"line":58,"column":35}},"22":{"start":{"line":59,"column":6},"end":{"line":61,"column":83}},"23":{"start":{"line":63,"column":4},"end":{"line":74,"column":5}},"24":{"start":{"line":64,"column":6},"end":{"line":65,"column":79}},"25":{"start":{"line":67,"column":6},"end":{"line":73,"column":7}},"26":{"start":{"line":68,"column":8},"end":{"line":69,"column":64}},"27":{"start":{"line":71,"column":8},"end":{"line":71,"column":37}},"28":{"start":{"line":72,"column":8},"end":{"line":72,"column":81}},"29":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"30":{"start":{"line":76,"column":6},"end":{"line":76,"column":19}},"31":{"start":{"line":78,"column":4},"end":{"line":78,"column":33}},"32":{"start":{"line":79,"column":4},"end":{"line":79,"column":78}},"33":{"start":{"line":82,"column":2},"end":{"line":82,"column":25}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"2":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":35},"end":{"line":40,"column":44}},{"start":{"line":40,"column":47},"end":{"line":40,"column":53}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"4":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":35},"end":{"line":44,"column":44}},{"start":{"line":44,"column":47},"end":{"line":44,"column":53}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":17}},{"start":{"line":50,"column":21},"end":{"line":50,"column":37}}]},"7":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":6}},{"start":{"line":51,"column":6},"end":{"line":51,"column":6}}]},"8":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"9":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":17}},{"start":{"line":57,"column":21},"end":{"line":57,"column":30}}]},"10":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":11}},{"start":{"line":58,"column":16},"end":{"line":58,"column":33}}]},"11":{"line":59,"type":"cond-expr","locations":[{"start":{"line":60,"column":10},"end":{"line":60,"column":75}},{"start":{"line":61,"column":10},"end":{"line":61,"column":82}}]},"12":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":14},"end":{"line":59,"column":22}},{"start":{"line":59,"column":26},"end":{"line":59,"column":46}}]},"13":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"14":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":25},"end":{"line":64,"column":33}},{"start":{"line":64,"column":37},"end":{"line":64,"column":79}}]},"15":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":25},"end":{"line":65,"column":33}},{"start":{"line":65,"column":37},"end":{"line":65,"column":78}}]},"16":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":6}},{"start":{"line":67,"column":6},"end":{"line":67,"column":6}}]},"17":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":10},"end":{"line":67,"column":22}},{"start":{"line":67,"column":26},"end":{"line":67,"column":38}}]},"18":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":42},"end":{"line":68,"column":56}},{"start":{"line":68,"column":59},"end":{"line":68,"column":65}}]},"19":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":42},"end":{"line":69,"column":55}},{"start":{"line":69,"column":58},"end":{"line":69,"column":63}}]},"20":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":13}},{"start":{"line":71,"column":18},"end":{"line":71,"column":35}}]},"21":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"22":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":9}},{"start":{"line":78,"column":14},"end":{"line":78,"column":31}}]}},"code":["define(['./_Stack', './_equalArrays', './_equalByTag', './_equalObjects', './_getTag', './isArray', './isBuffer', './isTypedArray'], function(Stack, equalArrays, equalByTag, equalObjects, getTag, isArray, isBuffer, isTypedArray) {","","  /** Used to compose bitmasks for comparison styles. */","  var PARTIAL_COMPARE_FLAG = 2;","","  /** `Object#toString` result references. */","  var argsTag = '[object Arguments]',","      arrayTag = '[object Array]',","      objectTag = '[object Object]';","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /** Used to check objects for own properties. */","  var hasOwnProperty = objectProto.hasOwnProperty;","","  /**","   * A specialized version of `baseIsEqual` for arrays and objects which performs","   * deep comparisons and tracks traversed objects enabling objects with circular","   * references to be compared.","   *","   * @private","   * @param {Object} object The object to compare.","   * @param {Object} other The other object to compare.","   * @param {Function} equalFunc The function to determine equivalents of values.","   * @param {Function} [customizer] The function to customize comparisons.","   * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`","   *  for more details.","   * @param {Object} [stack] Tracks traversed `object` and `other` objects.","   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.","   */","  function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {","    var objIsArr = isArray(object),","        othIsArr = isArray(other),","        objTag = arrayTag,","        othTag = arrayTag;","","    if (!objIsArr) {","      objTag = getTag(object);","      objTag = objTag == argsTag ? objectTag : objTag;","    }","    if (!othIsArr) {","      othTag = getTag(other);","      othTag = othTag == argsTag ? objectTag : othTag;","    }","    var objIsObj = objTag == objectTag,","        othIsObj = othTag == objectTag,","        isSameTag = objTag == othTag;","","    if (isSameTag && isBuffer(object)) {","      if (!isBuffer(other)) {","        return false;","      }","      objIsArr = true;","      objIsObj = false;","    }","    if (isSameTag && !objIsObj) {","      stack || (stack = new Stack);","      return (objIsArr || isTypedArray(object))","        ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)","        : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);","    }","    if (!(bitmask & PARTIAL_COMPARE_FLAG)) {","      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),","          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');","","      if (objIsWrapped || othIsWrapped) {","        var objUnwrapped = objIsWrapped ? object.value() : object,","            othUnwrapped = othIsWrapped ? other.value() : other;","","        stack || (stack = new Stack);","        return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);","      }","    }","    if (!isSameTag) {","      return false;","    }","    stack || (stack = new Stack);","    return equalObjects(object, other, equalFunc, customizer, bitmask, stack);","  }","","  return baseIsEqualDeep;","});",""],"l":{"1":1,"4":0,"7":0,"12":0,"15":0,"32":1,"33":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"46":0,"50":0,"51":0,"52":0,"54":0,"55":0,"57":0,"58":0,"59":0,"63":0,"64":0,"67":0,"68":0,"71":0,"72":0,"75":0,"76":0,"78":0,"79":0,"82":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsEqual.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsEqual.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":63},"end":{"line":1,"column":113}}},"2":{"name":"baseIsEqual","line":18,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":3}},"2":{"start":{"line":18,"column":2},"end":{"line":26,"column":3}},"3":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"4":{"start":{"line":20,"column":6},"end":{"line":20,"column":18}},"5":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"6":{"start":{"line":23,"column":6},"end":{"line":23,"column":48}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":82}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":21}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":21}},{"start":{"line":22,"column":25},"end":{"line":22,"column":38}},{"start":{"line":22,"column":43},"end":{"line":22,"column":59}},{"start":{"line":22,"column":63},"end":{"line":22,"column":83}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":13},"end":{"line":23,"column":28}},{"start":{"line":23,"column":32},"end":{"line":23,"column":47}}]}},"code":["define(['./_baseIsEqualDeep', './isObject', './isObjectLike'], function(baseIsEqualDeep, isObject, isObjectLike) {","","  /**","   * The base implementation of `_.isEqual` which supports partial comparisons","   * and tracks traversed objects.","   *","   * @private","   * @param {*} value The value to compare.","   * @param {*} other The other value to compare.","   * @param {Function} [customizer] The function to customize comparisons.","   * @param {boolean} [bitmask] The bitmask of comparison flags.","   *  The bitmask may be composed of the following flags:","   *     1 - Unordered comparison","   *     2 - Partial comparison","   * @param {Object} [stack] Tracks traversed `value` and `other` objects.","   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.","   */","  function baseIsEqual(value, other, customizer, bitmask, stack) {","    if (value === other) {","      return true;","    }","    if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {","      return value !== value && other !== other;","    }","    return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);","  }","","  return baseIsEqual;","});",""],"l":{"1":1,"18":1,"19":0,"20":0,"22":0,"23":0,"25":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsMap.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsMap.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":40},"end":{"line":1,"column":71}}},"2":{"name":"baseIsMap","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":30}},"3":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":58}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":19}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":11},"end":{"line":14,"column":30}},{"start":{"line":14,"column":34},"end":{"line":14,"column":57}}]}},"code":["define(['./_getTag', './isObjectLike'], function(getTag, isObjectLike) {","","  /** `Object#toString` result references. */","  var mapTag = '[object Map]';","","  /**","   * The base implementation of `_.isMap` without Node.js optimizations.","   *","   * @private","   * @param {*} value The value to check.","   * @returns {boolean} Returns `true` if `value` is a map, else `false`.","   */","  function baseIsMap(value) {","    return isObjectLike(value) && getTag(value) == mapTag;","  }","","  return baseIsMap;","});",""],"l":{"1":1,"4":0,"13":1,"14":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsMatch.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsMatch.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":39},"end":{"line":1,"column":68}}},"2":{"name":"baseIsMatch","line":20,"loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":62}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":65,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":8,"column":31}},"4":{"start":{"line":20,"column":2},"end":{"line":62,"column":3}},"5":{"start":{"line":21,"column":4},"end":{"line":23,"column":35}},"6":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"7":{"start":{"line":26,"column":6},"end":{"line":26,"column":21}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":28}},"9":{"start":{"line":29,"column":4},"end":{"line":37,"column":5}},"10":{"start":{"line":30,"column":6},"end":{"line":30,"column":34}},"11":{"start":{"line":31,"column":6},"end":{"line":36,"column":7}},"12":{"start":{"line":35,"column":8},"end":{"line":35,"column":21}},"13":{"start":{"line":38,"column":4},"end":{"line":60,"column":5}},"14":{"start":{"line":39,"column":6},"end":{"line":39,"column":30}},"15":{"start":{"line":40,"column":6},"end":{"line":42,"column":29}},"16":{"start":{"line":44,"column":6},"end":{"line":59,"column":7}},"17":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"18":{"start":{"line":46,"column":10},"end":{"line":46,"column":23}},"19":{"start":{"line":49,"column":8},"end":{"line":49,"column":30}},"20":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"21":{"start":{"line":51,"column":10},"end":{"line":51,"column":82}},"22":{"start":{"line":53,"column":8},"end":{"line":58,"column":9}},"23":{"start":{"line":57,"column":10},"end":{"line":57,"column":23}},"24":{"start":{"line":61,"column":4},"end":{"line":61,"column":16}},"25":{"start":{"line":64,"column":2},"end":{"line":64,"column":21}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"3":{"line":31,"type":"cond-expr","locations":[{"start":{"line":32,"column":14},"end":{"line":32,"column":41}},{"start":{"line":33,"column":14},"end":{"line":33,"column":34}}]},"4":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":11},"end":{"line":31,"column":23}},{"start":{"line":31,"column":27},"end":{"line":31,"column":34}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"6":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":10},"end":{"line":44,"column":22}},{"start":{"line":44,"column":26},"end":{"line":44,"column":33}}]},"7":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"8":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":34}},{"start":{"line":45,"column":38},"end":{"line":45,"column":54}}]},"9":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"10":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"11":{"line":53,"type":"cond-expr","locations":[{"start":{"line":54,"column":16},"end":{"line":54,"column":113}},{"start":{"line":55,"column":16},"end":{"line":55,"column":22}}]}},"code":["define(['./_Stack', './_baseIsEqual'], function(Stack, baseIsEqual) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used to compose bitmasks for comparison styles. */","  var UNORDERED_COMPARE_FLAG = 1,","      PARTIAL_COMPARE_FLAG = 2;","","  /**","   * The base implementation of `_.isMatch` without support for iteratee shorthands.","   *","   * @private","   * @param {Object} object The object to inspect.","   * @param {Object} source The object of property values to match.","   * @param {Array} matchData The property names, values, and compare flags to match.","   * @param {Function} [customizer] The function to customize comparisons.","   * @returns {boolean} Returns `true` if `object` is a match, else `false`.","   */","  function baseIsMatch(object, source, matchData, customizer) {","    var index = matchData.length,","        length = index,","        noCustomizer = !customizer;","","    if (object == null) {","      return !length;","    }","    object = Object(object);","    while (index--) {","      var data = matchData[index];","      if ((noCustomizer && data[2])","            ? data[1] !== object[data[0]]","            : !(data[0] in object)","          ) {","        return false;","      }","    }","    while (++index < length) {","      data = matchData[index];","      var key = data[0],","          objValue = object[key],","          srcValue = data[1];","","      if (noCustomizer && data[2]) {","        if (objValue === undefined && !(key in object)) {","          return false;","        }","      } else {","        var stack = new Stack;","        if (customizer) {","          var result = customizer(objValue, srcValue, key, object, source, stack);","        }","        if (!(result === undefined","              ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)","              : result","            )) {","          return false;","        }","      }","    }","    return true;","  }","","  return baseIsMatch;","});",""],"l":{"1":1,"4":0,"7":0,"20":1,"21":0,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"35":0,"38":0,"39":0,"40":0,"44":0,"45":0,"46":0,"49":0,"50":0,"51":0,"53":0,"57":0,"61":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsNaN.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsNaN.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseIsNaN","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":27}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":19}}},"branchMap":{},"code":["define([], function() {","","  /**","   * The base implementation of `_.isNaN` without support for number objects.","   *","   * @private","   * @param {*} value The value to check.","   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.","   */","  function baseIsNaN(value) {","    return value !== value;","  }","","  return baseIsNaN;","});",""],"l":{"1":1,"10":1,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsNative.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsNative.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":69},"end":{"line":1,"column":120}}},"2":{"name":"baseIsNative","line":36,"loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":45,"column":3}},"2":{"start":{"line":7,"column":2},"end":{"line":7,"column":43}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":51}},"4":{"start":{"line":13,"column":2},"end":{"line":14,"column":37}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":40}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":50}},"7":{"start":{"line":23,"column":2},"end":{"line":26,"column":4}},"8":{"start":{"line":36,"column":2},"end":{"line":42,"column":3}},"9":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"10":{"start":{"line":38,"column":6},"end":{"line":38,"column":19}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":64}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":41}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":22}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":24}},{"start":{"line":37,"column":28},"end":{"line":37,"column":43}}]},"3":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":38},"end":{"line":40,"column":48}},{"start":{"line":40,"column":51},"end":{"line":40,"column":63}}]}},"code":["define(['./isFunction', './_isMasked', './isObject', './_toSource'], function(isFunction, isMasked, isObject, toSource) {","","  /**","   * Used to match `RegExp`","   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).","   */","  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;","","  /** Used to detect host constructors (Safari). */","  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;","","  /** Used for built-in method references. */","  var funcProto = Function.prototype,","      objectProto = Object.prototype;","","  /** Used to resolve the decompiled source of functions. */","  var funcToString = funcProto.toString;","","  /** Used to check objects for own properties. */","  var hasOwnProperty = objectProto.hasOwnProperty;","","  /** Used to detect if a method is native. */","  var reIsNative = RegExp('^' +","    funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')","    .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'","  );","","  /**","   * The base implementation of `_.isNative` without bad shim checks.","   *","   * @private","   * @param {*} value The value to check.","   * @returns {boolean} Returns `true` if `value` is a native function,","   *  else `false`.","   */","  function baseIsNative(value) {","    if (!isObject(value) || isMasked(value)) {","      return false;","    }","    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;","    return pattern.test(toSource(value));","  }","","  return baseIsNative;","});",""],"l":{"1":1,"7":0,"10":0,"13":0,"17":0,"20":0,"23":0,"36":1,"37":0,"38":0,"40":0,"41":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsRegExp.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsRegExp.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":42}}},"2":{"name":"baseIsRegExp","line":23,"loc":{"start":{"line":23,"column":2},"end":{"line":23,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":28,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":36}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":37}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":44}},"5":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":70}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":11},"end":{"line":24,"column":26}},{"start":{"line":24,"column":30},"end":{"line":24,"column":69}}]}},"code":["define(['./isObject'], function(isObject) {","","  /** `Object#toString` result references. */","  var regexpTag = '[object RegExp]';","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /**","   * Used to resolve the","   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)","   * of values.","   */","  var objectToString = objectProto.toString;","","  /**","   * The base implementation of `_.isRegExp` without Node.js optimizations.","   *","   * @private","   * @param {*} value The value to check.","   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.","   */","  function baseIsRegExp(value) {","    return isObject(value) && objectToString.call(value) == regexpTag;","  }","","  return baseIsRegExp;","});",""],"l":{"1":1,"4":0,"7":0,"14":0,"23":1,"24":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsSet.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsSet.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":40},"end":{"line":1,"column":71}}},"2":{"name":"baseIsSet","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":30}},"3":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":58}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":19}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":11},"end":{"line":14,"column":30}},{"start":{"line":14,"column":34},"end":{"line":14,"column":57}}]}},"code":["define(['./_getTag', './isObjectLike'], function(getTag, isObjectLike) {","","  /** `Object#toString` result references. */","  var setTag = '[object Set]';","","  /**","   * The base implementation of `_.isSet` without Node.js optimizations.","   *","   * @private","   * @param {*} value The value to check.","   * @returns {boolean} Returns `true` if `value` is a set, else `false`.","   */","  function baseIsSet(value) {","    return isObjectLike(value) && getTag(value) == setTag;","  }","","  return baseIsSet;","});",""],"l":{"1":1,"4":0,"13":1,"14":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsTypedArray.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIsTypedArray.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0},"b":{"1":[0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":41},"end":{"line":1,"column":74}}},"2":{"name":"baseIsTypedArray","line":63,"loc":{"start":{"line":63,"column":2},"end":{"line":63,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":69,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":16,"column":38}},"3":{"start":{"line":18,"column":2},"end":{"line":28,"column":41}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":26}},"5":{"start":{"line":32,"column":2},"end":{"line":36,"column":35}},"6":{"start":{"line":37,"column":2},"end":{"line":44,"column":37}},"7":{"start":{"line":47,"column":2},"end":{"line":47,"column":37}},"8":{"start":{"line":54,"column":2},"end":{"line":54,"column":44}},"9":{"start":{"line":63,"column":2},"end":{"line":66,"column":3}},"10":{"start":{"line":64,"column":4},"end":{"line":65,"column":77}},"11":{"start":{"line":68,"column":2},"end":{"line":68,"column":26}}},"branchMap":{"1":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":11},"end":{"line":64,"column":30}},{"start":{"line":65,"column":6},"end":{"line":65,"column":28}},{"start":{"line":65,"column":32},"end":{"line":65,"column":76}}]}},"code":["define(['./isLength', './isObjectLike'], function(isLength, isObjectLike) {","","  /** `Object#toString` result references. */","  var argsTag = '[object Arguments]',","      arrayTag = '[object Array]',","      boolTag = '[object Boolean]',","      dateTag = '[object Date]',","      errorTag = '[object Error]',","      funcTag = '[object Function]',","      mapTag = '[object Map]',","      numberTag = '[object Number]',","      objectTag = '[object Object]',","      regexpTag = '[object RegExp]',","      setTag = '[object Set]',","      stringTag = '[object String]',","      weakMapTag = '[object WeakMap]';","","  var arrayBufferTag = '[object ArrayBuffer]',","      dataViewTag = '[object DataView]',","      float32Tag = '[object Float32Array]',","      float64Tag = '[object Float64Array]',","      int8Tag = '[object Int8Array]',","      int16Tag = '[object Int16Array]',","      int32Tag = '[object Int32Array]',","      uint8Tag = '[object Uint8Array]',","      uint8ClampedTag = '[object Uint8ClampedArray]',","      uint16Tag = '[object Uint16Array]',","      uint32Tag = '[object Uint32Array]';","","  /** Used to identify `toStringTag` values of typed arrays. */","  var typedArrayTags = {};","  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =","  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =","  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =","  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =","  typedArrayTags[uint32Tag] = true;","  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =","  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =","  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =","  typedArrayTags[errorTag] = typedArrayTags[funcTag] =","  typedArrayTags[mapTag] = typedArrayTags[numberTag] =","  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =","  typedArrayTags[setTag] = typedArrayTags[stringTag] =","  typedArrayTags[weakMapTag] = false;","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /**","   * Used to resolve the","   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)","   * of values.","   */","  var objectToString = objectProto.toString;","","  /**","   * The base implementation of `_.isTypedArray` without Node.js optimizations.","   *","   * @private","   * @param {*} value The value to check.","   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.","   */","  function baseIsTypedArray(value) {","    return isObjectLike(value) &&","      isLength(value.length) && !!typedArrayTags[objectToString.call(value)];","  }","","  return baseIsTypedArray;","});",""],"l":{"1":1,"4":0,"18":0,"31":0,"32":0,"37":0,"47":0,"54":0,"63":1,"64":0,"68":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIteratee.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseIteratee.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":94},"end":{"line":1,"column":166}}},"2":{"name":"baseIteratee","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":28,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":25,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"4":{"start":{"line":14,"column":6},"end":{"line":14,"column":19}},"5":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"6":{"start":{"line":17,"column":6},"end":{"line":17,"column":22}},"7":{"start":{"line":19,"column":4},"end":{"line":23,"column":5}},"8":{"start":{"line":20,"column":6},"end":{"line":22,"column":29}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":27}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"4":{"line":20,"type":"cond-expr","locations":[{"start":{"line":21,"column":10},"end":{"line":21,"column":49}},{"start":{"line":22,"column":10},"end":{"line":22,"column":28}}]}},"code":["define(['./_baseMatches', './_baseMatchesProperty', './identity', './isArray', './property'], function(baseMatches, baseMatchesProperty, identity, isArray, property) {","","  /**","   * The base implementation of `_.iteratee`.","   *","   * @private","   * @param {*} [value=_.identity] The value to convert to an iteratee.","   * @returns {Function} Returns the iteratee.","   */","  function baseIteratee(value) {","    // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.","    // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.","    if (typeof value == 'function') {","      return value;","    }","    if (value == null) {","      return identity;","    }","    if (typeof value == 'object') {","      return isArray(value)","        ? baseMatchesProperty(value[0], value[1])","        : baseMatches(value);","    }","    return property(value);","  }","","  return baseIteratee;","});",""],"l":{"1":1,"10":1,"13":0,"14":0,"16":0,"17":0,"19":0,"20":0,"24":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseKeysIn.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseKeysIn.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":60},"end":{"line":1,"column":106}}},"2":{"name":"baseKeysIn","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":32,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":37}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":50}},"4":{"start":{"line":16,"column":2},"end":{"line":29,"column":3}},"5":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"6":{"start":{"line":18,"column":6},"end":{"line":18,"column":34}},"7":{"start":{"line":20,"column":4},"end":{"line":21,"column":20}},"8":{"start":{"line":23,"column":4},"end":{"line":27,"column":5}},"9":{"start":{"line":24,"column":6},"end":{"line":26,"column":7}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":25}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":18}},"12":{"start":{"line":31,"column":2},"end":{"line":31,"column":20}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":6}},{"start":{"line":24,"column":6},"end":{"line":24,"column":6}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":32}},{"start":{"line":24,"column":37},"end":{"line":24,"column":44}},{"start":{"line":24,"column":48},"end":{"line":24,"column":81}}]}},"code":["define(['./isObject', './_isPrototype', './_nativeKeysIn'], function(isObject, isPrototype, nativeKeysIn) {","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /** Used to check objects for own properties. */","  var hasOwnProperty = objectProto.hasOwnProperty;","","  /**","   * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.","   *","   * @private","   * @param {Object} object The object to query.","   * @returns {Array} Returns the array of property names.","   */","  function baseKeysIn(object) {","    if (!isObject(object)) {","      return nativeKeysIn(object);","    }","    var isProto = isPrototype(object),","        result = [];","","    for (var key in object) {","      if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {","        result.push(key);","      }","    }","    return result;","  }","","  return baseKeysIn;","});",""],"l":{"1":1,"4":0,"7":0,"16":1,"17":0,"18":0,"20":0,"23":0,"24":0,"25":0,"28":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseKeys.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseKeys.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":44},"end":{"line":1,"column":78}}},"2":{"name":"baseKeys","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":30,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":37}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":50}},"4":{"start":{"line":16,"column":2},"end":{"line":27,"column":3}},"5":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"6":{"start":{"line":18,"column":6},"end":{"line":18,"column":32}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":20}},"8":{"start":{"line":21,"column":4},"end":{"line":25,"column":5}},"9":{"start":{"line":22,"column":6},"end":{"line":24,"column":7}},"10":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":18}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":18}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":6}},{"start":{"line":22,"column":6},"end":{"line":22,"column":6}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":10},"end":{"line":22,"column":42}},{"start":{"line":22,"column":46},"end":{"line":22,"column":66}}]}},"code":["define(['./_isPrototype', './_nativeKeys'], function(isPrototype, nativeKeys) {","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /** Used to check objects for own properties. */","  var hasOwnProperty = objectProto.hasOwnProperty;","","  /**","   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.","   *","   * @private","   * @param {Object} object The object to query.","   * @returns {Array} Returns the array of property names.","   */","  function baseKeys(object) {","    if (!isPrototype(object)) {","      return nativeKeys(object);","    }","    var result = [];","    for (var key in Object(object)) {","      if (hasOwnProperty.call(object, key) && key != 'constructor') {","        result.push(key);","      }","    }","    return result;","  }","","  return baseKeys;","});",""],"l":{"1":1,"4":0,"7":0,"16":1,"17":0,"18":0,"20":0,"21":0,"22":0,"23":0,"26":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseLodash.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseLodash.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseLodash","line":8,"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":13,"column":3}},"2":{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":20}}},"branchMap":{},"code":["define([], function() {","","  /**","   * The function whose prototype chain sequence wrappers inherit from.","   *","   * @private","   */","  function baseLodash() {","    // No operation performed.","  }","","  return baseLodash;","});",""],"l":{"1":1,"8":1,"12":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseLt.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseLt.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseLt","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":16}}},"branchMap":{},"code":["define([], function() {","","  /**","   * The base implementation of `_.lt` which doesn't coerce arguments.","   *","   * @private","   * @param {*} value The value to compare.","   * @param {*} other The other value to compare.","   * @returns {boolean} Returns `true` if `value` is less than `other`,","   *  else `false`.","   */","  function baseLt(value, other) {","    return value < other;","  }","","  return baseLt;","});",""],"l":{"1":1,"12":1,"13":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMap.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMap.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":41},"end":{"line":1,"column":73}}},"2":{"name":"baseMap","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":41}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":25},"end":{"line":15,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":19,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":13,"column":73}},"4":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"5":{"start":{"line":16,"column":6},"end":{"line":16,"column":57}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"7":{"start":{"line":21,"column":2},"end":{"line":21,"column":17}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":43},"end":{"line":13,"column":67}},{"start":{"line":13,"column":70},"end":{"line":13,"column":72}}]}},"code":["define(['./_baseEach', './isArrayLike'], function(baseEach, isArrayLike) {","","  /**","   * The base implementation of `_.map` without support for iteratee shorthands.","   *","   * @private","   * @param {Array|Object} collection The collection to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @returns {Array} Returns the new mapped array.","   */","  function baseMap(collection, iteratee) {","    var index = -1,","        result = isArrayLike(collection) ? Array(collection.length) : [];","","    baseEach(collection, function(value, key, collection) {","      result[++index] = iteratee(value, key, collection);","    });","    return result;","  }","","  return baseMap;","});",""],"l":{"1":1,"11":1,"12":0,"15":0,"16":0,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMatches.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMatches.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":76},"end":{"line":1,"column":137}}},"2":{"name":"baseMatches","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":31}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":11},"end":{"line":15,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":18,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":41}},"4":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"5":{"start":{"line":13,"column":6},"end":{"line":13,"column":71}},"6":{"start":{"line":15,"column":4},"end":{"line":17,"column":6}},"7":{"start":{"line":16,"column":6},"end":{"line":16,"column":73}},"8":{"start":{"line":20,"column":2},"end":{"line":20,"column":21}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},{"start":{"line":12,"column":33},"end":{"line":12,"column":48}}]},"3":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":13},"end":{"line":16,"column":30}},{"start":{"line":16,"column":34},"end":{"line":16,"column":72}}]}},"code":["define(['./_baseIsMatch', './_getMatchData', './_matchesStrictComparable'], function(baseIsMatch, getMatchData, matchesStrictComparable) {","","  /**","   * The base implementation of `_.matches` which doesn't clone `source`.","   *","   * @private","   * @param {Object} source The object of property values to match.","   * @returns {Function} Returns the new spec function.","   */","  function baseMatches(source) {","    var matchData = getMatchData(source);","    if (matchData.length == 1 && matchData[0][2]) {","      return matchesStrictComparable(matchData[0][0], matchData[0][1]);","    }","    return function(object) {","      return object === source || baseIsMatch(object, source, matchData);","    };","  }","","  return baseMatches;","});",""],"l":{"1":1,"10":1,"11":0,"12":0,"13":0,"15":0,"16":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMatchesProperty.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMatchesProperty.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":126},"end":{"line":1,"column":219}}},"2":{"name":"baseMatchesProperty","line":18,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":47}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":31,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":8,"column":31}},"4":{"start":{"line":18,"column":2},"end":{"line":28,"column":3}},"5":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"6":{"start":{"line":20,"column":6},"end":{"line":20,"column":60}},"7":{"start":{"line":22,"column":4},"end":{"line":27,"column":6}},"8":{"start":{"line":23,"column":6},"end":{"line":23,"column":39}},"9":{"start":{"line":24,"column":6},"end":{"line":26,"column":100}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":29}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":19}},{"start":{"line":19,"column":23},"end":{"line":19,"column":51}}]},"3":{"line":24,"type":"cond-expr","locations":[{"start":{"line":25,"column":10},"end":{"line":25,"column":29}},{"start":{"line":26,"column":10},"end":{"line":26,"column":99}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":14},"end":{"line":24,"column":36}},{"start":{"line":24,"column":40},"end":{"line":24,"column":61}}]}},"code":["define(['./_baseIsEqual', './get', './hasIn', './_isKey', './_isStrictComparable', './_matchesStrictComparable', './_toKey'], function(baseIsEqual, get, hasIn, isKey, isStrictComparable, matchesStrictComparable, toKey) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used to compose bitmasks for comparison styles. */","  var UNORDERED_COMPARE_FLAG = 1,","      PARTIAL_COMPARE_FLAG = 2;","","  /**","   * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.","   *","   * @private","   * @param {string} path The path of the property to get.","   * @param {*} srcValue The value to match.","   * @returns {Function} Returns the new spec function.","   */","  function baseMatchesProperty(path, srcValue) {","    if (isKey(path) && isStrictComparable(srcValue)) {","      return matchesStrictComparable(toKey(path), srcValue);","    }","    return function(object) {","      var objValue = get(object, path);","      return (objValue === undefined && objValue === srcValue)","        ? hasIn(object, path)","        : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);","    };","  }","","  return baseMatchesProperty;","});",""],"l":{"1":1,"4":0,"7":0,"18":1,"19":0,"20":0,"22":0,"23":0,"24":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMean.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMean.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":41}}},"2":{"name":"baseMean","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":18}},"3":{"start":{"line":15,"column":2},"end":{"line":18,"column":3}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":42}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":62}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":18}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":25},"end":{"line":16,"column":37}},{"start":{"line":16,"column":40},"end":{"line":16,"column":41}}]},"2":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":21},"end":{"line":17,"column":54}},{"start":{"line":17,"column":58},"end":{"line":17,"column":61}}]}},"code":["define(['./_baseSum'], function(baseSum) {","","  /** Used as references for various `Number` constants. */","  var NAN = 0 / 0;","","  /**","   * The base implementation of `_.mean` and `_.meanBy` without support for","   * iteratee shorthands.","   *","   * @private","   * @param {Array} array The array to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @returns {number} Returns the mean.","   */","  function baseMean(array, iteratee) {","    var length = array ? array.length : 0;","    return length ? (baseSum(array, iteratee) / length) : NAN;","  }","","  return baseMean;","});",""],"l":{"1":1,"4":0,"15":1,"16":0,"17":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMergeDeep.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMergeDeep.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":263},"end":{"line":1,"column":465}}},"2":{"name":"baseMergeDeep","line":21,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":86}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":84,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":21,"column":2},"end":{"line":81,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":24,"column":38}},"5":{"start":{"line":26,"column":4},"end":{"line":29,"column":5}},"6":{"start":{"line":27,"column":6},"end":{"line":27,"column":45}},"7":{"start":{"line":28,"column":6},"end":{"line":28,"column":13}},"8":{"start":{"line":30,"column":4},"end":{"line":32,"column":18}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":42}},"10":{"start":{"line":36,"column":4},"end":{"line":73,"column":5}},"11":{"start":{"line":37,"column":6},"end":{"line":39,"column":64}},"12":{"start":{"line":41,"column":6},"end":{"line":41,"column":26}},"13":{"start":{"line":42,"column":6},"end":{"line":72,"column":7}},"14":{"start":{"line":43,"column":8},"end":{"line":59,"column":9}},"15":{"start":{"line":44,"column":10},"end":{"line":44,"column":30}},"16":{"start":{"line":46,"column":13},"end":{"line":59,"column":9}},"17":{"start":{"line":47,"column":10},"end":{"line":47,"column":41}},"18":{"start":{"line":49,"column":13},"end":{"line":59,"column":9}},"19":{"start":{"line":50,"column":10},"end":{"line":50,"column":27}},"20":{"start":{"line":51,"column":10},"end":{"line":51,"column":49}},"21":{"start":{"line":53,"column":13},"end":{"line":59,"column":9}},"22":{"start":{"line":54,"column":10},"end":{"line":54,"column":27}},"23":{"start":{"line":55,"column":10},"end":{"line":55,"column":53}},"24":{"start":{"line":58,"column":10},"end":{"line":58,"column":24}},"25":{"start":{"line":61,"column":11},"end":{"line":72,"column":7}},"26":{"start":{"line":62,"column":8},"end":{"line":62,"column":28}},"27":{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},"28":{"start":{"line":64,"column":10},"end":{"line":64,"column":45}},"29":{"start":{"line":66,"column":13},"end":{"line":68,"column":9}},"30":{"start":{"line":67,"column":10},"end":{"line":67,"column":47}},"31":{"start":{"line":71,"column":8},"end":{"line":71,"column":25}},"32":{"start":{"line":74,"column":4},"end":{"line":79,"column":5}},"33":{"start":{"line":76,"column":6},"end":{"line":76,"column":36}},"34":{"start":{"line":77,"column":6},"end":{"line":77,"column":65}},"35":{"start":{"line":78,"column":6},"end":{"line":78,"column":32}},"36":{"start":{"line":80,"column":4},"end":{"line":80,"column":44}},"37":{"start":{"line":83,"column":2},"end":{"line":83,"column":23}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"2":{"line":30,"type":"cond-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":73}},{"start":{"line":32,"column":8},"end":{"line":32,"column":17}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"4":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":19},"end":{"line":38,"column":25}},{"start":{"line":38,"column":29},"end":{"line":38,"column":47}}]},"5":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":20},"end":{"line":39,"column":26}},{"start":{"line":39,"column":30},"end":{"line":39,"column":37}},{"start":{"line":39,"column":41},"end":{"line":39,"column":63}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"7":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":10},"end":{"line":42,"column":15}},{"start":{"line":42,"column":19},"end":{"line":42,"column":25}},{"start":{"line":42,"column":29},"end":{"line":42,"column":36}}]},"8":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":8}},{"start":{"line":43,"column":8},"end":{"line":43,"column":8}}]},"9":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":13},"end":{"line":46,"column":13}},{"start":{"line":46,"column":13},"end":{"line":46,"column":13}}]},"10":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":13},"end":{"line":49,"column":13}},{"start":{"line":49,"column":13},"end":{"line":49,"column":13}}]},"11":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":13},"end":{"line":53,"column":13}},{"start":{"line":53,"column":13},"end":{"line":53,"column":13}}]},"12":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":11},"end":{"line":61,"column":11}},{"start":{"line":61,"column":11},"end":{"line":61,"column":11}}]},"13":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":15},"end":{"line":61,"column":38}},{"start":{"line":61,"column":42},"end":{"line":61,"column":63}}]},"14":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]},"15":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":13},"end":{"line":66,"column":13}},{"start":{"line":66,"column":13},"end":{"line":66,"column":13}}]},"16":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":17},"end":{"line":66,"column":36}},{"start":{"line":66,"column":41},"end":{"line":66,"column":49}},{"start":{"line":66,"column":53},"end":{"line":66,"column":73}}]},"17":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]}},"code":["define(['./_assignMergeValue', './_cloneBuffer', './_cloneTypedArray', './_copyArray', './_initCloneObject', './isArguments', './isArray', './isArrayLikeObject', './isBuffer', './isFunction', './isObject', './isPlainObject', './isTypedArray', './toPlainObject'], function(assignMergeValue, cloneBuffer, cloneTypedArray, copyArray, initCloneObject, isArguments, isArray, isArrayLikeObject, isBuffer, isFunction, isObject, isPlainObject, isTypedArray, toPlainObject) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * A specialized version of `baseMerge` for arrays and objects which performs","   * deep merges and tracks traversed objects enabling objects with circular","   * references to be merged.","   *","   * @private","   * @param {Object} object The destination object.","   * @param {Object} source The source object.","   * @param {string} key The key of the value to merge.","   * @param {number} srcIndex The index of `source`.","   * @param {Function} mergeFunc The function to merge values.","   * @param {Function} [customizer] The function to customize assigned values.","   * @param {Object} [stack] Tracks traversed source values and their merged","   *  counterparts.","   */","  function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {","    var objValue = object[key],","        srcValue = source[key],","        stacked = stack.get(srcValue);","","    if (stacked) {","      assignMergeValue(object, key, stacked);","      return;","    }","    var newValue = customizer","      ? customizer(objValue, srcValue, (key + ''), object, source, stack)","      : undefined;","","    var isCommon = newValue === undefined;","","    if (isCommon) {","      var isArr = isArray(srcValue),","          isBuff = !isArr && isBuffer(srcValue),","          isTyped = !isArr && !isBuff && isTypedArray(srcValue);","","      newValue = srcValue;","      if (isArr || isBuff || isTyped) {","        if (isArray(objValue)) {","          newValue = objValue;","        }","        else if (isArrayLikeObject(objValue)) {","          newValue = copyArray(objValue);","        }","        else if (isBuff) {","          isCommon = false;","          newValue = cloneBuffer(srcValue, true);","        }","        else if (isTyped) {","          isCommon = false;","          newValue = cloneTypedArray(srcValue, true);","        }","        else {","          newValue = [];","        }","      }","      else if (isPlainObject(srcValue) || isArguments(srcValue)) {","        newValue = objValue;","        if (isArguments(objValue)) {","          newValue = toPlainObject(objValue);","        }","        else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {","          newValue = initCloneObject(srcValue);","        }","      }","      else {","        isCommon = false;","      }","    }","    if (isCommon) {","      // Recursively merge objects and arrays (susceptible to call stack limits).","      stack.set(srcValue, newValue);","      mergeFunc(newValue, srcValue, srcIndex, customizer, stack);","      stack['delete'](srcValue);","    }","    assignMergeValue(object, key, newValue);","  }","","  return baseMergeDeep;","});",""],"l":{"1":1,"4":0,"21":1,"22":0,"26":0,"27":0,"28":0,"30":0,"34":0,"36":0,"37":0,"41":0,"42":0,"43":0,"44":0,"46":0,"47":0,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"58":0,"61":0,"62":0,"63":0,"64":0,"66":0,"67":0,"71":0,"74":0,"76":0,"77":0,"78":0,"80":0,"83":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMerge.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseMerge.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":104},"end":{"line":1,"column":180}}},"2":{"name":"baseMerge","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":66}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":20},"end":{"line":21,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":40,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":17,"column":2},"end":{"line":37,"column":3}},"4":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"5":{"start":{"line":19,"column":6},"end":{"line":19,"column":13}},"6":{"start":{"line":21,"column":4},"end":{"line":36,"column":15}},"7":{"start":{"line":22,"column":6},"end":{"line":35,"column":7}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":37}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":83}},"10":{"start":{"line":27,"column":8},"end":{"line":29,"column":22}},"11":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"12":{"start":{"line":32,"column":10},"end":{"line":32,"column":30}},"13":{"start":{"line":34,"column":8},"end":{"line":34,"column":48}},"14":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":6}},{"start":{"line":22,"column":6},"end":{"line":22,"column":6}}]},"3":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":13}},{"start":{"line":23,"column":18},"end":{"line":23,"column":35}}]},"4":{"line":27,"type":"cond-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":80}},{"start":{"line":29,"column":12},"end":{"line":29,"column":21}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":8}},{"start":{"line":31,"column":8},"end":{"line":31,"column":8}}]}},"code":["define(['./_Stack', './_assignMergeValue', './_baseFor', './_baseMergeDeep', './isObject', './keysIn'], function(Stack, assignMergeValue, baseFor, baseMergeDeep, isObject, keysIn) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.merge` without support for multiple sources.","   *","   * @private","   * @param {Object} object The destination object.","   * @param {Object} source The source object.","   * @param {number} srcIndex The index of `source`.","   * @param {Function} [customizer] The function to customize merged values.","   * @param {Object} [stack] Tracks traversed source values and their merged","   *  counterparts.","   */","  function baseMerge(object, source, srcIndex, customizer, stack) {","    if (object === source) {","      return;","    }","    baseFor(source, function(srcValue, key) {","      if (isObject(srcValue)) {","        stack || (stack = new Stack);","        baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);","      }","      else {","        var newValue = customizer","          ? customizer(object[key], srcValue, (key + ''), object, source, stack)","          : undefined;","","        if (newValue === undefined) {","          newValue = srcValue;","        }","        assignMergeValue(object, key, newValue);","      }","    }, keysIn);","  }","","  return baseMerge;","});",""],"l":{"1":1,"4":0,"17":1,"18":0,"19":0,"21":0,"22":0,"23":0,"24":0,"27":0,"31":0,"32":0,"34":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseNth.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseNth.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":41}}},"2":{"name":"baseNth","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":24,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":14,"column":2},"end":{"line":21,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":30}},"5":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"6":{"start":{"line":17,"column":6},"end":{"line":17,"column":13}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":28}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":53}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":17}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":17},"end":{"line":19,"column":23}},{"start":{"line":19,"column":26},"end":{"line":19,"column":27}}]},"3":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":32},"end":{"line":20,"column":40}},{"start":{"line":20,"column":43},"end":{"line":20,"column":52}}]}},"code":["define(['./_isIndex'], function(isIndex) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.nth` which doesn't coerce arguments.","   *","   * @private","   * @param {Array} array The array to query.","   * @param {number} n The index of the element to return.","   * @returns {*} Returns the nth element of `array`.","   */","  function baseNth(array, n) {","    var length = array.length;","    if (!length) {","      return;","    }","    n += n < 0 ? length : 0;","    return isIndex(n, length) ? array[n] : undefined;","  }","","  return baseNth;","});",""],"l":{"1":1,"4":0,"14":1,"15":0,"16":0,"17":0,"19":0,"20":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseOrderBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseOrderBy.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":126},"end":{"line":1,"column":218}}},"2":{"name":"baseOrderBy","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":54}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":37},"end":{"line":16,"column":70}}},"4":{"name":"(anonymous_4)","line":17,"loc":{"start":{"line":17,"column":41},"end":{"line":17,"column":60}}},"5":{"name":"(anonymous_5)","line":23,"loc":{"start":{"line":23,"column":30},"end":{"line":23,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":26,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":19}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":93}},"5":{"start":{"line":16,"column":4},"end":{"line":21,"column":7}},"6":{"start":{"line":17,"column":6},"end":{"line":19,"column":9}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":31}},"8":{"start":{"line":20,"column":6},"end":{"line":20,"column":72}},"9":{"start":{"line":23,"column":4},"end":{"line":25,"column":7}},"10":{"start":{"line":24,"column":6},"end":{"line":24,"column":52}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":21}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":44},"end":{"line":14,"column":53}},{"start":{"line":14,"column":56},"end":{"line":14,"column":66}}]}},"code":["define(['./_arrayMap', './_baseIteratee', './_baseMap', './_baseSortBy', './_baseUnary', './_compareMultiple', './identity'], function(arrayMap, baseIteratee, baseMap, baseSortBy, baseUnary, compareMultiple, identity) {","","  /**","   * The base implementation of `_.orderBy` without param guards.","   *","   * @private","   * @param {Array|Object} collection The collection to iterate over.","   * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.","   * @param {string[]} orders The sort orders of `iteratees`.","   * @returns {Array} Returns the new sorted array.","   */","  function baseOrderBy(collection, iteratees, orders) {","    var index = -1;","    iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));","","    var result = baseMap(collection, function(value, key, collection) {","      var criteria = arrayMap(iteratees, function(iteratee) {","        return iteratee(value);","      });","      return { 'criteria': criteria, 'index': ++index, 'value': value };","    });","","    return baseSortBy(result, function(object, other) {","      return compareMultiple(object, other, orders);","    });","  }","","  return baseOrderBy;","});",""],"l":{"1":1,"12":1,"13":0,"14":0,"16":0,"17":0,"18":0,"20":0,"23":0,"24":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePickBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePickBy.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":31},"end":{"line":1,"column":57}}},"2":{"name":"basePickBy","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":26,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":15,"column":20}},"4":{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":19,"column":30}},"6":{"start":{"line":21,"column":6},"end":{"line":23,"column":7}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":44}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":18}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":20}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":6}},{"start":{"line":21,"column":6},"end":{"line":21,"column":6}}]}},"code":["define(['./_baseAssignValue'], function(baseAssignValue) {","","  /**","   * The base implementation of  `_.pickBy` without support for iteratee shorthands.","   *","   * @private","   * @param {Object} object The source object.","   * @param {string[]} props The property identifiers to pick from.","   * @param {Function} predicate The function invoked per property.","   * @returns {Object} Returns the new object.","   */","  function basePickBy(object, props, predicate) {","    var index = -1,","        length = props.length,","        result = {};","","    while (++index < length) {","      var key = props[index],","          value = object[key];","","      if (predicate(value, key)) {","        baseAssignValue(result, key, value);","      }","    }","    return result;","  }","","  return basePickBy;","});",""],"l":{"1":1,"12":1,"13":0,"17":0,"18":0,"21":0,"22":0,"25":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePick.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePick.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":26},"end":{"line":1,"column":47}}},"2":{"name":"basePick","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":35}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":17,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}},"4":{"start":{"line":14,"column":4},"end":{"line":16,"column":7}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":27}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":18}}},"branchMap":{},"code":["define(['./_basePickBy'], function(basePickBy) {","","  /**","   * The base implementation of `_.pick` without support for individual","   * property identifiers.","   *","   * @private","   * @param {Object} object The source object.","   * @param {string[]} props The property identifiers to pick.","   * @returns {Object} Returns the new object.","   */","  function basePick(object, props) {","    object = Object(object);","    return basePickBy(object, props, function(value, key) {","      return key in object;","    });","  }","","  return basePick;","});",""],"l":{"1":1,"12":1,"13":0,"14":0,"15":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePropertyDeep.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePropertyDeep.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":41}}},"2":{"name":"basePropertyDeep","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":34}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":11},"end":{"line":11,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":13,"column":6}},"4":{"start":{"line":12,"column":6},"end":{"line":12,"column":35}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":26}}},"branchMap":{},"code":["define(['./_baseGet'], function(baseGet) {","","  /**","   * A specialized version of `baseProperty` which supports deep paths.","   *","   * @private","   * @param {Array|string} path The path of the property to get.","   * @returns {Function} Returns the new accessor function.","   */","  function basePropertyDeep(path) {","    return function(object) {","      return baseGet(object, path);","    };","  }","","  return basePropertyDeep;","});",""],"l":{"1":1,"10":1,"11":0,"12":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseProperty.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseProperty.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseProperty","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":29}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":13,"column":2},"end":{"line":17,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":16,"column":6}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":54}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":22}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":30},"end":{"line":15,"column":39}},{"start":{"line":15,"column":42},"end":{"line":15,"column":53}}]}},"code":["define([], function() {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.property` without support for deep paths.","   *","   * @private","   * @param {string} key The key of the property to get.","   * @returns {Function} Returns the new accessor function.","   */","  function baseProperty(key) {","    return function(object) {","      return object == null ? undefined : object[key];","    };","  }","","  return baseProperty;","});",""],"l":{"1":1,"4":0,"13":1,"14":0,"15":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePropertyOf.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePropertyOf.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"basePropertyOf","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":34}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":25}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":13,"column":2},"end":{"line":17,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":16,"column":6}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":54}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":24}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":30},"end":{"line":15,"column":39}},{"start":{"line":15,"column":42},"end":{"line":15,"column":53}}]}},"code":["define([], function() {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.propertyOf` without support for deep paths.","   *","   * @private","   * @param {Object} object The object to query.","   * @returns {Function} Returns the new accessor function.","   */","  function basePropertyOf(object) {","    return function(key) {","      return object == null ? undefined : object[key];","    };","  }","","  return basePropertyOf;","});",""],"l":{"1":1,"4":0,"13":1,"14":0,"15":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePullAll.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePullAll.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":96},"end":{"line":1,"column":167}}},"2":{"name":"basePullAll","line":20,"loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":48,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":35}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":33}},"4":{"start":{"line":20,"column":2},"end":{"line":45,"column":3}},"5":{"start":{"line":21,"column":4},"end":{"line":24,"column":21}},"6":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"7":{"start":{"line":27,"column":6},"end":{"line":27,"column":33}},"8":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"9":{"start":{"line":30,"column":6},"end":{"line":30,"column":50}},"10":{"start":{"line":32,"column":4},"end":{"line":43,"column":5}},"11":{"start":{"line":33,"column":6},"end":{"line":35,"column":56}},"12":{"start":{"line":37,"column":6},"end":{"line":42,"column":7}},"13":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"14":{"start":{"line":39,"column":10},"end":{"line":39,"column":42}},"15":{"start":{"line":41,"column":8},"end":{"line":41,"column":41}},"16":{"start":{"line":44,"column":4},"end":{"line":44,"column":17}},"17":{"start":{"line":47,"column":2},"end":{"line":47,"column":21}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":31},"end":{"line":21,"column":46}},{"start":{"line":21,"column":49},"end":{"line":21,"column":60}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":32},"end":{"line":35,"column":47}},{"start":{"line":35,"column":50},"end":{"line":35,"column":55}}]},"5":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]}},"code":["define(['./_arrayMap', './_baseIndexOf', './_baseIndexOfWith', './_baseUnary', './_copyArray'], function(arrayMap, baseIndexOf, baseIndexOfWith, baseUnary, copyArray) {","","  /** Used for built-in method references. */","  var arrayProto = Array.prototype;","","  /** Built-in value references. */","  var splice = arrayProto.splice;","","  /**","   * The base implementation of `_.pullAllBy` without support for iteratee","   * shorthands.","   *","   * @private","   * @param {Array} array The array to modify.","   * @param {Array} values The values to remove.","   * @param {Function} [iteratee] The iteratee invoked per element.","   * @param {Function} [comparator] The comparator invoked per element.","   * @returns {Array} Returns `array`.","   */","  function basePullAll(array, values, iteratee, comparator) {","    var indexOf = comparator ? baseIndexOfWith : baseIndexOf,","        index = -1,","        length = values.length,","        seen = array;","","    if (array === values) {","      values = copyArray(values);","    }","    if (iteratee) {","      seen = arrayMap(array, baseUnary(iteratee));","    }","    while (++index < length) {","      var fromIndex = 0,","          value = values[index],","          computed = iteratee ? iteratee(value) : value;","","      while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {","        if (seen !== array) {","          splice.call(seen, fromIndex, 1);","        }","        splice.call(array, fromIndex, 1);","      }","    }","    return array;","  }","","  return basePullAll;","});",""],"l":{"1":1,"4":0,"7":0,"20":1,"21":0,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0,"37":0,"38":0,"39":0,"41":0,"44":0,"47":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePullAt.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_basePullAt.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":85},"end":{"line":1,"column":141}}},"2":{"name":"basePullAt","line":18,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":46,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":35}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":33}},"4":{"start":{"line":18,"column":2},"end":{"line":43,"column":3}},"5":{"start":{"line":19,"column":4},"end":{"line":20,"column":31}},"6":{"start":{"line":22,"column":4},"end":{"line":41,"column":5}},"7":{"start":{"line":23,"column":6},"end":{"line":23,"column":34}},"8":{"start":{"line":24,"column":6},"end":{"line":40,"column":7}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":29}},"10":{"start":{"line":26,"column":8},"end":{"line":39,"column":9}},"11":{"start":{"line":27,"column":10},"end":{"line":27,"column":39}},"12":{"start":{"line":29,"column":13},"end":{"line":39,"column":9}},"13":{"start":{"line":30,"column":10},"end":{"line":31,"column":43}},"14":{"start":{"line":33,"column":10},"end":{"line":35,"column":11}},"15":{"start":{"line":34,"column":12},"end":{"line":34,"column":45}},"16":{"start":{"line":38,"column":10},"end":{"line":38,"column":37}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":17}},"18":{"start":{"line":45,"column":2},"end":{"line":45,"column":20}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":25},"end":{"line":19,"column":39}},{"start":{"line":19,"column":42},"end":{"line":19,"column":43}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":6}},{"start":{"line":24,"column":6},"end":{"line":24,"column":6}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":10},"end":{"line":24,"column":29}},{"start":{"line":24,"column":33},"end":{"line":24,"column":51}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":8}},{"start":{"line":26,"column":8},"end":{"line":26,"column":8}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":13},"end":{"line":29,"column":13}},{"start":{"line":29,"column":13},"end":{"line":29,"column":13}}]},"6":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":10},"end":{"line":33,"column":10}},{"start":{"line":33,"column":10},"end":{"line":33,"column":10}}]}},"code":["define(['./_castPath', './_isIndex', './_isKey', './last', './_parent', './_toKey'], function(castPath, isIndex, isKey, last, parent, toKey) {","","  /** Used for built-in method references. */","  var arrayProto = Array.prototype;","","  /** Built-in value references. */","  var splice = arrayProto.splice;","","  /**","   * The base implementation of `_.pullAt` without support for individual","   * indexes or capturing the removed elements.","   *","   * @private","   * @param {Array} array The array to modify.","   * @param {number[]} indexes The indexes of elements to remove.","   * @returns {Array} Returns `array`.","   */","  function basePullAt(array, indexes) {","    var length = array ? indexes.length : 0,","        lastIndex = length - 1;","","    while (length--) {","      var index = indexes[length];","      if (length == lastIndex || index !== previous) {","        var previous = index;","        if (isIndex(index)) {","          splice.call(array, index, 1);","        }","        else if (!isKey(index, array)) {","          var path = castPath(index),","              object = parent(array, path);","","          if (object != null) {","            delete object[toKey(last(path))];","          }","        }","        else {","          delete array[toKey(index)];","        }","      }","    }","    return array;","  }","","  return basePullAt;","});",""],"l":{"1":1,"4":0,"7":0,"18":1,"19":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"33":0,"34":0,"38":0,"42":0,"45":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseRandom.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseRandom.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseRandom","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":5,"column":33}},"3":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":69}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":20}}},"branchMap":{},"code":["define([], function() {","","  /* Built-in method references for those with the same name as other `lodash` methods. */","  var nativeFloor = Math.floor,","      nativeRandom = Math.random;","","  /**","   * The base implementation of `_.random` without support for returning","   * floating-point numbers.","   *","   * @private","   * @param {number} lower The lower bound.","   * @param {number} upper The upper bound.","   * @returns {number} Returns the random number.","   */","  function baseRandom(lower, upper) {","    return lower + nativeFloor(nativeRandom() * (upper - lower + 1));","  }","","  return baseRandom;","});",""],"l":{"1":1,"4":0,"16":1,"17":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseRange.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseRange.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseRange","line":18,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":31,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":5,"column":27}},"3":{"start":{"line":18,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":21,"column":31}},"5":{"start":{"line":23,"column":4},"end":{"line":26,"column":5}},"6":{"start":{"line":24,"column":6},"end":{"line":24,"column":51}},"7":{"start":{"line":25,"column":6},"end":{"line":25,"column":20}},"8":{"start":{"line":27,"column":4},"end":{"line":27,"column":18}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":19}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":55},"end":{"line":20,"column":59}},{"start":{"line":20,"column":63},"end":{"line":20,"column":64}}]},"2":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":25},"end":{"line":24,"column":31}},{"start":{"line":24,"column":34},"end":{"line":24,"column":41}}]}},"code":["define([], function() {","","  /* Built-in method references for those with the same name as other `lodash` methods. */","  var nativeCeil = Math.ceil,","      nativeMax = Math.max;","","  /**","   * The base implementation of `_.range` and `_.rangeRight` which doesn't","   * coerce arguments.","   *","   * @private","   * @param {number} start The start of the range.","   * @param {number} end The end of the range.","   * @param {number} step The value to increment or decrement by.","   * @param {boolean} [fromRight] Specify iterating from right to left.","   * @returns {Array} Returns the range of numbers.","   */","  function baseRange(start, end, step, fromRight) {","    var index = -1,","        length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),","        result = Array(length);","","    while (length--) {","      result[fromRight ? length : ++index] = start;","      start += step;","    }","    return result;","  }","","  return baseRange;","});",""],"l":{"1":1,"4":0,"18":1,"19":0,"23":0,"24":0,"25":0,"27":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseReduce.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseReduce.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseReduce","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":78}}},"3":{"name":"(anonymous_3)","line":17,"loc":{"start":{"line":17,"column":25},"end":{"line":17,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":26,"column":3}},"2":{"start":{"line":16,"column":2},"end":{"line":23,"column":3}},"3":{"start":{"line":17,"column":4},"end":{"line":21,"column":7}},"4":{"start":{"line":18,"column":6},"end":{"line":20,"column":58}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":23}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":20}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":19,"column":11},"end":{"line":19,"column":35}},{"start":{"line":20,"column":10},"end":{"line":20,"column":57}}]}},"code":["define([], function() {","","  /**","   * The base implementation of `_.reduce` and `_.reduceRight`, without support","   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.","   *","   * @private","   * @param {Array|Object} collection The collection to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @param {*} accumulator The initial value.","   * @param {boolean} initAccum Specify using the first or last element of","   *  `collection` as the initial value.","   * @param {Function} eachFunc The function to iterate over `collection`.","   * @returns {*} Returns the accumulated value.","   */","  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {","    eachFunc(collection, function(value, index, collection) {","      accumulator = initAccum","        ? (initAccum = false, value)","        : iteratee(accumulator, value, index, collection);","    });","    return accumulator;","  }","","  return baseReduce;","});",""],"l":{"1":1,"16":1,"17":0,"18":0,"22":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseRepeat.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseRepeat.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseRepeat","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":38,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":42}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":31}},"4":{"start":{"line":17,"column":2},"end":{"line":35,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":20}},"6":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"7":{"start":{"line":20,"column":6},"end":{"line":20,"column":20}},"8":{"start":{"line":24,"column":4},"end":{"line":32,"column":16}},"9":{"start":{"line":25,"column":6},"end":{"line":27,"column":7}},"10":{"start":{"line":26,"column":8},"end":{"line":26,"column":25}},"11":{"start":{"line":28,"column":6},"end":{"line":28,"column":29}},"12":{"start":{"line":29,"column":6},"end":{"line":31,"column":7}},"13":{"start":{"line":30,"column":8},"end":{"line":30,"column":25}},"14":{"start":{"line":34,"column":4},"end":{"line":34,"column":18}},"15":{"start":{"line":37,"column":2},"end":{"line":37,"column":20}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":15}},{"start":{"line":19,"column":19},"end":{"line":19,"column":24}},{"start":{"line":19,"column":28},"end":{"line":19,"column":48}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":6}},{"start":{"line":25,"column":6},"end":{"line":25,"column":6}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":6}},{"start":{"line":29,"column":6},"end":{"line":29,"column":6}}]}},"code":["define([], function() {","","  /** Used as references for various `Number` constants. */","  var MAX_SAFE_INTEGER = 9007199254740991;","","  /* Built-in method references for those with the same name as other `lodash` methods. */","  var nativeFloor = Math.floor;","","  /**","   * The base implementation of `_.repeat` which doesn't coerce arguments.","   *","   * @private","   * @param {string} string The string to repeat.","   * @param {number} n The number of times to repeat the string.","   * @returns {string} Returns the repeated string.","   */","  function baseRepeat(string, n) {","    var result = '';","    if (!string || n < 1 || n > MAX_SAFE_INTEGER) {","      return result;","    }","    // Leverage the exponentiation by squaring algorithm for a faster repeat.","    // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.","    do {","      if (n % 2) {","        result += string;","      }","      n = nativeFloor(n / 2);","      if (n) {","        string += string;","      }","    } while (n);","","    return result;","  }","","  return baseRepeat;","});",""],"l":{"1":1,"4":0,"7":0,"17":1,"18":0,"19":0,"20":0,"24":0,"25":0,"26":0,"28":0,"29":0,"30":0,"34":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseRest.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseRest.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":56},"end":{"line":1,"column":98}}},"2":{"name":"baseRest","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":67}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":18}}},"branchMap":{},"code":["define(['./identity', './_overRest', './_setToString'], function(identity, overRest, setToString) {","","  /**","   * The base implementation of `_.rest` which doesn't validate or coerce arguments.","   *","   * @private","   * @param {Function} func The function to apply a rest parameter to.","   * @param {number} [start=func.length-1] The start position of the rest parameter.","   * @returns {Function} Returns the new function.","   */","  function baseRest(func, start) {","    return setToString(overRest(func, start, identity), func + '');","  }","","  return baseRest;","});",""],"l":{"1":1,"11":1,"12":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSample.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSample.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":39},"end":{"line":1,"column":69}}},"2":{"name":"baseSample","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":43}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":20}}},"branchMap":{},"code":["define(['./_arraySample', './values'], function(arraySample, values) {","","  /**","   * The base implementation of `_.sample`.","   *","   * @private","   * @param {Array|Object} collection The collection to sample.","   * @returns {*} Returns the random element.","   */","  function baseSample(collection) {","    return arraySample(values(collection));","  }","","  return baseSample;","});",""],"l":{"1":1,"10":1,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSampleSize.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSampleSize.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":55},"end":{"line":1,"column":96}}},"2":{"name":"baseSampleSize","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":35}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":61}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":24}}},"branchMap":{},"code":["define(['./_baseClamp', './_shuffleSelf', './values'], function(baseClamp, shuffleSelf, values) {","","  /**","   * The base implementation of `_.sampleSize` without param guards.","   *","   * @private","   * @param {Array|Object} collection The collection to sample.","   * @param {number} n The number of elements to sample.","   * @returns {Array} Returns the random elements.","   */","  function baseSampleSize(collection, n) {","    var array = values(collection);","    return shuffleSelf(array, baseClamp(n, 0, array.length));","  }","","  return baseSampleSize;","});",""],"l":{"1":1,"11":1,"12":0,"13":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSetData.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSetData.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":37},"end":{"line":1,"column":65}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":42},"end":{"line":11,"column":63}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":14,"column":4}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":28}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":16}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":21}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":31},"end":{"line":11,"column":39}},{"start":{"line":11,"column":42},"end":{"line":14,"column":3}}]}},"code":["define(['./identity', './_metaMap'], function(identity, metaMap) {","","  /**","   * The base implementation of `setData` without support for hot loop shorting.","   *","   * @private","   * @param {Function} func The function to associate metadata with.","   * @param {*} data The metadata.","   * @returns {Function} Returns `func`.","   */","  var baseSetData = !metaMap ? identity : function(func, data) {","    metaMap.set(func, data);","    return func;","  };","","  return baseSetData;","});",""],"l":{"1":1,"11":0,"12":0,"13":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSet.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSet.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":94},"end":{"line":1,"column":159}}},"2":{"name":"baseSet","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":47,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":16,"column":2},"end":{"line":44,"column":3}},"4":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":18,"column":20}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":57}},"7":{"start":{"line":22,"column":4},"end":{"line":25,"column":24}},"8":{"start":{"line":27,"column":4},"end":{"line":42,"column":5}},"9":{"start":{"line":28,"column":6},"end":{"line":29,"column":27}},"10":{"start":{"line":31,"column":6},"end":{"line":39,"column":7}},"11":{"start":{"line":32,"column":8},"end":{"line":32,"column":35}},"12":{"start":{"line":33,"column":8},"end":{"line":33,"column":78}},"13":{"start":{"line":34,"column":8},"end":{"line":38,"column":9}},"14":{"start":{"line":35,"column":10},"end":{"line":37,"column":51}},"15":{"start":{"line":40,"column":6},"end":{"line":40,"column":41}},"16":{"start":{"line":41,"column":6},"end":{"line":41,"column":27}},"17":{"start":{"line":43,"column":4},"end":{"line":43,"column":18}},"18":{"start":{"line":46,"column":2},"end":{"line":46,"column":17}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":33},"end":{"line":20,"column":39}},{"start":{"line":20,"column":42},"end":{"line":20,"column":56}}]},"3":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":11},"end":{"line":27,"column":25}},{"start":{"line":27,"column":29},"end":{"line":27,"column":45}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"5":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":32},"end":{"line":33,"column":65}},{"start":{"line":33,"column":68},"end":{"line":33,"column":77}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":8}},{"start":{"line":34,"column":8},"end":{"line":34,"column":8}}]},"7":{"line":35,"type":"cond-expr","locations":[{"start":{"line":36,"column":14},"end":{"line":36,"column":22}},{"start":{"line":37,"column":15},"end":{"line":37,"column":49}}]},"8":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":42},"end":{"line":37,"column":44}},{"start":{"line":37,"column":47},"end":{"line":37,"column":49}}]}},"code":["define(['./_assignValue', './_castPath', './_isIndex', './_isKey', './isObject', './_toKey'], function(assignValue, castPath, isIndex, isKey, isObject, toKey) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.set`.","   *","   * @private","   * @param {Object} object The object to modify.","   * @param {Array|string} path The path of the property to set.","   * @param {*} value The value to set.","   * @param {Function} [customizer] The function to customize path creation.","   * @returns {Object} Returns `object`.","   */","  function baseSet(object, path, value, customizer) {","    if (!isObject(object)) {","      return object;","    }","    path = isKey(path, object) ? [path] : castPath(path);","","    var index = -1,","        length = path.length,","        lastIndex = length - 1,","        nested = object;","","    while (nested != null && ++index < length) {","      var key = toKey(path[index]),","          newValue = value;","","      if (index != lastIndex) {","        var objValue = nested[key];","        newValue = customizer ? customizer(objValue, key, nested) : undefined;","        if (newValue === undefined) {","          newValue = isObject(objValue)","            ? objValue","            : (isIndex(path[index + 1]) ? [] : {});","        }","      }","      assignValue(nested, key, newValue);","      nested = nested[key];","    }","    return object;","  }","","  return baseSet;","});",""],"l":{"1":1,"4":0,"16":1,"17":0,"18":0,"20":0,"22":0,"27":0,"28":0,"31":0,"32":0,"33":0,"34":0,"35":0,"40":0,"41":0,"43":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSetToString.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSetToString.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":58},"end":{"line":1,"column":103}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":53},"end":{"line":11,"column":76}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":18,"column":4}},"3":{"start":{"line":12,"column":4},"end":{"line":17,"column":7}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":25}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":42},"end":{"line":11,"column":50}},{"start":{"line":11,"column":53},"end":{"line":18,"column":3}}]}},"code":["define(['./constant', './_defineProperty', './identity'], function(constant, defineProperty, identity) {","","  /**","   * The base implementation of `setToString` without support for hot loop shorting.","   *","   * @private","   * @param {Function} func The function to modify.","   * @param {Function} string The `toString` result.","   * @returns {Function} Returns `func`.","   */","  var baseSetToString = !defineProperty ? identity : function(func, string) {","    return defineProperty(func, 'toString', {","      'configurable': true,","      'enumerable': false,","      'value': constant(string),","      'writable': true","    });","  };","","  return baseSetToString;","});",""],"l":{"1":1,"11":0,"12":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseShuffle.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseShuffle.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":39},"end":{"line":1,"column":69}}},"2":{"name":"baseShuffle","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":43}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":21}}},"branchMap":{},"code":["define(['./_shuffleSelf', './values'], function(shuffleSelf, values) {","","  /**","   * The base implementation of `_.shuffle`.","   *","   * @private","   * @param {Array|Object} collection The collection to shuffle.","   * @returns {Array} Returns the new shuffled array.","   */","  function baseShuffle(collection) {","    return shuffleSelf(values(collection));","  }","","  return baseShuffle;","});",""],"l":{"1":1,"10":1,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSlice.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSlice.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseSlice","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":34,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":31,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":14,"column":30}},"4":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"5":{"start":{"line":17,"column":6},"end":{"line":17,"column":53}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":38}},"7":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"8":{"start":{"line":21,"column":6},"end":{"line":21,"column":20}},"9":{"start":{"line":23,"column":4},"end":{"line":23,"column":53}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":17}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":31}},"12":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"13":{"start":{"line":28,"column":6},"end":{"line":28,"column":43}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":18}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":19}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":32},"end":{"line":17,"column":33}},{"start":{"line":17,"column":37},"end":{"line":17,"column":51}}]},"3":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":25},"end":{"line":19,"column":31}},{"start":{"line":19,"column":34},"end":{"line":19,"column":37}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"5":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":27},"end":{"line":23,"column":28}},{"start":{"line":23,"column":32},"end":{"line":23,"column":51}}]}},"code":["define([], function() {","","  /**","   * The base implementation of `_.slice` without an iteratee call guard.","   *","   * @private","   * @param {Array} array The array to slice.","   * @param {number} [start=0] The start position.","   * @param {number} [end=array.length] The end position.","   * @returns {Array} Returns the slice of `array`.","   */","  function baseSlice(array, start, end) {","    var index = -1,","        length = array.length;","","    if (start < 0) {","      start = -start > length ? 0 : (length + start);","    }","    end = end > length ? length : end;","    if (end < 0) {","      end += length;","    }","    length = start > end ? 0 : ((end - start) >>> 0);","    start >>>= 0;","","    var result = Array(length);","    while (++index < length) {","      result[index] = array[index + start];","    }","    return result;","  }","","  return baseSlice;","});",""],"l":{"1":1,"12":1,"13":0,"16":0,"17":0,"19":0,"20":0,"21":0,"23":0,"24":0,"26":0,"27":0,"28":0,"30":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSome.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSome.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":24},"end":{"line":1,"column":43}}},"2":{"name":"baseSome","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":43}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":25},"end":{"line":15,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":20,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":15}},"4":{"start":{"line":15,"column":4},"end":{"line":18,"column":7}},"5":{"start":{"line":16,"column":6},"end":{"line":16,"column":51}},"6":{"start":{"line":17,"column":6},"end":{"line":17,"column":21}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":18}}},"branchMap":{},"code":["define(['./_baseEach'], function(baseEach) {","","  /**","   * The base implementation of `_.some` without support for iteratee shorthands.","   *","   * @private","   * @param {Array|Object} collection The collection to iterate over.","   * @param {Function} predicate The function invoked per iteration.","   * @returns {boolean} Returns `true` if any element passes the predicate check,","   *  else `false`.","   */","  function baseSome(collection, predicate) {","    var result;","","    baseEach(collection, function(value, index, collection) {","      result = predicate(value, index, collection);","      return !result;","    });","    return !!result;","  }","","  return baseSome;","});",""],"l":{"1":1,"12":1,"13":0,"15":0,"16":0,"17":0,"19":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSortBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSortBy.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseSortBy","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":24,"column":3}},"2":{"start":{"line":13,"column":2},"end":{"line":21,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":30}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":25}},"5":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"6":{"start":{"line":18,"column":6},"end":{"line":18,"column":42}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":17}},"8":{"start":{"line":23,"column":2},"end":{"line":23,"column":20}}},"branchMap":{},"code":["define([], function() {","","  /**","   * The base implementation of `_.sortBy` which uses `comparer` to define the","   * sort order of `array` and replaces criteria objects with their corresponding","   * values.","   *","   * @private","   * @param {Array} array The array to sort.","   * @param {Function} comparer The function to define sort order.","   * @returns {Array} Returns `array`.","   */","  function baseSortBy(array, comparer) {","    var length = array.length;","","    array.sort(comparer);","    while (length--) {","      array[length] = array[length].value;","    }","    return array;","  }","","  return baseSortBy;","});",""],"l":{"1":1,"13":1,"14":0,"16":0,"17":0,"18":0,"20":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSortedIndexBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSortedIndexBy.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":42}}},"2":{"name":"baseSortedIndexBy","line":27,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":68,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":8,"column":45}},"4":{"start":{"line":11,"column":2},"end":{"line":12,"column":27}},"5":{"start":{"line":27,"column":2},"end":{"line":65,"column":3}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":28}},"7":{"start":{"line":30,"column":4},"end":{"line":35,"column":45}},"8":{"start":{"line":37,"column":4},"end":{"line":63,"column":5}},"9":{"start":{"line":38,"column":6},"end":{"line":43,"column":43}},"10":{"start":{"line":45,"column":6},"end":{"line":57,"column":7}},"11":{"start":{"line":46,"column":8},"end":{"line":46,"column":50}},"12":{"start":{"line":47,"column":13},"end":{"line":57,"column":7}},"13":{"start":{"line":48,"column":8},"end":{"line":48,"column":64}},"14":{"start":{"line":49,"column":13},"end":{"line":57,"column":7}},"15":{"start":{"line":50,"column":8},"end":{"line":50,"column":78}},"16":{"start":{"line":51,"column":13},"end":{"line":57,"column":7}},"17":{"start":{"line":52,"column":8},"end":{"line":52,"column":94}},"18":{"start":{"line":53,"column":13},"end":{"line":57,"column":7}},"19":{"start":{"line":54,"column":8},"end":{"line":54,"column":23}},"20":{"start":{"line":56,"column":8},"end":{"line":56,"column":71}},"21":{"start":{"line":58,"column":6},"end":{"line":62,"column":7}},"22":{"start":{"line":59,"column":8},"end":{"line":59,"column":22}},"23":{"start":{"line":61,"column":8},"end":{"line":61,"column":19}},"24":{"start":{"line":64,"column":4},"end":{"line":64,"column":44}},"25":{"start":{"line":67,"column":2},"end":{"line":67,"column":27}}},"branchMap":{"1":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":23},"end":{"line":31,"column":35}},{"start":{"line":31,"column":38},"end":{"line":31,"column":39}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"3":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":21},"end":{"line":46,"column":31}},{"start":{"line":46,"column":35},"end":{"line":46,"column":49}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":13},"end":{"line":47,"column":13}},{"start":{"line":47,"column":13},"end":{"line":47,"column":13}}]},"5":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":17},"end":{"line":48,"column":31}},{"start":{"line":48,"column":36},"end":{"line":48,"column":46}},{"start":{"line":48,"column":50},"end":{"line":48,"column":62}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":13},"end":{"line":49,"column":13}},{"start":{"line":49,"column":13},"end":{"line":49,"column":13}}]},"7":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":17},"end":{"line":50,"column":31}},{"start":{"line":50,"column":35},"end":{"line":50,"column":47}},{"start":{"line":50,"column":52},"end":{"line":50,"column":62}},{"start":{"line":50,"column":66},"end":{"line":50,"column":76}}]},"8":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":13},"end":{"line":51,"column":13}},{"start":{"line":51,"column":13},"end":{"line":51,"column":13}}]},"9":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":17},"end":{"line":52,"column":31}},{"start":{"line":52,"column":35},"end":{"line":52,"column":47}},{"start":{"line":52,"column":51},"end":{"line":52,"column":61}},{"start":{"line":52,"column":66},"end":{"line":52,"column":76}},{"start":{"line":52,"column":80},"end":{"line":52,"column":92}}]},"10":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":13},"end":{"line":53,"column":13}},{"start":{"line":53,"column":13},"end":{"line":53,"column":13}}]},"11":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":17},"end":{"line":53,"column":26}},{"start":{"line":53,"column":30},"end":{"line":53,"column":41}}]},"12":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":31},"end":{"line":56,"column":48}},{"start":{"line":56,"column":53},"end":{"line":56,"column":69}}]},"13":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]}},"code":["define(['./isSymbol'], function(isSymbol) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used as references for the maximum length and index of an array. */","  var MAX_ARRAY_LENGTH = 4294967295,","      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;","","  /* Built-in method references for those with the same name as other `lodash` methods. */","  var nativeFloor = Math.floor,","      nativeMin = Math.min;","","  /**","   * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`","   * which invokes `iteratee` for `value` and each element of `array` to compute","   * their sort ranking. The iteratee is invoked with one argument; (value).","   *","   * @private","   * @param {Array} array The sorted array to inspect.","   * @param {*} value The value to evaluate.","   * @param {Function} iteratee The iteratee invoked per element.","   * @param {boolean} [retHighest] Specify returning the highest qualified index.","   * @returns {number} Returns the index at which `value` should be inserted","   *  into `array`.","   */","  function baseSortedIndexBy(array, value, iteratee, retHighest) {","    value = iteratee(value);","","    var low = 0,","        high = array ? array.length : 0,","        valIsNaN = value !== value,","        valIsNull = value === null,","        valIsSymbol = isSymbol(value),","        valIsUndefined = value === undefined;","","    while (low < high) {","      var mid = nativeFloor((low + high) / 2),","          computed = iteratee(array[mid]),","          othIsDefined = computed !== undefined,","          othIsNull = computed === null,","          othIsReflexive = computed === computed,","          othIsSymbol = isSymbol(computed);","","      if (valIsNaN) {","        var setLow = retHighest || othIsReflexive;","      } else if (valIsUndefined) {","        setLow = othIsReflexive && (retHighest || othIsDefined);","      } else if (valIsNull) {","        setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);","      } else if (valIsSymbol) {","        setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);","      } else if (othIsNull || othIsSymbol) {","        setLow = false;","      } else {","        setLow = retHighest ? (computed <= value) : (computed < value);","      }","      if (setLow) {","        low = mid + 1;","      } else {","        high = mid;","      }","    }","    return nativeMin(high, MAX_ARRAY_INDEX);","  }","","  return baseSortedIndexBy;","});",""],"l":{"1":1,"4":0,"7":0,"11":0,"27":1,"28":0,"30":0,"37":0,"38":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"58":0,"59":0,"61":0,"64":0,"67":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSortedIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSortedIndex.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":61},"end":{"line":1,"column":109}}},"2":{"name":"baseSortedIndex","line":19,"loc":{"start":{"line":19,"column":2},"end":{"line":19,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":41,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":5,"column":53}},"3":{"start":{"line":19,"column":2},"end":{"line":38,"column":3}},"4":{"start":{"line":20,"column":4},"end":{"line":21,"column":42}},"5":{"start":{"line":23,"column":4},"end":{"line":36,"column":5}},"6":{"start":{"line":24,"column":6},"end":{"line":34,"column":7}},"7":{"start":{"line":25,"column":8},"end":{"line":26,"column":34}},"8":{"start":{"line":28,"column":8},"end":{"line":33,"column":9}},"9":{"start":{"line":30,"column":10},"end":{"line":30,"column":24}},"10":{"start":{"line":32,"column":10},"end":{"line":32,"column":21}},"11":{"start":{"line":35,"column":6},"end":{"line":35,"column":18}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":65}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":25}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":35}},{"start":{"line":21,"column":38},"end":{"line":21,"column":41}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"3":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":32}},{"start":{"line":23,"column":36},"end":{"line":23,"column":51}},{"start":{"line":23,"column":55},"end":{"line":23,"column":84}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"5":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":29}},{"start":{"line":28,"column":33},"end":{"line":28,"column":52}},{"start":{"line":29,"column":13},"end":{"line":29,"column":66}}]},"6":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":27},"end":{"line":29,"column":44}},{"start":{"line":29,"column":49},"end":{"line":29,"column":65}}]}},"code":["define(['./_baseSortedIndexBy', './identity', './isSymbol'], function(baseSortedIndexBy, identity, isSymbol) {","","  /** Used as references for the maximum length and index of an array. */","  var MAX_ARRAY_LENGTH = 4294967295,","      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;","","  /**","   * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which","   * performs a binary search of `array` to determine the index at which `value`","   * should be inserted into `array` in order to maintain its sort order.","   *","   * @private","   * @param {Array} array The sorted array to inspect.","   * @param {*} value The value to evaluate.","   * @param {boolean} [retHighest] Specify returning the highest qualified index.","   * @returns {number} Returns the index at which `value` should be inserted","   *  into `array`.","   */","  function baseSortedIndex(array, value, retHighest) {","    var low = 0,","        high = array ? array.length : low;","","    if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {","      while (low < high) {","        var mid = (low + high) >>> 1,","            computed = array[mid];","","        if (computed !== null && !isSymbol(computed) &&","            (retHighest ? (computed <= value) : (computed < value))) {","          low = mid + 1;","        } else {","          high = mid;","        }","      }","      return high;","    }","    return baseSortedIndexBy(array, value, identity, retHighest);","  }","","  return baseSortedIndex;","});",""],"l":{"1":1,"4":0,"19":1,"20":0,"23":0,"24":0,"25":0,"28":0,"30":0,"32":0,"35":0,"37":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSortedUniq.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSortedUniq.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":30}}},"2":{"name":"baseSortedUniq","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":31,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":28,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":16,"column":20}},"4":{"start":{"line":18,"column":4},"end":{"line":26,"column":5}},"5":{"start":{"line":19,"column":6},"end":{"line":20,"column":56}},"6":{"start":{"line":22,"column":6},"end":{"line":25,"column":7}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":28}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":53}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":18}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":24}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":32},"end":{"line":20,"column":47}},{"start":{"line":20,"column":50},"end":{"line":20,"column":55}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":6}},{"start":{"line":22,"column":6},"end":{"line":22,"column":6}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":10},"end":{"line":22,"column":16}},{"start":{"line":22,"column":20},"end":{"line":22,"column":39}}]},"4":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":43},"end":{"line":24,"column":44}},{"start":{"line":24,"column":47},"end":{"line":24,"column":52}}]}},"code":["define(['./eq'], function(eq) {","","  /**","   * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without","   * support for iteratee shorthands.","   *","   * @private","   * @param {Array} array The array to inspect.","   * @param {Function} [iteratee] The iteratee invoked per element.","   * @returns {Array} Returns the new duplicate free array.","   */","  function baseSortedUniq(array, iteratee) {","    var index = -1,","        length = array.length,","        resIndex = 0,","        result = [];","","    while (++index < length) {","      var value = array[index],","          computed = iteratee ? iteratee(value) : value;","","      if (!index || !eq(computed, seen)) {","        var seen = computed;","        result[resIndex++] = value === 0 ? 0 : value;","      }","    }","    return result;","  }","","  return baseSortedUniq;","});",""],"l":{"1":1,"12":1,"13":0,"18":0,"19":0,"22":0,"23":0,"24":0,"27":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSum.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseSum.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseSum","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":30,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":15,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":16,"column":4},"end":{"line":18,"column":30}},"5":{"start":{"line":20,"column":4},"end":{"line":25,"column":5}},"6":{"start":{"line":21,"column":6},"end":{"line":21,"column":43}},"7":{"start":{"line":22,"column":6},"end":{"line":24,"column":7}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":69}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":18}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":17}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":6}},{"start":{"line":22,"column":6},"end":{"line":22,"column":6}}]},"2":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":40},"end":{"line":23,"column":47}},{"start":{"line":23,"column":51},"end":{"line":23,"column":67}}]}},"code":["define([], function() {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * The base implementation of `_.sum` and `_.sumBy` without support for","   * iteratee shorthands.","   *","   * @private","   * @param {Array} array The array to iterate over.","   * @param {Function} iteratee The function invoked per iteration.","   * @returns {number} Returns the sum.","   */","  function baseSum(array, iteratee) {","    var result,","        index = -1,","        length = array.length;","","    while (++index < length) {","      var current = iteratee(array[index]);","      if (current !== undefined) {","        result = result === undefined ? current : (result + current);","      }","    }","    return result;","  }","","  return baseSum;","});",""],"l":{"1":1,"4":0,"15":1,"16":0,"20":0,"21":0,"22":0,"23":0,"26":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseTimes.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseTimes.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseTimes","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":20,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":14,"column":26}},"4":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"5":{"start":{"line":17,"column":6},"end":{"line":17,"column":38}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":19}}},"branchMap":{},"code":["define([], function() {","","  /**","   * The base implementation of `_.times` without support for iteratee shorthands","   * or max array length checks.","   *","   * @private","   * @param {number} n The number of times to invoke `iteratee`.","   * @param {Function} iteratee The function invoked per iteration.","   * @returns {Array} Returns the array of results.","   */","  function baseTimes(n, iteratee) {","    var index = -1,","        result = Array(n);","","    while (++index < n) {","      result[index] = iteratee(index);","    }","    return result;","  }","","  return baseTimes;","});",""],"l":{"1":1,"12":1,"13":0,"16":0,"17":0,"19":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseToNumber.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseToNumber.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":42}}},"2":{"name":"baseToNumber","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":25,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":18}},"3":{"start":{"line":14,"column":2},"end":{"line":22,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"5":{"start":{"line":16,"column":6},"end":{"line":16,"column":19}},"6":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"7":{"start":{"line":19,"column":6},"end":{"line":19,"column":17}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":18}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":22}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]}},"code":["define(['./isSymbol'], function(isSymbol) {","","  /** Used as references for various `Number` constants. */","  var NAN = 0 / 0;","","  /**","   * The base implementation of `_.toNumber` which doesn't ensure correct","   * conversions of binary, hexadecimal, or octal string values.","   *","   * @private","   * @param {*} value The value to process.","   * @returns {number} Returns the number.","   */","  function baseToNumber(value) {","    if (typeof value == 'number') {","      return value;","    }","    if (isSymbol(value)) {","      return NAN;","    }","    return +value;","  }","","  return baseToNumber;","});",""],"l":{"1":1,"4":0,"14":1,"15":0,"16":0,"18":0,"19":0,"21":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseToPairs.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseToPairs.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":24},"end":{"line":1,"column":43}}},"2":{"name":"baseToPairs","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":38}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":27},"end":{"line":13,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":16,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":15,"column":7}},"4":{"start":{"line":14,"column":6},"end":{"line":14,"column":32}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":21}}},"branchMap":{},"code":["define(['./_arrayMap'], function(arrayMap) {","","  /**","   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array","   * of key-value pairs for `object` corresponding to the property names of `props`.","   *","   * @private","   * @param {Object} object The object to query.","   * @param {Array} props The property names to get values for.","   * @returns {Object} Returns the key-value pairs.","   */","  function baseToPairs(object, props) {","    return arrayMap(props, function(key) {","      return [key, object[key]];","    });","  }","","  return baseToPairs;","});",""],"l":{"1":1,"12":1,"13":0,"14":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseToString.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseToString.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":64},"end":{"line":1,"column":110}}},"2":{"name":"baseToString","line":21,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":38,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":23}},"4":{"start":{"line":10,"column":2},"end":{"line":11,"column":70}},"5":{"start":{"line":21,"column":2},"end":{"line":35,"column":3}},"6":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"7":{"start":{"line":24,"column":6},"end":{"line":24,"column":19}},"8":{"start":{"line":26,"column":4},"end":{"line":29,"column":5}},"9":{"start":{"line":28,"column":6},"end":{"line":28,"column":48}},"10":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"11":{"start":{"line":31,"column":6},"end":{"line":31,"column":62}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":30}},"13":{"start":{"line":34,"column":4},"end":{"line":34,"column":71}},"14":{"start":{"line":37,"column":2},"end":{"line":37,"column":22}}},"branchMap":{"1":{"line":10,"type":"cond-expr","locations":[{"start":{"line":10,"column":29},"end":{"line":10,"column":45}},{"start":{"line":10,"column":48},"end":{"line":10,"column":57}}]},"2":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":37},"end":{"line":11,"column":57}},{"start":{"line":11,"column":60},"end":{"line":11,"column":69}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"5":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"6":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":30},"end":{"line":31,"column":56}},{"start":{"line":31,"column":59},"end":{"line":31,"column":61}}]},"7":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":57},"end":{"line":34,"column":61}},{"start":{"line":34,"column":64},"end":{"line":34,"column":70}}]},"8":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":25}},{"start":{"line":34,"column":29},"end":{"line":34,"column":53}}]}},"code":["define(['./_Symbol', './_arrayMap', './isArray', './isSymbol'], function(Symbol, arrayMap, isArray, isSymbol) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used as references for various `Number` constants. */","  var INFINITY = 1 / 0;","","  /** Used to convert symbols to primitives and strings. */","  var symbolProto = Symbol ? Symbol.prototype : undefined,","      symbolToString = symbolProto ? symbolProto.toString : undefined;","","  /**","   * The base implementation of `_.toString` which doesn't convert nullish","   * values to empty strings.","   *","   * @private","   * @param {*} value The value to process.","   * @returns {string} Returns the string.","   */","  function baseToString(value) {","    // Exit early for strings to avoid a performance hit in some environments.","    if (typeof value == 'string') {","      return value;","    }","    if (isArray(value)) {","      // Recursively convert values (susceptible to call stack limits).","      return arrayMap(value, baseToString) + '';","    }","    if (isSymbol(value)) {","      return symbolToString ? symbolToString.call(value) : '';","    }","    var result = (value + '');","    return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;","  }","","  return baseToString;","});",""],"l":{"1":1,"4":0,"7":0,"10":0,"21":1,"23":0,"24":0,"26":0,"28":0,"30":0,"31":0,"33":0,"34":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseUnary.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseUnary.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseUnary","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":27}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":11},"end":{"line":11,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":13,"column":6}},"4":{"start":{"line":12,"column":6},"end":{"line":12,"column":25}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":19}}},"branchMap":{},"code":["define([], function() {","","  /**","   * The base implementation of `_.unary` without support for storing metadata.","   *","   * @private","   * @param {Function} func The function to cap arguments for.","   * @returns {Function} Returns the new capped function.","   */","  function baseUnary(func) {","    return function(value) {","      return func(value);","    };","  }","","  return baseUnary;","});",""],"l":{"1":1,"10":1,"11":0,"12":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseUniq.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseUniq.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":116},"end":{"line":1,"column":202}}},"2":{"name":"baseUniq","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":68,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":29}},"3":{"start":{"line":15,"column":2},"end":{"line":65,"column":3}},"4":{"start":{"line":16,"column":4},"end":{"line":21,"column":22}},"5":{"start":{"line":23,"column":4},"end":{"line":38,"column":5}},"6":{"start":{"line":24,"column":6},"end":{"line":24,"column":23}},"7":{"start":{"line":25,"column":6},"end":{"line":25,"column":35}},"8":{"start":{"line":27,"column":9},"end":{"line":38,"column":5}},"9":{"start":{"line":28,"column":6},"end":{"line":28,"column":51}},"10":{"start":{"line":29,"column":6},"end":{"line":31,"column":7}},"11":{"start":{"line":30,"column":8},"end":{"line":30,"column":31}},"12":{"start":{"line":32,"column":6},"end":{"line":32,"column":23}},"13":{"start":{"line":33,"column":6},"end":{"line":33,"column":26}},"14":{"start":{"line":34,"column":6},"end":{"line":34,"column":26}},"15":{"start":{"line":37,"column":6},"end":{"line":37,"column":36}},"16":{"start":{"line":39,"column":4},"end":{"line":63,"column":5}},"17":{"start":{"line":40,"column":4},"end":{"line":63,"column":5}},"18":{"start":{"line":41,"column":6},"end":{"line":42,"column":56}},"19":{"start":{"line":44,"column":6},"end":{"line":44,"column":54}},"20":{"start":{"line":45,"column":6},"end":{"line":62,"column":7}},"21":{"start":{"line":46,"column":8},"end":{"line":46,"column":36}},"22":{"start":{"line":47,"column":8},"end":{"line":51,"column":9}},"23":{"start":{"line":48,"column":10},"end":{"line":50,"column":11}},"24":{"start":{"line":49,"column":12},"end":{"line":49,"column":27}},"25":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"26":{"start":{"line":53,"column":10},"end":{"line":53,"column":30}},"27":{"start":{"line":55,"column":8},"end":{"line":55,"column":27}},"28":{"start":{"line":57,"column":11},"end":{"line":62,"column":7}},"29":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"30":{"start":{"line":59,"column":10},"end":{"line":59,"column":30}},"31":{"start":{"line":61,"column":8},"end":{"line":61,"column":27}},"32":{"start":{"line":64,"column":4},"end":{"line":64,"column":18}},"33":{"start":{"line":67,"column":2},"end":{"line":67,"column":18}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":9}},{"start":{"line":27,"column":9},"end":{"line":27,"column":9}}]},"3":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":27},"end":{"line":28,"column":31}},{"start":{"line":28,"column":34},"end":{"line":28,"column":50}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":6}},{"start":{"line":29,"column":6},"end":{"line":29,"column":6}}]},"5":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":24},"end":{"line":37,"column":26}},{"start":{"line":37,"column":29},"end":{"line":37,"column":35}}]},"6":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":32},"end":{"line":42,"column":47}},{"start":{"line":42,"column":50},"end":{"line":42,"column":55}}]},"7":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":44},"end":{"line":44,"column":49}},{"start":{"line":44,"column":52},"end":{"line":44,"column":53}}]},"8":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":15},"end":{"line":44,"column":25}},{"start":{"line":44,"column":29},"end":{"line":44,"column":40}}]},"9":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"10":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":10},"end":{"line":45,"column":18}},{"start":{"line":45,"column":22},"end":{"line":45,"column":43}}]},"11":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":10},"end":{"line":48,"column":10}},{"start":{"line":48,"column":10},"end":{"line":48,"column":10}}]},"12":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"13":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":11},"end":{"line":57,"column":11}},{"start":{"line":57,"column":11},"end":{"line":57,"column":11}}]},"14":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]}},"code":["define(['./_SetCache', './_arrayIncludes', './_arrayIncludesWith', './_cacheHas', './_createSet', './_setToArray'], function(SetCache, arrayIncludes, arrayIncludesWith, cacheHas, createSet, setToArray) {","","  /** Used as the size to enable large array optimizations. */","  var LARGE_ARRAY_SIZE = 200;","","  /**","   * The base implementation of `_.uniqBy` without support for iteratee shorthands.","   *","   * @private","   * @param {Array} array The array to inspect.","   * @param {Function} [iteratee] The iteratee invoked per element.","   * @param {Function} [comparator] The comparator invoked per element.","   * @returns {Array} Returns the new duplicate free array.","   */","  function baseUniq(array, iteratee, comparator) {","    var index = -1,","        includes = arrayIncludes,","        length = array.length,","        isCommon = true,","        result = [],","        seen = result;","","    if (comparator) {","      isCommon = false;","      includes = arrayIncludesWith;","    }","    else if (length >= LARGE_ARRAY_SIZE) {","      var set = iteratee ? null : createSet(array);","      if (set) {","        return setToArray(set);","      }","      isCommon = false;","      includes = cacheHas;","      seen = new SetCache;","    }","    else {","      seen = iteratee ? [] : result;","    }","    outer:","    while (++index < length) {","      var value = array[index],","          computed = iteratee ? iteratee(value) : value;","","      value = (comparator || value !== 0) ? value : 0;","      if (isCommon && computed === computed) {","        var seenIndex = seen.length;","        while (seenIndex--) {","          if (seen[seenIndex] === computed) {","            continue outer;","          }","        }","        if (iteratee) {","          seen.push(computed);","        }","        result.push(value);","      }","      else if (!includes(seen, computed, comparator)) {","        if (seen !== result) {","          seen.push(computed);","        }","        result.push(value);","      }","    }","    return result;","  }","","  return baseUniq;","});",""],"l":{"1":1,"4":0,"15":1,"16":0,"23":0,"24":0,"25":0,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"34":0,"37":0,"39":0,"40":0,"41":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"52":0,"53":0,"55":0,"57":0,"58":0,"59":0,"61":0,"64":0,"67":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseUnset.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseUnset.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":71},"end":{"line":1,"column":118}}},"2":{"name":"baseUnset","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":26,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":37}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":50}},"4":{"start":{"line":17,"column":2},"end":{"line":23,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":57}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":34}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":32}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":87}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":19}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":33},"end":{"line":18,"column":39}},{"start":{"line":18,"column":42},"end":{"line":18,"column":56}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":11},"end":{"line":22,"column":64}},{"start":{"line":22,"column":68},"end":{"line":22,"column":86}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":13},"end":{"line":22,"column":27}},{"start":{"line":22,"column":31},"end":{"line":22,"column":63}}]}},"code":["define(['./_castPath', './_isKey', './last', './_parent', './_toKey'], function(castPath, isKey, last, parent, toKey) {","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /** Used to check objects for own properties. */","  var hasOwnProperty = objectProto.hasOwnProperty;","","  /**","   * The base implementation of `_.unset`.","   *","   * @private","   * @param {Object} object The object to modify.","   * @param {Array|string} path The path of the property to unset.","   * @returns {boolean} Returns `true` if the property is deleted, else `false`.","   */","  function baseUnset(object, path) {","    path = isKey(path, object) ? [path] : castPath(path);","    object = parent(object, path);","","    var key = toKey(last(path));","    return !(object != null && hasOwnProperty.call(object, key)) || delete object[key];","  }","","  return baseUnset;","});",""],"l":{"1":1,"4":0,"7":0,"17":1,"18":0,"19":0,"21":0,"22":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseUpdate.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseUpdate.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":37},"end":{"line":1,"column":64}}},"2":{"name":"baseUpdate","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":3}},"2":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":77}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":20}}},"branchMap":{},"code":["define(['./_baseGet', './_baseSet'], function(baseGet, baseSet) {","","  /**","   * The base implementation of `_.update`.","   *","   * @private","   * @param {Object} object The object to modify.","   * @param {Array|string} path The path of the property to update.","   * @param {Function} updater The function to produce the updated value.","   * @param {Function} [customizer] The function to customize path creation.","   * @returns {Object} Returns `object`.","   */","  function baseUpdate(object, path, updater, customizer) {","    return baseSet(object, path, updater(baseGet(object, path)), customizer);","  }","","  return baseUpdate;","});",""],"l":{"1":1,"13":1,"14":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseValues.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseValues.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":24},"end":{"line":1,"column":43}}},"2":{"name":"baseValues","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":37}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":27},"end":{"line":14,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":3}},"2":{"start":{"line":13,"column":2},"end":{"line":17,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":16,"column":7}},"4":{"start":{"line":15,"column":6},"end":{"line":15,"column":25}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":20}}},"branchMap":{},"code":["define(['./_arrayMap'], function(arrayMap) {","","  /**","   * The base implementation of `_.values` and `_.valuesIn` which creates an","   * array of `object` property values corresponding to the property names","   * of `props`.","   *","   * @private","   * @param {Object} object The object to query.","   * @param {Array} props The property names to get values for.","   * @returns {Object} Returns the array of property values.","   */","  function baseValues(object, props) {","    return arrayMap(props, function(key) {","      return object[key];","    });","  }","","  return baseValues;","});",""],"l":{"1":1,"13":1,"14":0,"15":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseWhile.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseWhile.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":25},"end":{"line":1,"column":45}}},"2":{"name":"baseWhile","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":3}},"2":{"start":{"line":14,"column":2},"end":{"line":24,"column":3}},"3":{"start":{"line":15,"column":4},"end":{"line":16,"column":40}},"4":{"start":{"line":18,"column":4},"end":{"line":19,"column":47}},"5":{"start":{"line":21,"column":4},"end":{"line":23,"column":84}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":19}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":28},"end":{"line":16,"column":34}},{"start":{"line":16,"column":37},"end":{"line":16,"column":39}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":50}},{"start":{"line":19,"column":6},"end":{"line":19,"column":43}}]},"3":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":24},"end":{"line":18,"column":31}},{"start":{"line":18,"column":34},"end":{"line":18,"column":50}}]},"4":{"line":21,"type":"cond-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":83}},{"start":{"line":23,"column":8},"end":{"line":23,"column":83}}]},"5":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":38},"end":{"line":22,"column":39}},{"start":{"line":22,"column":42},"end":{"line":22,"column":47}}]},"6":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":63},"end":{"line":22,"column":72}},{"start":{"line":22,"column":75},"end":{"line":22,"column":81}}]},"7":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":38},"end":{"line":23,"column":47}},{"start":{"line":23,"column":50},"end":{"line":23,"column":51}}]},"8":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":67},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":81}}]}},"code":["define(['./_baseSlice'], function(baseSlice) {","","  /**","   * The base implementation of methods like `_.dropWhile` and `_.takeWhile`","   * without support for iteratee shorthands.","   *","   * @private","   * @param {Array} array The array to query.","   * @param {Function} predicate The function invoked per iteration.","   * @param {boolean} [isDrop] Specify dropping elements instead of taking them.","   * @param {boolean} [fromRight] Specify iterating from right to left.","   * @returns {Array} Returns the slice of `array`.","   */","  function baseWhile(array, predicate, isDrop, fromRight) {","    var length = array.length,","        index = fromRight ? length : -1;","","    while ((fromRight ? index-- : ++index < length) &&","      predicate(array[index], index, array)) {}","","    return isDrop","      ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))","      : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));","  }","","  return baseWhile;","});",""],"l":{"1":1,"14":1,"15":0,"18":0,"21":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseWrapperValue.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseWrapperValue.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":61},"end":{"line":1,"column":107}}},"2":{"name":"baseWrapperValue","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":44}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":32},"end":{"line":18,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":24,"column":3}},"2":{"start":{"line":13,"column":2},"end":{"line":21,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":23}},"4":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"5":{"start":{"line":16,"column":6},"end":{"line":16,"column":30}},"6":{"start":{"line":18,"column":4},"end":{"line":20,"column":15}},"7":{"start":{"line":19,"column":6},"end":{"line":19,"column":81}},"8":{"start":{"line":23,"column":2},"end":{"line":23,"column":26}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]}},"code":["define(['./_LazyWrapper', './_arrayPush', './_arrayReduce'], function(LazyWrapper, arrayPush, arrayReduce) {","","  /**","   * The base implementation of `wrapperValue` which returns the result of","   * performing a sequence of actions on the unwrapped `value`, where each","   * successive action is supplied the return value of the previous.","   *","   * @private","   * @param {*} value The unwrapped value.","   * @param {Array} actions Actions to perform to resolve the unwrapped value.","   * @returns {*} Returns the resolved value.","   */","  function baseWrapperValue(value, actions) {","    var result = value;","    if (result instanceof LazyWrapper) {","      result = result.value();","    }","    return arrayReduce(actions, function(result, action) {","      return action.func.apply(action.thisArg, arrayPush([result], action.args));","    }, result);","  }","","  return baseWrapperValue;","});",""],"l":{"1":1,"13":1,"14":0,"15":0,"16":0,"18":0,"19":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseXor.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseXor.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":61},"end":{"line":1,"column":107}}},"2":{"name":"baseXor","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":3}},"2":{"start":{"line":13,"column":2},"end":{"line":26,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":15,"column":31}},"4":{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},"5":{"start":{"line":18,"column":6},"end":{"line":23,"column":24}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":83}},"7":{"start":{"line":28,"column":2},"end":{"line":28,"column":17}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":19,"column":10},"end":{"line":22,"column":11}},{"start":{"line":23,"column":10},"end":{"line":23,"column":23}}]},"2":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":39},"end":{"line":25,"column":77}},{"start":{"line":25,"column":80},"end":{"line":25,"column":82}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":18}},{"start":{"line":25,"column":22},"end":{"line":25,"column":35}}]}},"code":["define(['./_arrayPush', './_baseDifference', './_baseUniq'], function(arrayPush, baseDifference, baseUniq) {","","  /**","   * The base implementation of methods like `_.xor`, without support for","   * iteratee shorthands, that accepts an array of arrays to inspect.","   *","   * @private","   * @param {Array} arrays The arrays to inspect.","   * @param {Function} [iteratee] The iteratee invoked per element.","   * @param {Function} [comparator] The comparator invoked per element.","   * @returns {Array} Returns the new array of values.","   */","  function baseXor(arrays, iteratee, comparator) {","    var index = -1,","        length = arrays.length;","","    while (++index < length) {","      var result = result","        ? arrayPush(","            baseDifference(result, arrays[index], iteratee, comparator),","            baseDifference(arrays[index], result, iteratee, comparator)","          )","        : arrays[index];","    }","    return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];","  }","","  return baseXor;","});",""],"l":{"1":1,"13":1,"14":0,"17":0,"18":0,"25":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseZipObject.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_baseZipObject.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"baseZipObject","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":15,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":16,"column":4},"end":{"line":19,"column":20}},"5":{"start":{"line":21,"column":4},"end":{"line":24,"column":5}},"6":{"start":{"line":22,"column":6},"end":{"line":22,"column":65}},"7":{"start":{"line":23,"column":6},"end":{"line":23,"column":46}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":18}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":23}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":39},"end":{"line":22,"column":52}},{"start":{"line":22,"column":55},"end":{"line":22,"column":64}}]}},"code":["define([], function() {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * This base implementation of `_.zipObject` which assigns values using `assignFunc`.","   *","   * @private","   * @param {Array} props The property identifiers.","   * @param {Array} values The property values.","   * @param {Function} assignFunc The function to assign values.","   * @returns {Object} Returns the new object.","   */","  function baseZipObject(props, values, assignFunc) {","    var index = -1,","        length = props.length,","        valsLength = values.length,","        result = {};","","    while (++index < length) {","      var value = index < valsLength ? values[index] : undefined;","      assignFunc(result, props[index], value);","    }","    return result;","  }","","  return baseZipObject;","});",""],"l":{"1":1,"4":0,"15":1,"16":0,"21":0,"22":0,"23":0,"25":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/before.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/before.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":24},"end":{"line":1,"column":44}}},"2":{"name":"before","line":26,"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":27}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":22}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":44,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":46}},"4":{"start":{"line":26,"column":2},"end":{"line":41,"column":3}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":15}},"6":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"7":{"start":{"line":29,"column":6},"end":{"line":29,"column":43}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":21}},"9":{"start":{"line":32,"column":4},"end":{"line":40,"column":6}},"10":{"start":{"line":33,"column":6},"end":{"line":35,"column":7}},"11":{"start":{"line":34,"column":8},"end":{"line":34,"column":45}},"12":{"start":{"line":36,"column":6},"end":{"line":38,"column":7}},"13":{"start":{"line":37,"column":8},"end":{"line":37,"column":25}},"14":{"start":{"line":39,"column":6},"end":{"line":39,"column":20}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":16}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]}},"code":["define(['./toInteger'], function(toInteger) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Error message constants. */","  var FUNC_ERROR_TEXT = 'Expected a function';","","  /**","   * Creates a function that invokes `func`, with the `this` binding and arguments","   * of the created function, while it's called less than `n` times. Subsequent","   * calls to the created function return the result of the last `func` invocation.","   *","   * @static","   * @memberOf _","   * @since 3.0.0","   * @category Function","   * @param {number} n The number of calls at which `func` is no longer invoked.","   * @param {Function} func The function to restrict.","   * @returns {Function} Returns the new restricted function.","   * @example","   *","   * jQuery(element).on('click', _.before(5, addContactToList));","   * // => Allows adding up to 4 contacts to the list.","   */","  function before(n, func) {","    var result;","    if (typeof func != 'function') {","      throw new TypeError(FUNC_ERROR_TEXT);","    }","    n = toInteger(n);","    return function() {","      if (--n > 0) {","        result = func.apply(this, arguments);","      }","      if (n <= 1) {","        func = undefined;","      }","      return result;","    };","  }","","  return before;","});",""],"l":{"1":1,"4":0,"7":0,"26":1,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"39":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/bindAll.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/bindAll.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":84},"end":{"line":1,"column":144}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":55}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":27},"end":{"line":30,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":38,"column":3}},"2":{"start":{"line":29,"column":2},"end":{"line":35,"column":5}},"3":{"start":{"line":30,"column":4},"end":{"line":33,"column":7}},"4":{"start":{"line":31,"column":6},"end":{"line":31,"column":23}},"5":{"start":{"line":32,"column":6},"end":{"line":32,"column":62}},"6":{"start":{"line":34,"column":4},"end":{"line":34,"column":18}},"7":{"start":{"line":37,"column":2},"end":{"line":37,"column":17}}},"branchMap":{},"code":["define(['./_arrayEach', './_baseAssignValue', './bind', './_flatRest', './_toKey'], function(arrayEach, baseAssignValue, bind, flatRest, toKey) {","","  /**","   * Binds methods of an object to the object itself, overwriting the existing","   * method.","   *","   * **Note:** This method doesn't set the \"length\" property of bound functions.","   *","   * @static","   * @since 0.1.0","   * @memberOf _","   * @category Util","   * @param {Object} object The object to bind and assign the bound methods to.","   * @param {...(string|string[])} methodNames The object method names to bind.","   * @returns {Object} Returns `object`.","   * @example","   *","   * var view = {","   *   'label': 'docs',","   *   'click': function() {","   *     console.log('clicked ' + this.label);","   *   }","   * };","   *","   * _.bindAll(view, ['click']);","   * jQuery(element).on('click', view.click);","   * // => Logs 'clicked docs' when clicked.","   */","  var bindAll = flatRest(function(object, methodNames) {","    arrayEach(methodNames, function(key) {","      key = toKey(key);","      baseAssignValue(object, key, bind(object[key], object));","    });","    return object;","  });","","  return bindAll;","});",""],"l":{"1":1,"29":0,"30":0,"31":0,"32":0,"34":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/bind.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/bind.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":78},"end":{"line":1,"column":136}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":22},"end":{"line":42,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":55,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":5,"column":24}},"3":{"start":{"line":42,"column":2},"end":{"line":49,"column":5}},"4":{"start":{"line":43,"column":4},"end":{"line":43,"column":28}},"5":{"start":{"line":44,"column":4},"end":{"line":47,"column":5}},"6":{"start":{"line":45,"column":6},"end":{"line":45,"column":62}},"7":{"start":{"line":46,"column":6},"end":{"line":46,"column":30}},"8":{"start":{"line":48,"column":4},"end":{"line":48,"column":65}},"9":{"start":{"line":52,"column":2},"end":{"line":52,"column":24}},"10":{"start":{"line":54,"column":2},"end":{"line":54,"column":14}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]}},"code":["define(['./_baseRest', './_createWrap', './_getHolder', './_replaceHolders'], function(baseRest, createWrap, getHolder, replaceHolders) {","","  /** Used to compose bitmasks for function metadata. */","  var BIND_FLAG = 1,","      PARTIAL_FLAG = 32;","","  /**","   * Creates a function that invokes `func` with the `this` binding of `thisArg`","   * and `partials` prepended to the arguments it receives.","   *","   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,","   * may be used as a placeholder for partially applied arguments.","   *","   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"","   * property of bound functions.","   *","   * @static","   * @memberOf _","   * @since 0.1.0","   * @category Function","   * @param {Function} func The function to bind.","   * @param {*} thisArg The `this` binding of `func`.","   * @param {...*} [partials] The arguments to be partially applied.","   * @returns {Function} Returns the new bound function.","   * @example","   *","   * function greet(greeting, punctuation) {","   *   return greeting + ' ' + this.user + punctuation;","   * }","   *","   * var object = { 'user': 'fred' };","   *","   * var bound = _.bind(greet, object, 'hi');","   * bound('!');","   * // => 'hi fred!'","   *","   * // Bound with placeholders.","   * var bound = _.bind(greet, object, _, '!');","   * bound('hi');","   * // => 'hi fred!'","   */","  var bind = baseRest(function(func, thisArg, partials) {","    var bitmask = BIND_FLAG;","    if (partials.length) {","      var holders = replaceHolders(partials, getHolder(bind));","      bitmask |= PARTIAL_FLAG;","    }","    return createWrap(func, bitmask, thisArg, partials, holders);","  });","","  // Assign default placeholders.","  bind.placeholder = {};","","  return bind;","});",""],"l":{"1":1,"4":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"52":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/bindKey.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/bindKey.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":78},"end":{"line":1,"column":136}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":25},"end":{"line":53,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":66,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":6,"column":24}},"3":{"start":{"line":53,"column":2},"end":{"line":60,"column":5}},"4":{"start":{"line":54,"column":4},"end":{"line":54,"column":44}},"5":{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},"6":{"start":{"line":56,"column":6},"end":{"line":56,"column":65}},"7":{"start":{"line":57,"column":6},"end":{"line":57,"column":30}},"8":{"start":{"line":59,"column":4},"end":{"line":59,"column":63}},"9":{"start":{"line":63,"column":2},"end":{"line":63,"column":27}},"10":{"start":{"line":65,"column":2},"end":{"line":65,"column":17}}},"branchMap":{"1":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]}},"code":["define(['./_baseRest', './_createWrap', './_getHolder', './_replaceHolders'], function(baseRest, createWrap, getHolder, replaceHolders) {","","  /** Used to compose bitmasks for function metadata. */","  var BIND_FLAG = 1,","      BIND_KEY_FLAG = 2,","      PARTIAL_FLAG = 32;","","  /**","   * Creates a function that invokes the method at `object[key]` with `partials`","   * prepended to the arguments it receives.","   *","   * This method differs from `_.bind` by allowing bound functions to reference","   * methods that may be redefined or don't yet exist. See","   * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)","   * for more details.","   *","   * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic","   * builds, may be used as a placeholder for partially applied arguments.","   *","   * @static","   * @memberOf _","   * @since 0.10.0","   * @category Function","   * @param {Object} object The object to invoke the method on.","   * @param {string} key The key of the method.","   * @param {...*} [partials] The arguments to be partially applied.","   * @returns {Function} Returns the new bound function.","   * @example","   *","   * var object = {","   *   'user': 'fred',","   *   'greet': function(greeting, punctuation) {","   *     return greeting + ' ' + this.user + punctuation;","   *   }","   * };","   *","   * var bound = _.bindKey(object, 'greet', 'hi');","   * bound('!');","   * // => 'hi fred!'","   *","   * object.greet = function(greeting, punctuation) {","   *   return greeting + 'ya ' + this.user + punctuation;","   * };","   *","   * bound('!');","   * // => 'hiya fred!'","   *","   * // Bound with placeholders.","   * var bound = _.bindKey(object, 'greet', _, '!');","   * bound('hi');","   * // => 'hiya fred!'","   */","  var bindKey = baseRest(function(object, key, partials) {","    var bitmask = BIND_FLAG | BIND_KEY_FLAG;","    if (partials.length) {","      var holders = replaceHolders(partials, getHolder(bindKey));","      bitmask |= PARTIAL_FLAG;","    }","    return createWrap(key, bitmask, object, partials, holders);","  });","","  // Assign default placeholders.","  bindKey.placeholder = {};","","  return bindKey;","});",""],"l":{"1":1,"4":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"63":0,"65":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cacheHas.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cacheHas.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"cacheHas","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":26}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":18}}},"branchMap":{},"code":["define([], function() {","","  /**","   * Checks if a `cache` value for `key` exists.","   *","   * @private","   * @param {Object} cache The cache to query.","   * @param {string} key The key of the entry to check.","   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.","   */","  function cacheHas(cache, key) {","    return cache.has(key);","  }","","  return cacheHas;","});",""],"l":{"1":1,"11":1,"12":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/camelCase.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/camelCase.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":48},"end":{"line":1,"column":87}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":35},"end":{"line":23,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":3}},"2":{"start":{"line":23,"column":2},"end":{"line":26,"column":5}},"3":{"start":{"line":24,"column":4},"end":{"line":24,"column":30}},"4":{"start":{"line":25,"column":4},"end":{"line":25,"column":54}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":19}}},"branchMap":{"1":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":29},"end":{"line":25,"column":45}},{"start":{"line":25,"column":48},"end":{"line":25,"column":52}}]}},"code":["define(['./capitalize', './_createCompounder'], function(capitalize, createCompounder) {","","  /**","   * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).","   *","   * @static","   * @memberOf _","   * @since 3.0.0","   * @category String","   * @param {string} [string=''] The string to convert.","   * @returns {string} Returns the camel cased string.","   * @example","   *","   * _.camelCase('Foo Bar');","   * // => 'fooBar'","   *","   * _.camelCase('--foo-bar--');","   * // => 'fooBar'","   *","   * _.camelCase('__FOO_BAR__');","   * // => 'fooBar'","   */","  var camelCase = createCompounder(function(result, word, index) {","    word = word.toLowerCase();","    return result + (index ? capitalize(word) : word);","  });","","  return camelCase;","});",""],"l":{"1":1,"23":0,"24":0,"25":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/capitalize.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/capitalize.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":39},"end":{"line":1,"column":70}}},"2":{"name":"capitalize","line":18,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":3}},"2":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"3":{"start":{"line":19,"column":4},"end":{"line":19,"column":54}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}}},"branchMap":{},"code":["define(['./toString', './upperFirst'], function(toString, upperFirst) {","","  /**","   * Converts the first character of `string` to upper case and the remaining","   * to lower case.","   *","   * @static","   * @memberOf _","   * @since 3.0.0","   * @category String","   * @param {string} [string=''] The string to capitalize.","   * @returns {string} Returns the capitalized string.","   * @example","   *","   * _.capitalize('FRED');","   * // => 'Fred'","   */","  function capitalize(string) {","    return upperFirst(toString(string).toLowerCase());","  }","","  return capitalize;","});",""],"l":{"1":1,"18":1,"19":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/castArray.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/castArray.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":22},"end":{"line":1,"column":40}}},"2":{"name":"castArray","line":36,"loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":45,"column":3}},"2":{"start":{"line":36,"column":2},"end":{"line":42,"column":3}},"3":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"4":{"start":{"line":38,"column":6},"end":{"line":38,"column":16}},"5":{"start":{"line":40,"column":4},"end":{"line":40,"column":29}},"6":{"start":{"line":41,"column":4},"end":{"line":41,"column":44}},"7":{"start":{"line":44,"column":2},"end":{"line":44,"column":19}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"2":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":28},"end":{"line":41,"column":33}},{"start":{"line":41,"column":36},"end":{"line":41,"column":43}}]}},"code":["define(['./isArray'], function(isArray) {","","  /**","   * Casts `value` as an array if it's not one.","   *","   * @static","   * @memberOf _","   * @since 4.4.0","   * @category Lang","   * @param {*} value The value to inspect.","   * @returns {Array} Returns the cast array.","   * @example","   *","   * _.castArray(1);","   * // => [1]","   *","   * _.castArray({ 'a': 1 });","   * // => [{ 'a': 1 }]","   *","   * _.castArray('abc');","   * // => ['abc']","   *","   * _.castArray(null);","   * // => [null]","   *","   * _.castArray(undefined);","   * // => [undefined]","   *","   * _.castArray();","   * // => []","   *","   * var array = [1, 2, 3];","   * console.log(_.castArray(array) === array);","   * // => true","   */","  function castArray() {","    if (!arguments.length) {","      return [];","    }","    var value = arguments[0];","    return isArray(value) ? value : [value];","  }","","  return castArray;","});",""],"l":{"1":1,"36":1,"37":0,"38":0,"40":0,"41":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_castArrayLikeObject.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_castArrayLikeObject.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":32},"end":{"line":1,"column":60}}},"2":{"name":"castArrayLikeObject","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":49}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":29}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":38},"end":{"line":11,"column":43}},{"start":{"line":11,"column":46},"end":{"line":11,"column":48}}]}},"code":["define(['./isArrayLikeObject'], function(isArrayLikeObject) {","","  /**","   * Casts `value` to an empty array if it's not an array like object.","   *","   * @private","   * @param {*} value The value to inspect.","   * @returns {Array|Object} Returns the cast array-like object.","   */","  function castArrayLikeObject(value) {","    return isArrayLikeObject(value) ? value : [];","  }","","  return castArrayLikeObject;","});",""],"l":{"1":1,"10":1,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_castFunction.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_castFunction.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":42}}},"2":{"name":"castFunction","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":57}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":22}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":40},"end":{"line":11,"column":45}},{"start":{"line":11,"column":48},"end":{"line":11,"column":56}}]}},"code":["define(['./identity'], function(identity) {","","  /**","   * Casts `value` to `identity` if it's not a function.","   *","   * @private","   * @param {*} value The value to inspect.","   * @returns {Function} Returns cast function.","   */","  function castFunction(value) {","    return typeof value == 'function' ? value : identity;","  }","","  return castFunction;","});",""],"l":{"1":1,"10":1,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_castPath.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_castPath.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":41},"end":{"line":1,"column":73}}},"2":{"name":"castPath","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":56}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":18}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":28},"end":{"line":11,"column":33}},{"start":{"line":11,"column":36},"end":{"line":11,"column":55}}]}},"code":["define(['./isArray', './_stringToPath'], function(isArray, stringToPath) {","","  /**","   * Casts `value` to a path array if it's not one.","   *","   * @private","   * @param {*} value The value to inspect.","   * @returns {Array} Returns the cast property path array.","   */","  function castPath(value) {","    return isArray(value) ? value : stringToPath(value);","  }","","  return castPath;","});",""],"l":{"1":1,"10":1,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_castRest.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_castRest.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":24},"end":{"line":1,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":12,"column":26}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":18}}},"branchMap":{},"code":["define(['./_baseRest'], function(baseRest) {","","  /**","   * A `baseRest` alias which can be replaced with `identity` by module","   * replacement plugins.","   *","   * @private","   * @type {Function}","   * @param {Function} func The function to apply a rest parameter to.","   * @returns {Function} Returns the new function.","   */","  var castRest = baseRest;","","  return castRest;","});",""],"l":{"1":1,"12":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_castSlice.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_castSlice.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":25},"end":{"line":1,"column":45}}},"2":{"name":"castSlice","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":15,"column":2},"end":{"line":19,"column":3}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":30}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":43}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":76}},"7":{"start":{"line":21,"column":2},"end":{"line":21,"column":19}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":30},"end":{"line":17,"column":36}},{"start":{"line":17,"column":39},"end":{"line":17,"column":42}}]},"2":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":39},"end":{"line":18,"column":44}},{"start":{"line":18,"column":47},"end":{"line":18,"column":75}}]},"3":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":18}},{"start":{"line":18,"column":22},"end":{"line":18,"column":35}}]}},"code":["define(['./_baseSlice'], function(baseSlice) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * Casts `array` to a slice if it's needed.","   *","   * @private","   * @param {Array} array The array to inspect.","   * @param {number} start The start position.","   * @param {number} [end=array.length] The end position.","   * @returns {Array} Returns the cast slice.","   */","  function castSlice(array, start, end) {","    var length = array.length;","    end = end === undefined ? length : end;","    return (!start && end >= length) ? array : baseSlice(array, start, end);","  }","","  return castSlice;","});",""],"l":{"1":1,"4":0,"15":1,"16":0,"17":0,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/ceil.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/ceil.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":27},"end":{"line":1,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":3}},"2":{"start":{"line":24,"column":2},"end":{"line":24,"column":33}},"3":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}}},"branchMap":{},"code":["define(['./_createRound'], function(createRound) {","","  /**","   * Computes `number` rounded up to `precision`.","   *","   * @static","   * @memberOf _","   * @since 3.10.0","   * @category Math","   * @param {number} number The number to round up.","   * @param {number} [precision=0] The precision to round up to.","   * @returns {number} Returns the rounded up number.","   * @example","   *","   * _.ceil(4.006);","   * // => 5","   *","   * _.ceil(6.004, 2);","   * // => 6.01","   *","   * _.ceil(6040, -2);","   * // => 6100","   */","  var ceil = createRound('ceil');","","  return ceil;","});",""],"l":{"1":1,"24":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/chain.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/chain.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":28},"end":{"line":1,"column":45}}},"2":{"name":"chain","line":32,"loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":39,"column":3}},"2":{"start":{"line":32,"column":2},"end":{"line":36,"column":3}},"3":{"start":{"line":33,"column":4},"end":{"line":33,"column":31}},"4":{"start":{"line":34,"column":4},"end":{"line":34,"column":28}},"5":{"start":{"line":35,"column":4},"end":{"line":35,"column":18}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":15}}},"branchMap":{},"code":["define(['./wrapperLodash'], function(lodash) {","","  /**","   * Creates a `lodash` wrapper instance that wraps `value` with explicit method","   * chain sequences enabled. The result of such sequences must be unwrapped","   * with `_#value`.","   *","   * @static","   * @memberOf _","   * @since 1.3.0","   * @category Seq","   * @param {*} value The value to wrap.","   * @returns {Object} Returns the new `lodash` wrapper instance.","   * @example","   *","   * var users = [","   *   { 'user': 'barney',  'age': 36 },","   *   { 'user': 'fred',    'age': 40 },","   *   { 'user': 'pebbles', 'age': 1 }","   * ];","   *","   * var youngest = _","   *   .chain(users)","   *   .sortBy('age')","   *   .map(function(o) {","   *     return o.user + ' is ' + o.age;","   *   })","   *   .head()","   *   .value();","   * // => 'pebbles is 1'","   */","  function chain(value) {","    var result = lodash(value);","    result.__chain__ = true;","    return result;","  }","","  return chain;","});",""],"l":{"1":1,"32":1,"33":0,"34":0,"35":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_charsEndIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_charsEndIndex.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":27},"end":{"line":1,"column":49}}},"2":{"name":"charsEndIndex","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":17,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":34}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":76}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":17}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":23}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":11},"end":{"line":15,"column":18}},{"start":{"line":15,"column":22},"end":{"line":15,"column":72}}]}},"code":["define(['./_baseIndexOf'], function(baseIndexOf) {","","  /**","   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol","   * that is not found in the character symbols.","   *","   * @private","   * @param {Array} strSymbols The string symbols to inspect.","   * @param {Array} chrSymbols The character symbols to find.","   * @returns {number} Returns the index of the last unmatched string symbol.","   */","  function charsEndIndex(strSymbols, chrSymbols) {","    var index = strSymbols.length;","","    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}","    return index;","  }","","  return charsEndIndex;","});",""],"l":{"1":1,"12":1,"13":0,"15":0,"16":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_charsStartIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_charsStartIndex.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":27},"end":{"line":1,"column":49}}},"2":{"name":"charsStartIndex","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":18,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":14,"column":35}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":85}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":17}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":25}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":11},"end":{"line":16,"column":27}},{"start":{"line":16,"column":31},"end":{"line":16,"column":81}}]}},"code":["define(['./_baseIndexOf'], function(baseIndexOf) {","","  /**","   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol","   * that is not found in the character symbols.","   *","   * @private","   * @param {Array} strSymbols The string symbols to inspect.","   * @param {Array} chrSymbols The character symbols to find.","   * @returns {number} Returns the index of the first unmatched string symbol.","   */","  function charsStartIndex(strSymbols, chrSymbols) {","    var index = -1,","        length = strSymbols.length;","","    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}","    return index;","  }","","  return charsStartIndex;","});",""],"l":{"1":1,"12":1,"13":0,"16":0,"17":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/chunk.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/chunk.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":61},"end":{"line":1,"column":108}}},"2":{"name":"chunk","line":31,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":52,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":8,"column":27}},"4":{"start":{"line":31,"column":2},"end":{"line":49,"column":3}},"5":{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},"6":{"start":{"line":33,"column":6},"end":{"line":33,"column":15}},"7":{"start":{"line":35,"column":6},"end":{"line":35,"column":43}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":42}},"9":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"10":{"start":{"line":39,"column":6},"end":{"line":39,"column":16}},"11":{"start":{"line":41,"column":4},"end":{"line":43,"column":50}},"12":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"13":{"start":{"line":46,"column":6},"end":{"line":46,"column":68}},"14":{"start":{"line":48,"column":4},"end":{"line":48,"column":18}},"15":{"start":{"line":51,"column":2},"end":{"line":51,"column":15}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":17},"end":{"line":32,"column":51}},{"start":{"line":32,"column":54},"end":{"line":32,"column":72}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":25},"end":{"line":37,"column":37}},{"start":{"line":37,"column":40},"end":{"line":37,"column":41}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"5":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":15}},{"start":{"line":38,"column":19},"end":{"line":38,"column":27}}]}},"code":["define(['./_baseSlice', './_isIterateeCall', './toInteger'], function(baseSlice, isIterateeCall, toInteger) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /* Built-in method references for those with the same name as other `lodash` methods. */","  var nativeCeil = Math.ceil,","      nativeMax = Math.max;","","  /**","   * Creates an array of elements split into groups the length of `size`.","   * If `array` can't be split evenly, the final chunk will be the remaining","   * elements.","   *","   * @static","   * @memberOf _","   * @since 3.0.0","   * @category Array","   * @param {Array} array The array to process.","   * @param {number} [size=1] The length of each chunk","   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.","   * @returns {Array} Returns the new array of chunks.","   * @example","   *","   * _.chunk(['a', 'b', 'c', 'd'], 2);","   * // => [['a', 'b'], ['c', 'd']]","   *","   * _.chunk(['a', 'b', 'c', 'd'], 3);","   * // => [['a', 'b', 'c'], ['d']]","   */","  function chunk(array, size, guard) {","    if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {","      size = 1;","    } else {","      size = nativeMax(toInteger(size), 0);","    }","    var length = array ? array.length : 0;","    if (!length || size < 1) {","      return [];","    }","    var index = 0,","        resIndex = 0,","        result = Array(nativeCeil(length / size));","","    while (index < length) {","      result[resIndex++] = baseSlice(array, index, (index += size));","    }","    return result;","  }","","  return chunk;","});",""],"l":{"1":1,"4":0,"7":0,"31":1,"32":0,"33":0,"35":0,"37":0,"38":0,"39":0,"41":0,"45":0,"46":0,"48":0,"51":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/clamp.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/clamp.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":39},"end":{"line":1,"column":69}}},"2":{"name":"clamp","line":25,"loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":42,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":25,"column":2},"end":{"line":39,"column":3}},"4":{"start":{"line":26,"column":4},"end":{"line":29,"column":5}},"5":{"start":{"line":27,"column":6},"end":{"line":27,"column":20}},"6":{"start":{"line":28,"column":6},"end":{"line":28,"column":24}},"7":{"start":{"line":30,"column":4},"end":{"line":33,"column":5}},"8":{"start":{"line":31,"column":6},"end":{"line":31,"column":30}},"9":{"start":{"line":32,"column":6},"end":{"line":32,"column":42}},"10":{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},"11":{"start":{"line":35,"column":6},"end":{"line":35,"column":30}},"12":{"start":{"line":36,"column":6},"end":{"line":36,"column":42}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":53}},"14":{"start":{"line":41,"column":2},"end":{"line":41,"column":15}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"3":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":32},"end":{"line":32,"column":37}},{"start":{"line":32,"column":40},"end":{"line":32,"column":41}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"5":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":32},"end":{"line":36,"column":37}},{"start":{"line":36,"column":40},"end":{"line":36,"column":41}}]}},"code":["define(['./_baseClamp', './toNumber'], function(baseClamp, toNumber) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * Clamps `number` within the inclusive `lower` and `upper` bounds.","   *","   * @static","   * @memberOf _","   * @since 4.0.0","   * @category Number","   * @param {number} number The number to clamp.","   * @param {number} [lower] The lower bound.","   * @param {number} upper The upper bound.","   * @returns {number} Returns the clamped number.","   * @example","   *","   * _.clamp(-10, -5, 5);","   * // => -5","   *","   * _.clamp(10, -5, 5);","   * // => 5","   */","  function clamp(number, lower, upper) {","    if (upper === undefined) {","      upper = lower;","      lower = undefined;","    }","    if (upper !== undefined) {","      upper = toNumber(upper);","      upper = upper === upper ? upper : 0;","    }","    if (lower !== undefined) {","      lower = toNumber(lower);","      lower = lower === lower ? lower : 0;","    }","    return baseClamp(toNumber(number), lower, upper);","  }","","  return clamp;","});",""],"l":{"1":1,"4":0,"25":1,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"34":0,"35":0,"36":0,"38":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneArrayBuffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneArrayBuffer.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":26},"end":{"line":1,"column":47}}},"2":{"name":"cloneArrayBuffer","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":69}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":60}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":18}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":26}}},"branchMap":{},"code":["define(['./_Uint8Array'], function(Uint8Array) {","","  /**","   * Creates a clone of `arrayBuffer`.","   *","   * @private","   * @param {ArrayBuffer} arrayBuffer The array buffer to clone.","   * @returns {ArrayBuffer} Returns the cloned array buffer.","   */","  function cloneArrayBuffer(arrayBuffer) {","    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);","    new Uint8Array(result).set(new Uint8Array(arrayBuffer));","    return result;","  }","","  return cloneArrayBuffer;","});",""],"l":{"1":1,"10":1,"11":0,"12":0,"13":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneBuffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneBuffer.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0,0,0],"2":[0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":20},"end":{"line":1,"column":35}}},"2":{"name":"cloneBuffer","line":27,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":39,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":90}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":100}},"5":{"start":{"line":13,"column":2},"end":{"line":13,"column":71}},"6":{"start":{"line":16,"column":2},"end":{"line":17,"column":60}},"7":{"start":{"line":27,"column":2},"end":{"line":36,"column":3}},"8":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"9":{"start":{"line":29,"column":6},"end":{"line":29,"column":28}},"10":{"start":{"line":31,"column":4},"end":{"line":32,"column":84}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":24}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":18}},"13":{"start":{"line":38,"column":2},"end":{"line":38,"column":21}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":20},"end":{"line":7,"column":46}},{"start":{"line":7,"column":50},"end":{"line":7,"column":57}},{"start":{"line":7,"column":61},"end":{"line":7,"column":78}},{"start":{"line":7,"column":82},"end":{"line":7,"column":89}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":19},"end":{"line":10,"column":30}},{"start":{"line":10,"column":34},"end":{"line":10,"column":59}},{"start":{"line":10,"column":63},"end":{"line":10,"column":69}},{"start":{"line":10,"column":73},"end":{"line":10,"column":89}},{"start":{"line":10,"column":93},"end":{"line":10,"column":99}}]},"3":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":22},"end":{"line":13,"column":32}},{"start":{"line":13,"column":36},"end":{"line":13,"column":70}}]},"4":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":31},"end":{"line":16,"column":42}},{"start":{"line":16,"column":45},"end":{"line":16,"column":54}}]},"5":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":29},"end":{"line":17,"column":47}},{"start":{"line":17,"column":50},"end":{"line":17,"column":59}}]},"6":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"7":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":31},"end":{"line":32,"column":50}},{"start":{"line":32,"column":53},"end":{"line":32,"column":83}}]}},"code":["define(['./_root'], function(root) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Detect free variable `exports`. */","  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;","","  /** Detect free variable `module`. */","  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;","","  /** Detect the popular CommonJS extension `module.exports`. */","  var moduleExports = freeModule && freeModule.exports === freeExports;","","  /** Built-in value references. */","  var Buffer = moduleExports ? root.Buffer : undefined,","      allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;","","  /**","   * Creates a clone of  `buffer`.","   *","   * @private","   * @param {Buffer} buffer The buffer to clone.","   * @param {boolean} [isDeep] Specify a deep clone.","   * @returns {Buffer} Returns the cloned buffer.","   */","  function cloneBuffer(buffer, isDeep) {","    if (isDeep) {","      return buffer.slice();","    }","    var length = buffer.length,","        result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);","","    buffer.copy(result);","    return result;","  }","","  return cloneBuffer;","});",""],"l":{"1":1,"4":0,"7":0,"10":0,"13":0,"16":0,"27":1,"28":0,"29":0,"31":0,"34":0,"35":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneDataView.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneDataView.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":32},"end":{"line":1,"column":59}}},"2":{"name":"cloneDataView","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":78}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":86}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":23}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":26},"end":{"line":12,"column":59}},{"start":{"line":12,"column":62},"end":{"line":12,"column":77}}]}},"code":["define(['./_cloneArrayBuffer'], function(cloneArrayBuffer) {","","  /**","   * Creates a clone of `dataView`.","   *","   * @private","   * @param {Object} dataView The data view to clone.","   * @param {boolean} [isDeep] Specify a deep clone.","   * @returns {Object} Returns the cloned data view.","   */","  function cloneDataView(dataView, isDeep) {","    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;","    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);","  }","","  return cloneDataView;","});",""],"l":{"1":1,"11":1,"12":0,"13":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/cloneDeep.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/cloneDeep.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":25},"end":{"line":1,"column":45}}},"2":{"name":"cloneDeep","line":21,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":26,"column":3}},"2":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"3":{"start":{"line":22,"column":4},"end":{"line":22,"column":40}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":19}}},"branchMap":{},"code":["define(['./_baseClone'], function(baseClone) {","","  /**","   * This method is like `_.clone` except that it recursively clones `value`.","   *","   * @static","   * @memberOf _","   * @since 1.0.0","   * @category Lang","   * @param {*} value The value to recursively clone.","   * @returns {*} Returns the deep cloned value.","   * @see _.clone","   * @example","   *","   * var objects = [{ 'a': 1 }, { 'b': 2 }];","   *","   * var deep = _.cloneDeep(objects);","   * console.log(deep[0] === objects[0]);","   * // => false","   */","  function cloneDeep(value) {","    return baseClone(value, true, true);","  }","","  return cloneDeep;","});",""],"l":{"1":1,"21":1,"22":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/cloneDeepWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/cloneDeepWith.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":25},"end":{"line":1,"column":45}}},"2":{"name":"cloneDeepWith","line":31,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":36,"column":3}},"2":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"3":{"start":{"line":32,"column":4},"end":{"line":32,"column":52}},"4":{"start":{"line":35,"column":2},"end":{"line":35,"column":23}}},"branchMap":{},"code":["define(['./_baseClone'], function(baseClone) {","","  /**","   * This method is like `_.cloneWith` except that it recursively clones `value`.","   *","   * @static","   * @memberOf _","   * @since 4.0.0","   * @category Lang","   * @param {*} value The value to recursively clone.","   * @param {Function} [customizer] The function to customize cloning.","   * @returns {*} Returns the deep cloned value.","   * @see _.cloneWith","   * @example","   *","   * function customizer(value) {","   *   if (_.isElement(value)) {","   *     return value.cloneNode(true);","   *   }","   * }","   *","   * var el = _.cloneDeepWith(document.body, customizer);","   *","   * console.log(el === document.body);","   * // => false","   * console.log(el.nodeName);","   * // => 'BODY'","   * console.log(el.childNodes.length);","   * // => 20","   */","  function cloneDeepWith(value, customizer) {","    return baseClone(value, true, true, customizer);","  }","","  return cloneDeepWith;","});",""],"l":{"1":1,"31":1,"32":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/clone.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/clone.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":25},"end":{"line":1,"column":45}}},"2":{"name":"clone","line":29,"loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":34,"column":3}},"2":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"3":{"start":{"line":30,"column":4},"end":{"line":30,"column":41}},"4":{"start":{"line":33,"column":2},"end":{"line":33,"column":15}}},"branchMap":{},"code":["define(['./_baseClone'], function(baseClone) {","","  /**","   * Creates a shallow clone of `value`.","   *","   * **Note:** This method is loosely based on the","   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)","   * and supports cloning arrays, array buffers, booleans, date objects, maps,","   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed","   * arrays. The own enumerable properties of `arguments` objects are cloned","   * as plain objects. An empty object is returned for uncloneable values such","   * as error objects, functions, DOM nodes, and WeakMaps.","   *","   * @static","   * @memberOf _","   * @since 0.1.0","   * @category Lang","   * @param {*} value The value to clone.","   * @returns {*} Returns the cloned value.","   * @see _.cloneDeep","   * @example","   *","   * var objects = [{ 'a': 1 }, { 'b': 2 }];","   *","   * var shallow = _.clone(objects);","   * console.log(shallow[0] === objects[0]);","   * // => true","   */","  function clone(value) {","    return baseClone(value, false, true);","  }","","  return clone;","});",""],"l":{"1":1,"29":1,"30":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneMap.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneMap.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":62},"end":{"line":1,"column":109}}},"2":{"name":"cloneMap","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":15,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":76}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":64}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":25},"end":{"line":13,"column":57}},{"start":{"line":13,"column":60},"end":{"line":13,"column":75}}]}},"code":["define(['./_addMapEntry', './_arrayReduce', './_mapToArray'], function(addMapEntry, arrayReduce, mapToArray) {","","  /**","   * Creates a clone of `map`.","   *","   * @private","   * @param {Object} map The map to clone.","   * @param {Function} cloneFunc The function to clone values.","   * @param {boolean} [isDeep] Specify a deep clone.","   * @returns {Object} Returns the cloned map.","   */","  function cloneMap(map, isDeep, cloneFunc) {","    var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);","    return arrayReduce(array, addMapEntry, new map.constructor);","  }","","  return cloneMap;","});",""],"l":{"1":1,"12":1,"13":0,"14":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneRegExp.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneRegExp.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"cloneRegExp","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":23}},"3":{"start":{"line":13,"column":2},"end":{"line":17,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":77}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":40}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":18}},"7":{"start":{"line":19,"column":2},"end":{"line":19,"column":21}}},"branchMap":{},"code":["define([], function() {","","  /** Used to match `RegExp` flags from their coerced string values. */","  var reFlags = /\\w*$/;","","  /**","   * Creates a clone of `regexp`.","   *","   * @private","   * @param {Object} regexp The regexp to clone.","   * @returns {Object} Returns the cloned regexp.","   */","  function cloneRegExp(regexp) {","    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));","    result.lastIndex = regexp.lastIndex;","    return result;","  }","","  return cloneRegExp;","});",""],"l":{"1":1,"4":0,"13":1,"14":0,"15":0,"16":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneSet.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneSet.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":62},"end":{"line":1,"column":109}}},"2":{"name":"cloneSet","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":15,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":76}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":64}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":25},"end":{"line":13,"column":57}},{"start":{"line":13,"column":60},"end":{"line":13,"column":75}}]}},"code":["define(['./_addSetEntry', './_arrayReduce', './_setToArray'], function(addSetEntry, arrayReduce, setToArray) {","","  /**","   * Creates a clone of `set`.","   *","   * @private","   * @param {Object} set The set to clone.","   * @param {Function} cloneFunc The function to clone values.","   * @param {boolean} [isDeep] Specify a deep clone.","   * @returns {Object} Returns the cloned set.","   */","  function cloneSet(set, isDeep, cloneFunc) {","    var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);","    return arrayReduce(array, addSetEntry, new set.constructor);","  }","","  return cloneSet;","});",""],"l":{"1":1,"12":1,"13":0,"14":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneSymbol.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneSymbol.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":22},"end":{"line":1,"column":39}}},"2":{"name":"cloneSymbol","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":8,"column":68}},"4":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":67}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":21}}},"branchMap":{"1":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":29},"end":{"line":7,"column":45}},{"start":{"line":7,"column":48},"end":{"line":7,"column":57}}]},"2":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":36},"end":{"line":8,"column":55}},{"start":{"line":8,"column":58},"end":{"line":8,"column":67}}]},"3":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":27},"end":{"line":18,"column":61}},{"start":{"line":18,"column":64},"end":{"line":18,"column":66}}]}},"code":["define(['./_Symbol'], function(Symbol) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used to convert symbols to primitives and strings. */","  var symbolProto = Symbol ? Symbol.prototype : undefined,","      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;","","  /**","   * Creates a clone of the `symbol` object.","   *","   * @private","   * @param {Object} symbol The symbol object to clone.","   * @returns {Object} Returns the cloned symbol object.","   */","  function cloneSymbol(symbol) {","    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};","  }","","  return cloneSymbol;","});",""],"l":{"1":1,"4":0,"7":0,"17":1,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneTypedArray.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_cloneTypedArray.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":32},"end":{"line":1,"column":59}}},"2":{"name":"cloneTypedArray","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":82}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":88}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":26},"end":{"line":12,"column":61}},{"start":{"line":12,"column":64},"end":{"line":12,"column":81}}]}},"code":["define(['./_cloneArrayBuffer'], function(cloneArrayBuffer) {","","  /**","   * Creates a clone of `typedArray`.","   *","   * @private","   * @param {Object} typedArray The typed array to clone.","   * @param {boolean} [isDeep] Specify a deep clone.","   * @returns {Object} Returns the cloned typed array.","   */","  function cloneTypedArray(typedArray, isDeep) {","    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;","    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);","  }","","  return cloneTypedArray;","});",""],"l":{"1":1,"11":1,"12":0,"13":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/cloneWith.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/cloneWith.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":25},"end":{"line":1,"column":45}}},"2":{"name":"cloneWith","line":34,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":39,"column":3}},"2":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"3":{"start":{"line":35,"column":4},"end":{"line":35,"column":53}},"4":{"start":{"line":38,"column":2},"end":{"line":38,"column":19}}},"branchMap":{},"code":["define(['./_baseClone'], function(baseClone) {","","  /**","   * This method is like `_.clone` except that it accepts `customizer` which","   * is invoked to produce the cloned value. If `customizer` returns `undefined`,","   * cloning is handled by the method instead. The `customizer` is invoked with","   * up to four arguments; (value [, index|key, object, stack]).","   *","   * @static","   * @memberOf _","   * @since 4.0.0","   * @category Lang","   * @param {*} value The value to clone.","   * @param {Function} [customizer] The function to customize cloning.","   * @returns {*} Returns the cloned value.","   * @see _.cloneDeepWith","   * @example","   *","   * function customizer(value) {","   *   if (_.isElement(value)) {","   *     return value.cloneNode(false);","   *   }","   * }","   *","   * var el = _.cloneWith(document.body, customizer);","   *","   * console.log(el === document.body);","   * // => false","   * console.log(el.nodeName);","   * // => 'BODY'","   * console.log(el.childNodes.length);","   * // => 0","   */","  function cloneWith(value, customizer) {","    return baseClone(value, false, true, customizer);","  }","","  return cloneWith;","});",""],"l":{"1":1,"34":1,"35":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/collection.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":377},"end":{"line":1,"column":642}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":32,"column":3}},"2":{"start":{"line":2,"column":2},"end":{"line":31,"column":4}}},"branchMap":{},"code":["define(['./countBy', './each', './eachRight', './every', './filter', './find', './findLast', './flatMap', './flatMapDeep', './flatMapDepth', './forEach', './forEachRight', './groupBy', './includes', './invokeMap', './keyBy', './map', './orderBy', './partition', './reduce', './reduceRight', './reject', './sample', './sampleSize', './shuffle', './size', './some', './sortBy'], function(countBy, each, eachRight, every, filter, find, findLast, flatMap, flatMapDeep, flatMapDepth, forEach, forEachRight, groupBy, includes, invokeMap, keyBy, map, orderBy, partition, reduce, reduceRight, reject, sample, sampleSize, shuffle, size, some, sortBy) {","  return {","    'countBy': countBy,","    'each': each,","    'eachRight': eachRight,","    'every': every,","    'filter': filter,","    'find': find,","    'findLast': findLast,","    'flatMap': flatMap,","    'flatMapDeep': flatMapDeep,","    'flatMapDepth': flatMapDepth,","    'forEach': forEach,","    'forEachRight': forEachRight,","    'groupBy': groupBy,","    'includes': includes,","    'invokeMap': invokeMap,","    'keyBy': keyBy,","    'map': map,","    'orderBy': orderBy,","    'partition': partition,","    'reduce': reduce,","    'reduceRight': reduceRight,","    'reject': reject,","    'sample': sample,","    'sampleSize': sampleSize,","    'shuffle': shuffle,","    'size': size,","    'some': some,","    'sortBy': sortBy","  };","});",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/commit.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/commit.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":29},"end":{"line":1,"column":53}}},"2":{"name":"wrapperCommit","line":29,"loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":34,"column":3}},"2":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"3":{"start":{"line":30,"column":4},"end":{"line":30,"column":59}},"4":{"start":{"line":33,"column":2},"end":{"line":33,"column":23}}},"branchMap":{},"code":["define(['./_LodashWrapper'], function(LodashWrapper) {","","  /**","   * Executes the chain sequence and returns the wrapped result.","   *","   * @name commit","   * @memberOf _","   * @since 3.2.0","   * @category Seq","   * @returns {Object} Returns the new `lodash` wrapper instance.","   * @example","   *","   * var array = [1, 2];","   * var wrapped = _(array).push(3);","   *","   * console.log(array);","   * // => [1, 2]","   *","   * wrapped = wrapped.commit();","   * console.log(array);","   * // => [1, 2, 3]","   *","   * wrapped.last();","   * // => 3","   *","   * console.log(array);","   * // => [1, 2, 3]","   */","  function wrapperCommit() {","    return new LodashWrapper(this.value(), this.__chain__);","  }","","  return wrapperCommit;","});",""],"l":{"1":1,"29":1,"30":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/compact.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/compact.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"compact","line":18,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":26}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":34,"column":3}},"2":{"start":{"line":18,"column":2},"end":{"line":31,"column":3}},"3":{"start":{"line":19,"column":4},"end":{"line":22,"column":20}},"4":{"start":{"line":24,"column":4},"end":{"line":29,"column":5}},"5":{"start":{"line":25,"column":6},"end":{"line":25,"column":31}},"6":{"start":{"line":26,"column":6},"end":{"line":28,"column":7}},"7":{"start":{"line":27,"column":8},"end":{"line":27,"column":35}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":18}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":17}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":25},"end":{"line":20,"column":37}},{"start":{"line":20,"column":40},"end":{"line":20,"column":41}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":6}},{"start":{"line":26,"column":6},"end":{"line":26,"column":6}}]}},"code":["define([], function() {","","  /**","   * Creates an array with all falsey values removed. The values `false`, `null`,","   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.","   *","   * @static","   * @memberOf _","   * @since 0.1.0","   * @category Array","   * @param {Array} array The array to compact.","   * @returns {Array} Returns the new array of filtered values.","   * @example","   *","   * _.compact([0, 1, false, 2, '', 3]);","   * // => [1, 2, 3]","   */","  function compact(array) {","    var index = -1,","        length = array ? array.length : 0,","        resIndex = 0,","        result = [];","","    while (++index < length) {","      var value = array[index];","      if (value) {","        result[resIndex++] = value;","      }","    }","    return result;","  }","","  return compact;","});",""],"l":{"1":1,"18":1,"19":0,"24":0,"25":0,"26":0,"27":0,"30":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_compareAscending.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_compareAscending.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"4":[0,0],"5":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":42}}},"2":{"name":"compareAscending","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":45,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":14,"column":2},"end":{"line":42,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":40,"column":5}},"5":{"start":{"line":16,"column":6},"end":{"line":19,"column":40}},"6":{"start":{"line":21,"column":6},"end":{"line":24,"column":40}},"7":{"start":{"line":26,"column":6},"end":{"line":32,"column":7}},"8":{"start":{"line":31,"column":8},"end":{"line":31,"column":17}},"9":{"start":{"line":33,"column":6},"end":{"line":39,"column":7}},"10":{"start":{"line":38,"column":8},"end":{"line":38,"column":18}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":13}},"12":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":6}},{"start":{"line":26,"column":6},"end":{"line":26,"column":6}}]},"3":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":11},"end":{"line":26,"column":21}},{"start":{"line":26,"column":25},"end":{"line":26,"column":37}},{"start":{"line":26,"column":41},"end":{"line":26,"column":53}},{"start":{"line":26,"column":57},"end":{"line":26,"column":70}},{"start":{"line":27,"column":11},"end":{"line":27,"column":22}},{"start":{"line":27,"column":26},"end":{"line":27,"column":38}},{"start":{"line":27,"column":42},"end":{"line":27,"column":56}},{"start":{"line":27,"column":60},"end":{"line":27,"column":70}},{"start":{"line":27,"column":74},"end":{"line":27,"column":86}},{"start":{"line":28,"column":11},"end":{"line":28,"column":20}},{"start":{"line":28,"column":24},"end":{"line":28,"column":36}},{"start":{"line":28,"column":40},"end":{"line":28,"column":54}},{"start":{"line":29,"column":11},"end":{"line":29,"column":24}},{"start":{"line":29,"column":28},"end":{"line":29,"column":42}},{"start":{"line":30,"column":10},"end":{"line":30,"column":25}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]},"5":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":11},"end":{"line":33,"column":21}},{"start":{"line":33,"column":25},"end":{"line":33,"column":37}},{"start":{"line":33,"column":41},"end":{"line":33,"column":53}},{"start":{"line":33,"column":57},"end":{"line":33,"column":70}},{"start":{"line":34,"column":11},"end":{"line":34,"column":22}},{"start":{"line":34,"column":26},"end":{"line":34,"column":38}},{"start":{"line":34,"column":42},"end":{"line":34,"column":56}},{"start":{"line":34,"column":60},"end":{"line":34,"column":70}},{"start":{"line":34,"column":74},"end":{"line":34,"column":86}},{"start":{"line":35,"column":11},"end":{"line":35,"column":20}},{"start":{"line":35,"column":24},"end":{"line":35,"column":36}},{"start":{"line":35,"column":40},"end":{"line":35,"column":54}},{"start":{"line":36,"column":11},"end":{"line":36,"column":24}},{"start":{"line":36,"column":28},"end":{"line":36,"column":42}},{"start":{"line":37,"column":10},"end":{"line":37,"column":25}}]}},"code":["define(['./isSymbol'], function(isSymbol) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * Compares values to sort them in ascending order.","   *","   * @private","   * @param {*} value The value to compare.","   * @param {*} other The other value to compare.","   * @returns {number} Returns the sort order indicator for `value`.","   */","  function compareAscending(value, other) {","    if (value !== other) {","      var valIsDefined = value !== undefined,","          valIsNull = value === null,","          valIsReflexive = value === value,","          valIsSymbol = isSymbol(value);","","      var othIsDefined = other !== undefined,","          othIsNull = other === null,","          othIsReflexive = other === other,","          othIsSymbol = isSymbol(other);","","      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||","          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||","          (valIsNull && othIsDefined && othIsReflexive) ||","          (!valIsDefined && othIsReflexive) ||","          !valIsReflexive) {","        return 1;","      }","      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||","          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||","          (othIsNull && valIsDefined && valIsReflexive) ||","          (!othIsDefined && valIsReflexive) ||","          !othIsReflexive) {","        return -1;","      }","    }","    return 0;","  }","","  return compareAscending;","});",""],"l":{"1":1,"4":0,"14":1,"15":0,"16":0,"21":0,"26":0,"31":0,"33":0,"38":0,"41":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_compareMultiple.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_compareMultiple.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":32},"end":{"line":1,"column":59}}},"2":{"name":"compareMultiple","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":45,"column":3}},"2":{"start":{"line":17,"column":2},"end":{"line":42,"column":3}},"3":{"start":{"line":18,"column":4},"end":{"line":22,"column":37}},"4":{"start":{"line":24,"column":4},"end":{"line":33,"column":5}},"5":{"start":{"line":25,"column":6},"end":{"line":25,"column":76}},"6":{"start":{"line":26,"column":6},"end":{"line":32,"column":7}},"7":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"8":{"start":{"line":28,"column":10},"end":{"line":28,"column":24}},"9":{"start":{"line":30,"column":8},"end":{"line":30,"column":34}},"10":{"start":{"line":31,"column":8},"end":{"line":31,"column":51}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":38}},"12":{"start":{"line":44,"column":2},"end":{"line":44,"column":25}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":6}},{"start":{"line":26,"column":6},"end":{"line":26,"column":6}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"3":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":43},"end":{"line":31,"column":45}},{"start":{"line":31,"column":48},"end":{"line":31,"column":49}}]}},"code":["define(['./_compareAscending'], function(compareAscending) {","","  /**","   * Used by `_.orderBy` to compare multiple properties of a value to another","   * and stable sort them.","   *","   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,","   * specify an order of \"desc\" for descending or \"asc\" for ascending sort order","   * of corresponding values.","   *","   * @private","   * @param {Object} object The object to compare.","   * @param {Object} other The other object to compare.","   * @param {boolean[]|string[]} orders The order to sort by for each property.","   * @returns {number} Returns the sort order indicator for `object`.","   */","  function compareMultiple(object, other, orders) {","    var index = -1,","        objCriteria = object.criteria,","        othCriteria = other.criteria,","        length = objCriteria.length,","        ordersLength = orders.length;","","    while (++index < length) {","      var result = compareAscending(objCriteria[index], othCriteria[index]);","      if (result) {","        if (index >= ordersLength) {","          return result;","        }","        var order = orders[index];","        return result * (order == 'desc' ? -1 : 1);","      }","    }","    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications","    // that causes it, under certain circumstances, to provide the same value for","    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247","    // for more details.","    //","    // This also ensures a stable sort in V8 and other engines.","    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.","    return object.index - other.index;","  }","","  return compareMultiple;","});",""],"l":{"1":1,"17":1,"18":0,"24":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"41":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_composeArgs.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_composeArgs.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"composeArgs","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":59}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":42,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":27}},"3":{"start":{"line":17,"column":2},"end":{"line":39,"column":3}},"4":{"start":{"line":18,"column":4},"end":{"line":25,"column":33}},"5":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"6":{"start":{"line":28,"column":6},"end":{"line":28,"column":46}},"7":{"start":{"line":30,"column":4},"end":{"line":34,"column":5}},"8":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"9":{"start":{"line":32,"column":8},"end":{"line":32,"column":53}},"10":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"11":{"start":{"line":36,"column":6},"end":{"line":36,"column":46}},"12":{"start":{"line":38,"column":4},"end":{"line":38,"column":18}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":21}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":10},"end":{"line":31,"column":21}},{"start":{"line":31,"column":25},"end":{"line":31,"column":47}}]}},"code":["define([], function() {","","  /* Built-in method references for those with the same name as other `lodash` methods. */","  var nativeMax = Math.max;","","  /**","   * Creates an array that is the composition of partially applied arguments,","   * placeholders, and provided arguments into a single array of arguments.","   *","   * @private","   * @param {Array} args The provided arguments.","   * @param {Array} partials The arguments to prepend to those provided.","   * @param {Array} holders The `partials` placeholder indexes.","   * @params {boolean} [isCurried] Specify composing for a curried function.","   * @returns {Array} Returns the new array of composed arguments.","   */","  function composeArgs(args, partials, holders, isCurried) {","    var argsIndex = -1,","        argsLength = args.length,","        holdersLength = holders.length,","        leftIndex = -1,","        leftLength = partials.length,","        rangeLength = nativeMax(argsLength - holdersLength, 0),","        result = Array(leftLength + rangeLength),","        isUncurried = !isCurried;","","    while (++leftIndex < leftLength) {","      result[leftIndex] = partials[leftIndex];","    }","    while (++argsIndex < holdersLength) {","      if (isUncurried || argsIndex < argsLength) {","        result[holders[argsIndex]] = args[argsIndex];","      }","    }","    while (rangeLength--) {","      result[leftIndex++] = args[argsIndex++];","    }","    return result;","  }","","  return composeArgs;","});",""],"l":{"1":1,"4":0,"17":1,"18":0,"27":0,"28":0,"30":0,"31":0,"32":0,"35":0,"36":0,"38":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_composeArgsRight.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_composeArgsRight.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"composeArgsRight","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":44,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":27}},"3":{"start":{"line":17,"column":2},"end":{"line":41,"column":3}},"4":{"start":{"line":18,"column":4},"end":{"line":26,"column":33}},"5":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"6":{"start":{"line":29,"column":6},"end":{"line":29,"column":42}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":27}},"8":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"9":{"start":{"line":33,"column":6},"end":{"line":33,"column":57}},"10":{"start":{"line":35,"column":4},"end":{"line":39,"column":5}},"11":{"start":{"line":36,"column":6},"end":{"line":38,"column":7}},"12":{"start":{"line":37,"column":8},"end":{"line":37,"column":67}},"13":{"start":{"line":40,"column":4},"end":{"line":40,"column":18}},"14":{"start":{"line":43,"column":2},"end":{"line":43,"column":26}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":10},"end":{"line":36,"column":21}},{"start":{"line":36,"column":25},"end":{"line":36,"column":47}}]}},"code":["define([], function() {","","  /* Built-in method references for those with the same name as other `lodash` methods. */","  var nativeMax = Math.max;","","  /**","   * This function is like `composeArgs` except that the arguments composition","   * is tailored for `_.partialRight`.","   *","   * @private","   * @param {Array} args The provided arguments.","   * @param {Array} partials The arguments to append to those provided.","   * @param {Array} holders The `partials` placeholder indexes.","   * @params {boolean} [isCurried] Specify composing for a curried function.","   * @returns {Array} Returns the new array of composed arguments.","   */","  function composeArgsRight(args, partials, holders, isCurried) {","    var argsIndex = -1,","        argsLength = args.length,","        holdersIndex = -1,","        holdersLength = holders.length,","        rightIndex = -1,","        rightLength = partials.length,","        rangeLength = nativeMax(argsLength - holdersLength, 0),","        result = Array(rangeLength + rightLength),","        isUncurried = !isCurried;","","    while (++argsIndex < rangeLength) {","      result[argsIndex] = args[argsIndex];","    }","    var offset = argsIndex;","    while (++rightIndex < rightLength) {","      result[offset + rightIndex] = partials[rightIndex];","    }","    while (++holdersIndex < holdersLength) {","      if (isUncurried || argsIndex < argsLength) {","        result[offset + holders[holdersIndex]] = args[argsIndex++];","      }","    }","    return result;","  }","","  return composeArgsRight;","});",""],"l":{"1":1,"4":0,"17":1,"18":0,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"40":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/concat.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/concat.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":72},"end":{"line":1,"column":125}}},"2":{"name":"concat","line":25,"loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":41,"column":3}},"2":{"start":{"line":25,"column":2},"end":{"line":38,"column":3}},"3":{"start":{"line":26,"column":4},"end":{"line":26,"column":34}},"4":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"5":{"start":{"line":28,"column":6},"end":{"line":28,"column":16}},"6":{"start":{"line":30,"column":4},"end":{"line":32,"column":23}},"7":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"8":{"start":{"line":35,"column":6},"end":{"line":35,"column":41}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":88}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":16}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"2":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":38},"end":{"line":37,"column":54}},{"start":{"line":37,"column":57},"end":{"line":37,"column":64}}]}},"code":["define(['./_arrayPush', './_baseFlatten', './_copyArray', './isArray'], function(arrayPush, baseFlatten, copyArray, isArray) {","","  /**","   * Creates a new array concatenating `array` with any additional arrays","   * and/or values.","   *","   * @static","   * @memberOf _","   * @since 4.0.0","   * @category Array","   * @param {Array} array The array to concatenate.","   * @param {...*} [values] The values to concatenate.","   * @returns {Array} Returns the new concatenated array.","   * @example","   *","   * var array = [1];","   * var other = _.concat(array, 2, [3], [[4]]);","   *","   * console.log(other);","   * // => [1, 2, 3, [4]]","   *","   * console.log(array);","   * // => [1]","   */","  function concat() {","    var length = arguments.length;","    if (!length) {","      return [];","    }","    var args = Array(length - 1),","        array = arguments[0],","        index = length;","","    while (index--) {","      args[index - 1] = arguments[index];","    }","    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));","  }","","  return concat;","});",""],"l":{"1":1,"25":1,"26":0,"27":0,"28":0,"30":0,"34":0,"35":0,"37":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/cond.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/cond.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":70},"end":{"line":1,"column":120}}},"2":{"name":"cond","line":35,"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":23}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":43},"end":{"line":39,"column":58}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":20},"end":{"line":46,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":58,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":46}},"3":{"start":{"line":35,"column":2},"end":{"line":55,"column":3}},"4":{"start":{"line":36,"column":4},"end":{"line":37,"column":34}},"5":{"start":{"line":39,"column":4},"end":{"line":44,"column":7}},"6":{"start":{"line":40,"column":6},"end":{"line":42,"column":7}},"7":{"start":{"line":41,"column":8},"end":{"line":41,"column":45}},"8":{"start":{"line":43,"column":6},"end":{"line":43,"column":44}},"9":{"start":{"line":46,"column":4},"end":{"line":54,"column":7}},"10":{"start":{"line":47,"column":6},"end":{"line":47,"column":21}},"11":{"start":{"line":48,"column":6},"end":{"line":53,"column":7}},"12":{"start":{"line":49,"column":8},"end":{"line":49,"column":32}},"13":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"14":{"start":{"line":51,"column":10},"end":{"line":51,"column":44}},"15":{"start":{"line":57,"column":2},"end":{"line":57,"column":14}}},"branchMap":{"1":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":25},"end":{"line":36,"column":37}},{"start":{"line":36,"column":40},"end":{"line":36,"column":41}}]},"2":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":22},"end":{"line":39,"column":24}},{"start":{"line":39,"column":27},"end":{"line":44,"column":6}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":6}},{"start":{"line":40,"column":6},"end":{"line":40,"column":6}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]}},"code":["define(['./_apply', './_arrayMap', './_baseIteratee', './_baseRest'], function(apply, arrayMap, baseIteratee, baseRest) {","","  /** Error message constants. */","  var FUNC_ERROR_TEXT = 'Expected a function';","","  /**","   * Creates a function that iterates over `pairs` and invokes the corresponding","   * function of the first predicate to return truthy. The predicate-function","   * pairs are invoked with the `this` binding and arguments of the created","   * function.","   *","   * @static","   * @memberOf _","   * @since 4.0.0","   * @category Util","   * @param {Array} pairs The predicate-function pairs.","   * @returns {Function} Returns the new composite function.","   * @example","   *","   * var func = _.cond([","   *   [_.matches({ 'a': 1 }),           _.constant('matches A')],","   *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],","   *   [_.stubTrue,                      _.constant('no match')]","   * ]);","   *","   * func({ 'a': 1, 'b': 2 });","   * // => 'matches A'","   *","   * func({ 'a': 0, 'b': 1 });","   * // => 'matches B'","   *","   * func({ 'a': '1', 'b': '2' });","   * // => 'no match'","   */","  function cond(pairs) {","    var length = pairs ? pairs.length : 0,","        toIteratee = baseIteratee;","","    pairs = !length ? [] : arrayMap(pairs, function(pair) {","      if (typeof pair[1] != 'function') {","        throw new TypeError(FUNC_ERROR_TEXT);","      }","      return [toIteratee(pair[0]), pair[1]];","    });","","    return baseRest(function(args) {","      var index = -1;","      while (++index < length) {","        var pair = pairs[index];","        if (apply(pair[0], this, args)) {","          return apply(pair[1], this, args);","        }","      }","    });","  }","","  return cond;","});",""],"l":{"1":1,"4":0,"35":1,"36":0,"39":0,"40":0,"41":0,"43":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/conforms.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/conforms.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":44},"end":{"line":1,"column":78}}},"2":{"name":"conforms","line":27,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":32,"column":3}},"2":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"3":{"start":{"line":28,"column":4},"end":{"line":28,"column":49}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":18}}},"branchMap":{},"code":["define(['./_baseClone', './_baseConforms'], function(baseClone, baseConforms) {","","  /**","   * Creates a function that invokes the predicate properties of `source` with","   * the corresponding property values of a given object, returning `true` if","   * all predicates return truthy, else `false`.","   *","   * **Note:** The created function is equivalent to `_.conformsTo` with","   * `source` partially applied.","   *","   * @static","   * @memberOf _","   * @since 4.0.0","   * @category Util","   * @param {Object} source The object of property predicates to conform to.","   * @returns {Function} Returns the new spec function.","   * @example","   *","   * var objects = [","   *   { 'a': 2, 'b': 1 },","   *   { 'a': 1, 'b': 2 }","   * ];","   *","   * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));","   * // => [{ 'a': 1, 'b': 2 }]","   */","  function conforms(source) {","    return baseConforms(baseClone(source, true));","  }","","  return conforms;","});",""],"l":{"1":1,"27":1,"28":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/conformsTo.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/conformsTo.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":40},"end":{"line":1,"column":71}}},"2":{"name":"conformsTo","line":27,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":32,"column":3}},"2":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"3":{"start":{"line":28,"column":4},"end":{"line":28,"column":74}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":20}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":11},"end":{"line":28,"column":25}},{"start":{"line":28,"column":29},"end":{"line":28,"column":73}}]}},"code":["define(['./_baseConformsTo', './keys'], function(baseConformsTo, keys) {","","  /**","   * Checks if `object` conforms to `source` by invoking the predicate","   * properties of `source` with the corresponding property values of `object`.","   *","   * **Note:** This method is equivalent to `_.conforms` when `source` is","   * partially applied.","   *","   * @static","   * @memberOf _","   * @since 4.14.0","   * @category Lang","   * @param {Object} object The object to inspect.","   * @param {Object} source The object of property predicates to conform to.","   * @returns {boolean} Returns `true` if `object` conforms, else `false`.","   * @example","   *","   * var object = { 'a': 1, 'b': 2 };","   *","   * _.conformsTo(object, { 'b': function(n) { return n > 1; } });","   * // => true","   *","   * _.conformsTo(object, { 'b': function(n) { return n > 2; } });","   * // => false","   */","  function conformsTo(object, source) {","    return source == null || baseConformsTo(object, source, keys(source));","  }","","  return conformsTo;","});",""],"l":{"1":1,"27":1,"28":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/constant.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/constant.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"constant","line":22,"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":27}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":22}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":3}},"2":{"start":{"line":22,"column":2},"end":{"line":26,"column":3}},"3":{"start":{"line":23,"column":4},"end":{"line":25,"column":6}},"4":{"start":{"line":24,"column":6},"end":{"line":24,"column":19}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":18}}},"branchMap":{},"code":["define([], function() {","","  /**","   * Creates a function that returns `value`.","   *","   * @static","   * @memberOf _","   * @since 2.4.0","   * @category Util","   * @param {*} value The value to return from the new function.","   * @returns {Function} Returns the new constant function.","   * @example","   *","   * var objects = _.times(2, _.constant({ 'a': 1 }));","   *","   * console.log(objects);","   * // => [{ 'a': 1 }, { 'a': 1 }]","   *","   * console.log(objects[0] === objects[1]);","   * // => true","   */","  function constant(value) {","    return function() {","      return value;","    };","  }","","  return constant;","});",""],"l":{"1":1,"22":1,"23":0,"24":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_copyArray.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_copyArray.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"copyArray","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":20,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":13,"column":31}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":37}},"5":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"6":{"start":{"line":17,"column":6},"end":{"line":17,"column":35}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":17}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":19}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":9}},{"start":{"line":15,"column":14},"end":{"line":15,"column":35}}]}},"code":["define([], function() {","","  /**","   * Copies the values of `source` to `array`.","   *","   * @private","   * @param {Array} source The array to copy values from.","   * @param {Array} [array=[]] The array to copy values to.","   * @returns {Array} Returns `array`.","   */","  function copyArray(source, array) {","    var index = -1,","        length = source.length;","","    array || (array = Array(length));","    while (++index < length) {","      array[index] = source[index];","    }","    return array;","  }","","  return copyArray;","});",""],"l":{"1":1,"11":1,"12":0,"15":0,"16":0,"17":0,"19":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_copyObject.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_copyObject.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":49},"end":{"line":1,"column":88}}},"2":{"name":"copyObject","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":43,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":16,"column":2},"end":{"line":40,"column":3}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":24}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":28}},"6":{"start":{"line":20,"column":4},"end":{"line":21,"column":30}},"7":{"start":{"line":23,"column":4},"end":{"line":38,"column":5}},"8":{"start":{"line":24,"column":6},"end":{"line":24,"column":29}},"9":{"start":{"line":26,"column":6},"end":{"line":28,"column":20}},"10":{"start":{"line":30,"column":6},"end":{"line":32,"column":7}},"11":{"start":{"line":31,"column":8},"end":{"line":31,"column":31}},"12":{"start":{"line":33,"column":6},"end":{"line":37,"column":7}},"13":{"start":{"line":34,"column":8},"end":{"line":34,"column":47}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":43}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":18}},"16":{"start":{"line":42,"column":2},"end":{"line":42,"column":20}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":10}},{"start":{"line":18,"column":15},"end":{"line":18,"column":26}}]},"2":{"line":26,"type":"cond-expr","locations":[{"start":{"line":27,"column":10},"end":{"line":27,"column":67}},{"start":{"line":28,"column":10},"end":{"line":28,"column":19}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":6}},{"start":{"line":30,"column":6},"end":{"line":30,"column":6}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]}},"code":["define(['./_assignValue', './_baseAssignValue'], function(assignValue, baseAssignValue) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * Copies properties of `source` to `object`.","   *","   * @private","   * @param {Object} source The object to copy properties from.","   * @param {Array} props The property identifiers to copy.","   * @param {Object} [object={}] The object to copy properties to.","   * @param {Function} [customizer] The function to customize copied values.","   * @returns {Object} Returns `object`.","   */","  function copyObject(source, props, object, customizer) {","    var isNew = !object;","    object || (object = {});","","    var index = -1,","        length = props.length;","","    while (++index < length) {","      var key = props[index];","","      var newValue = customizer","        ? customizer(object[key], source[key], key, object, source)","        : undefined;","","      if (newValue === undefined) {","        newValue = source[key];","      }","      if (isNew) {","        baseAssignValue(object, key, newValue);","      } else {","        assignValue(object, key, newValue);","      }","    }","    return object;","  }","","  return copyObject;","});",""],"l":{"1":1,"4":0,"16":1,"17":0,"18":0,"20":0,"23":0,"24":0,"26":0,"30":0,"31":0,"33":0,"34":0,"36":0,"39":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_copySymbols.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_copySymbols.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":43},"end":{"line":1,"column":76}}},"2":{"name":"copySymbols","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":58}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":21}}},"branchMap":{},"code":["define(['./_copyObject', './_getSymbols'], function(copyObject, getSymbols) {","","  /**","   * Copies own symbol properties of `source` to `object`.","   *","   * @private","   * @param {Object} source The object to copy symbols from.","   * @param {Object} [object={}] The object to copy symbols to.","   * @returns {Object} Returns `object`.","   */","  function copySymbols(source, object) {","    return copyObject(source, getSymbols(source), object);","  }","","  return copySymbols;","});",""],"l":{"1":1,"11":1,"12":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_coreJsData.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_coreJsData.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":20},"end":{"line":1,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":46}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":20}}},"branchMap":{},"code":["define(['./_root'], function(root) {","","  /** Used to detect overreaching core-js shims. */","  var coreJsData = root['__core-js_shared__'];","","  return coreJsData;","});",""],"l":{"1":1,"4":0,"6":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/countBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/countBy.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":54},"end":{"line":1,"column":98}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":33},"end":{"line":32,"column":62}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":41,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":37}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":50}},"4":{"start":{"line":32,"column":2},"end":{"line":38,"column":5}},"5":{"start":{"line":33,"column":4},"end":{"line":37,"column":5}},"6":{"start":{"line":34,"column":6},"end":{"line":34,"column":20}},"7":{"start":{"line":36,"column":6},"end":{"line":36,"column":38}},"8":{"start":{"line":40,"column":2},"end":{"line":40,"column":17}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]}},"code":["define(['./_baseAssignValue', './_createAggregator'], function(baseAssignValue, createAggregator) {","","  /** Used for built-in method references. */","  var objectProto = Object.prototype;","","  /** Used to check objects for own properties. */","  var hasOwnProperty = objectProto.hasOwnProperty;","","  /**","   * Creates an object composed of keys generated from the results of running","   * each element of `collection` thru `iteratee`. The corresponding value of","   * each key is the number of times the key was returned by `iteratee`. The","   * iteratee is invoked with one argument: (value).","   *","   * @static","   * @memberOf _","   * @since 0.5.0","   * @category Collection","   * @param {Array|Object} collection The collection to iterate over.","   * @param {Function} [iteratee=_.identity]","   *  The iteratee to transform keys.","   * @returns {Object} Returns the composed aggregate object.","   * @example","   *","   * _.countBy([6.1, 4.2, 6.3], Math.floor);","   * // => { '4': 1, '6': 2 }","   *","   * // The `_.property` iteratee shorthand.","   * _.countBy(['one', 'two', 'three'], 'length');","   * // => { '3': 2, '5': 1 }","   */","  var countBy = createAggregator(function(result, value, key) {","    if (hasOwnProperty.call(result, key)) {","      ++result[key];","    } else {","      baseAssignValue(result, key, 1);","    }","  });","","  return countBy;","});",""],"l":{"1":1,"4":0,"7":0,"32":0,"33":0,"34":0,"36":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_countHolders.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_countHolders.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"countHolders","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":24,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":21,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":13,"column":19}},"4":{"start":{"line":15,"column":4},"end":{"line":19,"column":5}},"5":{"start":{"line":16,"column":6},"end":{"line":18,"column":7}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":17}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":18}},"8":{"start":{"line":23,"column":2},"end":{"line":23,"column":22}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":6}},{"start":{"line":16,"column":6},"end":{"line":16,"column":6}}]}},"code":["define([], function() {","","  /**","   * Gets the number of `placeholder` occurrences in `array`.","   *","   * @private","   * @param {Array} array The array to inspect.","   * @param {*} placeholder The placeholder to search for.","   * @returns {number} Returns the placeholder count.","   */","  function countHolders(array, placeholder) {","    var length = array.length,","        result = 0;","","    while (length--) {","      if (array[length] === placeholder) {","        ++result;","      }","    }","    return result;","  }","","  return countHolders;","});",""],"l":{"1":1,"11":1,"12":0,"15":0,"16":0,"17":0,"20":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createAggregator.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createAggregator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":84},"end":{"line":1,"column":149}}},"2":{"name":"createAggregator","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":49}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":18,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":17,"column":6}},"4":{"start":{"line":13,"column":6},"end":{"line":14,"column":57}},"5":{"start":{"line":16,"column":6},"end":{"line":16,"column":78}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":26}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":39},"end":{"line":13,"column":54}},{"start":{"line":13,"column":57},"end":{"line":13,"column":71}}]},"2":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":38},"end":{"line":14,"column":51}},{"start":{"line":14,"column":54},"end":{"line":14,"column":56}}]}},"code":["define(['./_arrayAggregator', './_baseAggregator', './_baseIteratee', './isArray'], function(arrayAggregator, baseAggregator, baseIteratee, isArray) {","","  /**","   * Creates a function like `_.groupBy`.","   *","   * @private","   * @param {Function} setter The function to set accumulator values.","   * @param {Function} [initializer] The accumulator object initializer.","   * @returns {Function} Returns the new aggregator function.","   */","  function createAggregator(setter, initializer) {","    return function(collection, iteratee) {","      var func = isArray(collection) ? arrayAggregator : baseAggregator,","          accumulator = initializer ? initializer() : {};","","      return func(collection, setter, baseIteratee(iteratee, 2), accumulator);","    };","  }","","  return createAggregator;","});",""],"l":{"1":1,"11":1,"12":0,"13":0,"16":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createAssigner.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createAssigner.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":45},"end":{"line":1,"column":80}}},"2":{"name":"createAssigner","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":36}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":20},"end":{"line":14,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":40,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":13,"column":2},"end":{"line":37,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":36,"column":7}},"5":{"start":{"line":15,"column":6},"end":{"line":18,"column":54}},"6":{"start":{"line":20,"column":6},"end":{"line":22,"column":20}},"7":{"start":{"line":24,"column":6},"end":{"line":27,"column":7}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":57}},"9":{"start":{"line":26,"column":8},"end":{"line":26,"column":19}},"10":{"start":{"line":28,"column":6},"end":{"line":28,"column":30}},"11":{"start":{"line":29,"column":6},"end":{"line":34,"column":7}},"12":{"start":{"line":30,"column":8},"end":{"line":30,"column":36}},"13":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"14":{"start":{"line":32,"column":10},"end":{"line":32,"column":54}},"15":{"start":{"line":35,"column":6},"end":{"line":35,"column":20}},"16":{"start":{"line":39,"column":2},"end":{"line":39,"column":24}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":36},"end":{"line":17,"column":55}},{"start":{"line":17,"column":58},"end":{"line":17,"column":67}}]},"2":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":31},"end":{"line":18,"column":41}},{"start":{"line":18,"column":44},"end":{"line":18,"column":53}}]},"3":{"line":20,"type":"cond-expr","locations":[{"start":{"line":21,"column":11},"end":{"line":21,"column":31}},{"start":{"line":22,"column":10},"end":{"line":22,"column":19}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":20},"end":{"line":20,"column":39}},{"start":{"line":20,"column":43},"end":{"line":20,"column":74}}]},"5":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":6}},{"start":{"line":24,"column":6},"end":{"line":24,"column":6}}]},"6":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":10},"end":{"line":24,"column":15}},{"start":{"line":24,"column":19},"end":{"line":24,"column":64}}]},"7":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":34},"end":{"line":25,"column":43}},{"start":{"line":25,"column":46},"end":{"line":25,"column":56}}]},"8":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":8}},{"start":{"line":31,"column":8},"end":{"line":31,"column":8}}]}},"code":["define(['./_baseRest', './_isIterateeCall'], function(baseRest, isIterateeCall) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * Creates a function like `_.assign`.","   *","   * @private","   * @param {Function} assigner The function to assign values.","   * @returns {Function} Returns the new assigner function.","   */","  function createAssigner(assigner) {","    return baseRest(function(object, sources) {","      var index = -1,","          length = sources.length,","          customizer = length > 1 ? sources[length - 1] : undefined,","          guard = length > 2 ? sources[2] : undefined;","","      customizer = (assigner.length > 3 && typeof customizer == 'function')","        ? (length--, customizer)","        : undefined;","","      if (guard && isIterateeCall(sources[0], sources[1], guard)) {","        customizer = length < 3 ? undefined : customizer;","        length = 1;","      }","      object = Object(object);","      while (++index < length) {","        var source = sources[index];","        if (source) {","          assigner(object, source, index, customizer);","        }","      }","      return object;","    });","  }","","  return createAssigner;","});",""],"l":{"1":1,"4":0,"13":1,"14":0,"15":0,"20":0,"24":0,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"35":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createBaseEach.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createBaseEach.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":26},"end":{"line":1,"column":48}}},"2":{"name":"createBaseEach","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":47}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":33,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":30,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":29,"column":6}},"4":{"start":{"line":13,"column":6},"end":{"line":15,"column":7}},"5":{"start":{"line":14,"column":8},"end":{"line":14,"column":26}},"6":{"start":{"line":16,"column":6},"end":{"line":18,"column":7}},"7":{"start":{"line":17,"column":8},"end":{"line":17,"column":46}},"8":{"start":{"line":19,"column":6},"end":{"line":21,"column":40}},"9":{"start":{"line":23,"column":6},"end":{"line":27,"column":7}},"10":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"11":{"start":{"line":25,"column":10},"end":{"line":25,"column":16}},"12":{"start":{"line":28,"column":6},"end":{"line":28,"column":24}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":6}},{"start":{"line":13,"column":6},"end":{"line":13,"column":6}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":6}},{"start":{"line":16,"column":6},"end":{"line":16,"column":6}}]},"3":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":30},"end":{"line":20,"column":36}},{"start":{"line":20,"column":39},"end":{"line":20,"column":41}}]},"4":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":26},"end":{"line":23,"column":33}},{"start":{"line":23,"column":36},"end":{"line":23,"column":52}}]},"5":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]}},"code":["define(['./isArrayLike'], function(isArrayLike) {","","  /**","   * Creates a `baseEach` or `baseEachRight` function.","   *","   * @private","   * @param {Function} eachFunc The function to iterate over a collection.","   * @param {boolean} [fromRight] Specify iterating from right to left.","   * @returns {Function} Returns the new base function.","   */","  function createBaseEach(eachFunc, fromRight) {","    return function(collection, iteratee) {","      if (collection == null) {","        return collection;","      }","      if (!isArrayLike(collection)) {","        return eachFunc(collection, iteratee);","      }","      var length = collection.length,","          index = fromRight ? length : -1,","          iterable = Object(collection);","","      while ((fromRight ? index-- : ++index < length)) {","        if (iteratee(iterable[index], index, iterable) === false) {","          break;","        }","      }","      return collection;","    };","  }","","  return createBaseEach;","});",""],"l":{"1":1,"11":1,"12":0,"13":0,"14":0,"16":0,"17":0,"19":0,"23":0,"24":0,"25":0,"28":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createBaseFor.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createBaseFor.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":11},"end":{"line":1,"column":22}}},"2":{"name":"createBaseFor","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":36}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":11},"end":{"line":11,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":28,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":25,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":24,"column":6}},"4":{"start":{"line":12,"column":6},"end":{"line":15,"column":32}},"5":{"start":{"line":17,"column":6},"end":{"line":22,"column":7}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":54}},"7":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"8":{"start":{"line":20,"column":10},"end":{"line":20,"column":16}},"9":{"start":{"line":23,"column":6},"end":{"line":23,"column":20}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":23}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":36},"end":{"line":18,"column":42}},{"start":{"line":18,"column":45},"end":{"line":18,"column":52}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]}},"code":["define([], function() {","","  /**","   * Creates a base function for methods like `_.forIn` and `_.forOwn`.","   *","   * @private","   * @param {boolean} [fromRight] Specify iterating from right to left.","   * @returns {Function} Returns the new base function.","   */","  function createBaseFor(fromRight) {","    return function(object, iteratee, keysFunc) {","      var index = -1,","          iterable = Object(object),","          props = keysFunc(object),","          length = props.length;","","      while (length--) {","        var key = props[fromRight ? length : ++index];","        if (iteratee(iterable[key], key, iterable) === false) {","          break;","        }","      }","      return object;","    };","  }","","  return createBaseFor;","});",""],"l":{"1":1,"10":1,"11":0,"12":0,"17":0,"18":0,"19":0,"20":0,"23":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createBind.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createBind.js","s":{"1":1,"2":0,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":37},"end":{"line":1,"column":64}}},"2":{"name":"createBind","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":46}}},"3":{"name":"wrapper","line":20,"loc":{"start":{"line":20,"column":4},"end":{"line":20,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":28,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":20}},"3":{"start":{"line":16,"column":2},"end":{"line":25,"column":3}},"4":{"start":{"line":17,"column":4},"end":{"line":18,"column":32}},"5":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"6":{"start":{"line":21,"column":6},"end":{"line":21,"column":80}},"7":{"start":{"line":22,"column":6},"end":{"line":22,"column":58}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":19}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":20}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":68},"end":{"line":21,"column":72}},{"start":{"line":21,"column":75},"end":{"line":21,"column":79}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":16},"end":{"line":21,"column":20}},{"start":{"line":21,"column":24},"end":{"line":21,"column":37}},{"start":{"line":21,"column":41},"end":{"line":21,"column":64}}]},"3":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":31},"end":{"line":22,"column":38}},{"start":{"line":22,"column":41},"end":{"line":22,"column":45}}]}},"code":["define(['./_createCtor', './_root'], function(createCtor, root) {","","  /** Used to compose bitmasks for function metadata. */","  var BIND_FLAG = 1;","","  /**","   * Creates a function that wraps `func` to invoke it with the optional `this`","   * binding of `thisArg`.","   *","   * @private","   * @param {Function} func The function to wrap.","   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.","   * @param {*} [thisArg] The `this` binding of `func`.","   * @returns {Function} Returns the new wrapped function.","   */","  function createBind(func, bitmask, thisArg) {","    var isBind = bitmask & BIND_FLAG,","        Ctor = createCtor(func);","","    function wrapper() {","      var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;","      return fn.apply(isBind ? thisArg : this, arguments);","    }","    return wrapper;","  }","","  return createBind;","});",""],"l":{"1":1,"4":0,"16":1,"17":0,"20":1,"21":0,"22":0,"24":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createCaseFirst.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createCaseFirst.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":76},"end":{"line":1,"column":133}}},"2":{"name":"createCaseFirst","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":39}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":34,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":13,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":30,"column":6}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":32}},"6":{"start":{"line":17,"column":6},"end":{"line":19,"column":20}},"7":{"start":{"line":21,"column":6},"end":{"line":23,"column":27}},"8":{"start":{"line":25,"column":6},"end":{"line":27,"column":26}},"9":{"start":{"line":29,"column":6},"end":{"line":29,"column":42}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":25}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":18,"column":10},"end":{"line":18,"column":31}},{"start":{"line":19,"column":10},"end":{"line":19,"column":19}}]},"2":{"line":21,"type":"cond-expr","locations":[{"start":{"line":22,"column":10},"end":{"line":22,"column":23}},{"start":{"line":23,"column":10},"end":{"line":23,"column":26}}]},"3":{"line":25,"type":"cond-expr","locations":[{"start":{"line":26,"column":10},"end":{"line":26,"column":43}},{"start":{"line":27,"column":10},"end":{"line":27,"column":25}}]}},"code":["define(['./_castSlice', './_hasUnicode', './_stringToArray', './toString'], function(castSlice, hasUnicode, stringToArray, toString) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * Creates a function like `_.lowerFirst`.","   *","   * @private","   * @param {string} methodName The name of the `String` case method to use.","   * @returns {Function} Returns the new case function.","   */","  function createCaseFirst(methodName) {","    return function(string) {","      string = toString(string);","","      var strSymbols = hasUnicode(string)","        ? stringToArray(string)","        : undefined;","","      var chr = strSymbols","        ? strSymbols[0]","        : string.charAt(0);","","      var trailing = strSymbols","        ? castSlice(strSymbols, 1).join('')","        : string.slice(1);","","      return chr[methodName]() + trailing;","    };","  }","","  return createCaseFirst;","});",""],"l":{"1":1,"4":0,"13":1,"14":0,"15":0,"17":0,"21":0,"25":0,"29":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createCompounder.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createCompounder.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":50},"end":{"line":1,"column":87}}},"2":{"name":"createCompounder","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":38}}},"3":{"name":"(anonymous_3)","line":17,"loc":{"start":{"line":17,"column":11},"end":{"line":17,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":27}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":35}},"4":{"start":{"line":16,"column":2},"end":{"line":20,"column":3}},"5":{"start":{"line":17,"column":4},"end":{"line":19,"column":6}},"6":{"start":{"line":18,"column":6},"end":{"line":18,"column":82}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":26}}},"branchMap":{},"code":["define(['./_arrayReduce', './deburr', './words'], function(arrayReduce, deburr, words) {","","  /** Used to compose unicode capture groups. */","  var rsApos = \"['\\u2019]\";","","  /** Used to match apostrophes. */","  var reApos = RegExp(rsApos, 'g');","","  /**","   * Creates a function like `_.camelCase`.","   *","   * @private","   * @param {Function} callback The function to combine each word.","   * @returns {Function} Returns the new compounder function.","   */","  function createCompounder(callback) {","    return function(string) {","      return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');","    };","  }","","  return createCompounder;","});",""],"l":{"1":1,"4":0,"7":0,"16":1,"17":0,"18":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createCtor.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createCtor.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0,0,0,0,0,0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":40},"end":{"line":1,"column":71}}},"2":{"name":"createCtor","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":28}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":22}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":37,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":34,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":33,"column":6}},"4":{"start":{"line":16,"column":6},"end":{"line":16,"column":27}},"5":{"start":{"line":17,"column":6},"end":{"line":26,"column":7}},"6":{"start":{"line":18,"column":16},"end":{"line":18,"column":32}},"7":{"start":{"line":19,"column":16},"end":{"line":19,"column":41}},"8":{"start":{"line":20,"column":16},"end":{"line":20,"column":50}},"9":{"start":{"line":21,"column":16},"end":{"line":21,"column":59}},"10":{"start":{"line":22,"column":16},"end":{"line":22,"column":68}},"11":{"start":{"line":23,"column":16},"end":{"line":23,"column":77}},"12":{"start":{"line":24,"column":16},"end":{"line":24,"column":86}},"13":{"start":{"line":25,"column":16},"end":{"line":25,"column":95}},"14":{"start":{"line":27,"column":6},"end":{"line":28,"column":49}},"15":{"start":{"line":32,"column":6},"end":{"line":32,"column":53}},"16":{"start":{"line":36,"column":2},"end":{"line":36,"column":20}}},"branchMap":{"1":{"line":17,"type":"switch","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":32}},{"start":{"line":19,"column":8},"end":{"line":19,"column":41}},{"start":{"line":20,"column":8},"end":{"line":20,"column":50}},{"start":{"line":21,"column":8},"end":{"line":21,"column":59}},{"start":{"line":22,"column":8},"end":{"line":22,"column":68}},{"start":{"line":23,"column":8},"end":{"line":23,"column":77}},{"start":{"line":24,"column":8},"end":{"line":24,"column":86}},{"start":{"line":25,"column":8},"end":{"line":25,"column":95}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":32},"end":{"line":32,"column":38}},{"start":{"line":32,"column":41},"end":{"line":32,"column":52}}]}},"code":["define(['./_baseCreate', './isObject'], function(baseCreate, isObject) {","","  /**","   * Creates a function that produces an instance of `Ctor` regardless of","   * whether it was invoked as part of a `new` expression or by `call` or `apply`.","   *","   * @private","   * @param {Function} Ctor The constructor to wrap.","   * @returns {Function} Returns the new wrapped function.","   */","  function createCtor(Ctor) {","    return function() {","      // Use a `switch` statement to work with class constructors. See","      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist","      // for more details.","      var args = arguments;","      switch (args.length) {","        case 0: return new Ctor;","        case 1: return new Ctor(args[0]);","        case 2: return new Ctor(args[0], args[1]);","        case 3: return new Ctor(args[0], args[1], args[2]);","        case 4: return new Ctor(args[0], args[1], args[2], args[3]);","        case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);","        case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);","        case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);","      }","      var thisBinding = baseCreate(Ctor.prototype),","          result = Ctor.apply(thisBinding, args);","","      // Mimic the constructor's `return` behavior.","      // See https://es5.github.io/#x13.2.2 for more details.","      return isObject(result) ? result : thisBinding;","    };","  }","","  return createCtor;","});",""],"l":{"1":1,"11":1,"12":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"27":0,"32":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createCurry.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createCurry.js","s":{"1":1,"2":0,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":125},"end":{"line":1,"column":215}}},"2":{"name":"createCurry","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":45}}},"3":{"name":"wrapper","line":18,"loc":{"start":{"line":18,"column":4},"end":{"line":18,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":44,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":15,"column":2},"end":{"line":41,"column":3}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":32}},"5":{"start":{"line":18,"column":4},"end":{"line":39,"column":5}},"6":{"start":{"line":19,"column":6},"end":{"line":22,"column":43}},"7":{"start":{"line":24,"column":6},"end":{"line":26,"column":7}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":39}},"9":{"start":{"line":27,"column":6},"end":{"line":29,"column":44}},"10":{"start":{"line":31,"column":6},"end":{"line":31,"column":31}},"11":{"start":{"line":32,"column":6},"end":{"line":36,"column":7}},"12":{"start":{"line":33,"column":8},"end":{"line":35,"column":63}},"13":{"start":{"line":37,"column":6},"end":{"line":37,"column":80}},"14":{"start":{"line":38,"column":6},"end":{"line":38,"column":35}},"15":{"start":{"line":40,"column":4},"end":{"line":40,"column":19}},"16":{"start":{"line":43,"column":2},"end":{"line":43,"column":21}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":28,"column":10},"end":{"line":28,"column":12}},{"start":{"line":29,"column":10},"end":{"line":29,"column":43}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":21},"end":{"line":27,"column":31}},{"start":{"line":27,"column":35},"end":{"line":27,"column":58}},{"start":{"line":27,"column":62},"end":{"line":27,"column":94}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"4":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":68},"end":{"line":37,"column":72}},{"start":{"line":37,"column":75},"end":{"line":37,"column":79}}]},"5":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":16},"end":{"line":37,"column":20}},{"start":{"line":37,"column":24},"end":{"line":37,"column":37}},{"start":{"line":37,"column":41},"end":{"line":37,"column":64}}]}},"code":["define(['./_apply', './_createCtor', './_createHybrid', './_createRecurry', './_getHolder', './_replaceHolders', './_root'], function(apply, createCtor, createHybrid, createRecurry, getHolder, replaceHolders, root) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * Creates a function that wraps `func` to enable currying.","   *","   * @private","   * @param {Function} func The function to wrap.","   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.","   * @param {number} arity The arity of `func`.","   * @returns {Function} Returns the new wrapped function.","   */","  function createCurry(func, bitmask, arity) {","    var Ctor = createCtor(func);","","    function wrapper() {","      var length = arguments.length,","          args = Array(length),","          index = length,","          placeholder = getHolder(wrapper);","","      while (index--) {","        args[index] = arguments[index];","      }","      var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)","        ? []","        : replaceHolders(args, placeholder);","","      length -= holders.length;","      if (length < arity) {","        return createRecurry(","          func, bitmask, createHybrid, wrapper.placeholder, undefined,","          args, holders, undefined, undefined, arity - length);","      }","      var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;","      return apply(fn, this, args);","    }","    return wrapper;","  }","","  return createCurry;","});",""],"l":{"1":1,"4":0,"15":1,"16":0,"18":1,"19":0,"24":0,"25":0,"27":0,"31":0,"32":0,"33":0,"37":0,"38":0,"40":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createFind.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createFind.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":55},"end":{"line":1,"column":97}}},"2":{"name":"createFind","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":37}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":54}}},"4":{"name":"(anonymous_4)","line":19,"loc":{"start":{"line":19,"column":20},"end":{"line":19,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":13,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":23,"column":6}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":40}},"6":{"start":{"line":16,"column":6},"end":{"line":20,"column":7}},"7":{"start":{"line":17,"column":8},"end":{"line":17,"column":50}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":38}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":85}},"10":{"start":{"line":19,"column":36},"end":{"line":19,"column":82}},"11":{"start":{"line":21,"column":6},"end":{"line":21,"column":66}},"12":{"start":{"line":22,"column":6},"end":{"line":22,"column":85}},"13":{"start":{"line":26,"column":2},"end":{"line":26,"column":20}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":6}},{"start":{"line":16,"column":6},"end":{"line":16,"column":6}}]},"2":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":26},"end":{"line":22,"column":72}},{"start":{"line":22,"column":75},"end":{"line":22,"column":84}}]},"3":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":46},"end":{"line":22,"column":63}},{"start":{"line":22,"column":66},"end":{"line":22,"column":71}}]}},"code":["define(['./_baseIteratee', './isArrayLike', './keys'], function(baseIteratee, isArrayLike, keys) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * Creates a `_.find` or `_.findLast` function.","   *","   * @private","   * @param {Function} findIndexFunc The function to find the collection index.","   * @returns {Function} Returns the new find function.","   */","  function createFind(findIndexFunc) {","    return function(collection, predicate, fromIndex) {","      var iterable = Object(collection);","      if (!isArrayLike(collection)) {","        var iteratee = baseIteratee(predicate, 3);","        collection = keys(collection);","        predicate = function(key) { return iteratee(iterable[key], key, iterable); };","      }","      var index = findIndexFunc(collection, predicate, fromIndex);","      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;","    };","  }","","  return createFind;","});",""],"l":{"1":1,"4":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"21":0,"22":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createFlow.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createFlow.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":106},"end":{"line":1,"column":183}}},"2":{"name":"createFlow","line":25,"loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":33}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":20},"end":{"line":26,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":13},"end":{"line":61,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":81,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":29}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":46}},"5":{"start":{"line":13,"column":2},"end":{"line":16,"column":23}},"6":{"start":{"line":25,"column":2},"end":{"line":78,"column":3}},"7":{"start":{"line":26,"column":4},"end":{"line":77,"column":7}},"8":{"start":{"line":27,"column":6},"end":{"line":29,"column":48}},"9":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"10":{"start":{"line":32,"column":8},"end":{"line":32,"column":24}},"11":{"start":{"line":34,"column":6},"end":{"line":42,"column":7}},"12":{"start":{"line":35,"column":8},"end":{"line":35,"column":32}},"13":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"14":{"start":{"line":37,"column":10},"end":{"line":37,"column":47}},"15":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"16":{"start":{"line":40,"column":10},"end":{"line":40,"column":52}},"17":{"start":{"line":43,"column":6},"end":{"line":43,"column":39}},"18":{"start":{"line":44,"column":6},"end":{"line":60,"column":7}},"19":{"start":{"line":45,"column":8},"end":{"line":45,"column":28}},"20":{"start":{"line":47,"column":8},"end":{"line":48,"column":69}},"21":{"start":{"line":50,"column":8},"end":{"line":59,"column":9}},"22":{"start":{"line":54,"column":10},"end":{"line":54,"column":74}},"23":{"start":{"line":56,"column":10},"end":{"line":58,"column":33}},"24":{"start":{"line":61,"column":6},"end":{"line":76,"column":8}},"25":{"start":{"line":62,"column":8},"end":{"line":63,"column":28}},"26":{"start":{"line":65,"column":8},"end":{"line":68,"column":9}},"27":{"start":{"line":67,"column":10},"end":{"line":67,"column":46}},"28":{"start":{"line":69,"column":8},"end":{"line":70,"column":69}},"29":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"30":{"start":{"line":73,"column":10},"end":{"line":73,"column":51}},"31":{"start":{"line":75,"column":8},"end":{"line":75,"column":22}},"32":{"start":{"line":80,"column":2},"end":{"line":80,"column":20}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"4":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":18}},{"start":{"line":39,"column":22},"end":{"line":39,"column":30}},{"start":{"line":39,"column":34},"end":{"line":39,"column":64}}]},"5":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":24},"end":{"line":43,"column":29}},{"start":{"line":43,"column":32},"end":{"line":43,"column":38}}]},"6":{"line":48,"type":"cond-expr","locations":[{"start":{"line":48,"column":43},"end":{"line":48,"column":56}},{"start":{"line":48,"column":59},"end":{"line":48,"column":68}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"8":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":16}},{"start":{"line":50,"column":20},"end":{"line":50,"column":39}},{"start":{"line":51,"column":14},"end":{"line":51,"column":76}},{"start":{"line":52,"column":14},"end":{"line":52,"column":29}},{"start":{"line":52,"column":33},"end":{"line":52,"column":45}}]},"9":{"line":56,"type":"cond-expr","locations":[{"start":{"line":57,"column":14},"end":{"line":57,"column":33}},{"start":{"line":58,"column":14},"end":{"line":58,"column":32}}]},"10":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":21},"end":{"line":56,"column":37}},{"start":{"line":56,"column":41},"end":{"line":56,"column":57}}]},"11":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"12":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":19}},{"start":{"line":65,"column":23},"end":{"line":65,"column":39}},{"start":{"line":66,"column":12},"end":{"line":66,"column":26}},{"start":{"line":66,"column":30},"end":{"line":66,"column":62}}]},"13":{"line":70,"type":"cond-expr","locations":[{"start":{"line":70,"column":30},"end":{"line":70,"column":60}},{"start":{"line":70,"column":63},"end":{"line":70,"column":68}}]}},"code":["define(['./_LodashWrapper', './_flatRest', './_getData', './_getFuncName', './isArray', './_isLaziable'], function(LodashWrapper, flatRest, getData, getFuncName, isArray, isLaziable) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used as the size to enable large array optimizations. */","  var LARGE_ARRAY_SIZE = 200;","","  /** Error message constants. */","  var FUNC_ERROR_TEXT = 'Expected a function';","","  /** Used to compose bitmasks for function metadata. */","  var CURRY_FLAG = 8,","      PARTIAL_FLAG = 32,","      ARY_FLAG = 128,","      REARG_FLAG = 256;","","  /**","   * Creates a `_.flow` or `_.flowRight` function.","   *","   * @private","   * @param {boolean} [fromRight] Specify iterating from right to left.","   * @returns {Function} Returns the new flow function.","   */","  function createFlow(fromRight) {","    return flatRest(function(funcs) {","      var length = funcs.length,","          index = length,","          prereq = LodashWrapper.prototype.thru;","","      if (fromRight) {","        funcs.reverse();","      }","      while (index--) {","        var func = funcs[index];","        if (typeof func != 'function') {","          throw new TypeError(FUNC_ERROR_TEXT);","        }","        if (prereq && !wrapper && getFuncName(func) == 'wrapper') {","          var wrapper = new LodashWrapper([], true);","        }","      }","      index = wrapper ? index : length;","      while (++index < length) {","        func = funcs[index];","","        var funcName = getFuncName(func),","            data = funcName == 'wrapper' ? getData(func) : undefined;","","        if (data && isLaziable(data[0]) &&","              data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&","              !data[4].length && data[9] == 1","            ) {","          wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);","        } else {","          wrapper = (func.length == 1 && isLaziable(func))","            ? wrapper[funcName]()","            : wrapper.thru(func);","        }","      }","      return function() {","        var args = arguments,","            value = args[0];","","        if (wrapper && args.length == 1 &&","            isArray(value) && value.length >= LARGE_ARRAY_SIZE) {","          return wrapper.plant(value).value();","        }","        var index = 0,","            result = length ? funcs[index].apply(this, args) : value;","","        while (++index < length) {","          result = funcs[index].call(this, result);","        }","        return result;","      };","    });","  }","","  return createFlow;","});",""],"l":{"1":1,"4":0,"7":0,"10":0,"13":0,"25":1,"26":0,"27":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"43":0,"44":0,"45":0,"47":0,"50":0,"54":0,"56":0,"61":0,"62":0,"65":0,"67":0,"69":0,"72":0,"73":0,"75":0,"80":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createHybrid.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createHybrid.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":168},"end":{"line":1,"column":291}}},"2":{"name":"createHybrid","line":33,"loc":{"start":{"line":33,"column":2},"end":{"line":33,"column":116}}},"3":{"name":"wrapper","line":41,"loc":{"start":{"line":41,"column":4},"end":{"line":41,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":88,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":12,"column":22}},"4":{"start":{"line":33,"column":2},"end":{"line":85,"column":3}},"5":{"start":{"line":34,"column":4},"end":{"line":39,"column":56}},"6":{"start":{"line":41,"column":4},"end":{"line":83,"column":5}},"7":{"start":{"line":42,"column":6},"end":{"line":44,"column":25}},"8":{"start":{"line":46,"column":6},"end":{"line":48,"column":7}},"9":{"start":{"line":47,"column":8},"end":{"line":47,"column":39}},"10":{"start":{"line":49,"column":6},"end":{"line":52,"column":7}},"11":{"start":{"line":50,"column":8},"end":{"line":51,"column":59}},"12":{"start":{"line":53,"column":6},"end":{"line":55,"column":7}},"13":{"start":{"line":54,"column":8},"end":{"line":54,"column":63}},"14":{"start":{"line":56,"column":6},"end":{"line":58,"column":7}},"15":{"start":{"line":57,"column":8},"end":{"line":57,"column":78}},"16":{"start":{"line":59,"column":6},"end":{"line":59,"column":29}},"17":{"start":{"line":60,"column":6},"end":{"line":66,"column":7}},"18":{"start":{"line":61,"column":8},"end":{"line":61,"column":59}},"19":{"start":{"line":62,"column":8},"end":{"line":65,"column":10}},"20":{"start":{"line":67,"column":6},"end":{"line":68,"column":52}},"21":{"start":{"line":70,"column":6},"end":{"line":70,"column":27}},"22":{"start":{"line":71,"column":6},"end":{"line":75,"column":7}},"23":{"start":{"line":72,"column":8},"end":{"line":72,"column":37}},"24":{"start":{"line":73,"column":13},"end":{"line":75,"column":7}},"25":{"start":{"line":74,"column":8},"end":{"line":74,"column":23}},"26":{"start":{"line":76,"column":6},"end":{"line":78,"column":7}},"27":{"start":{"line":77,"column":8},"end":{"line":77,"column":26}},"28":{"start":{"line":79,"column":6},"end":{"line":81,"column":7}},"29":{"start":{"line":80,"column":8},"end":{"line":80,"column":36}},"30":{"start":{"line":82,"column":6},"end":{"line":82,"column":41}},"31":{"start":{"line":84,"column":4},"end":{"line":84,"column":19}},"32":{"start":{"line":87,"column":2},"end":{"line":87,"column":22}}},"branchMap":{"1":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":27},"end":{"line":39,"column":36}},{"start":{"line":39,"column":39},"end":{"line":39,"column":55}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"6":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":10},"end":{"line":60,"column":19}},{"start":{"line":60,"column":23},"end":{"line":60,"column":37}}]},"7":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":33},"end":{"line":67,"column":40}},{"start":{"line":67,"column":43},"end":{"line":67,"column":47}}]},"8":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":27},"end":{"line":68,"column":44}},{"start":{"line":68,"column":47},"end":{"line":68,"column":51}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":6}},{"start":{"line":71,"column":6},"end":{"line":71,"column":6}}]},"10":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":13},"end":{"line":73,"column":13}},{"start":{"line":73,"column":13},"end":{"line":73,"column":13}}]},"11":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":17},"end":{"line":73,"column":23}},{"start":{"line":73,"column":27},"end":{"line":73,"column":37}}]},"12":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]},"13":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":10},"end":{"line":76,"column":15}},{"start":{"line":76,"column":19},"end":{"line":76,"column":31}}]},"14":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"15":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":10},"end":{"line":79,"column":14}},{"start":{"line":79,"column":18},"end":{"line":79,"column":31}},{"start":{"line":79,"column":35},"end":{"line":79,"column":58}}]},"16":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":13},"end":{"line":80,"column":17}},{"start":{"line":80,"column":21},"end":{"line":80,"column":35}}]}},"code":["define(['./_composeArgs', './_composeArgsRight', './_countHolders', './_createCtor', './_createRecurry', './_getHolder', './_reorder', './_replaceHolders', './_root'], function(composeArgs, composeArgsRight, countHolders, createCtor, createRecurry, getHolder, reorder, replaceHolders, root) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used to compose bitmasks for function metadata. */","  var BIND_FLAG = 1,","      BIND_KEY_FLAG = 2,","      CURRY_FLAG = 8,","      CURRY_RIGHT_FLAG = 16,","      ARY_FLAG = 128,","      FLIP_FLAG = 512;","","  /**","   * Creates a function that wraps `func` to invoke it with optional `this`","   * binding of `thisArg`, partial application, and currying.","   *","   * @private","   * @param {Function|string} func The function or method name to wrap.","   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.","   * @param {*} [thisArg] The `this` binding of `func`.","   * @param {Array} [partials] The arguments to prepend to those provided to","   *  the new function.","   * @param {Array} [holders] The `partials` placeholder indexes.","   * @param {Array} [partialsRight] The arguments to append to those provided","   *  to the new function.","   * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.","   * @param {Array} [argPos] The argument positions of the new function.","   * @param {number} [ary] The arity cap of `func`.","   * @param {number} [arity] The arity of `func`.","   * @returns {Function} Returns the new wrapped function.","   */","  function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {","    var isAry = bitmask & ARY_FLAG,","        isBind = bitmask & BIND_FLAG,","        isBindKey = bitmask & BIND_KEY_FLAG,","        isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),","        isFlip = bitmask & FLIP_FLAG,","        Ctor = isBindKey ? undefined : createCtor(func);","","    function wrapper() {","      var length = arguments.length,","          args = Array(length),","          index = length;","","      while (index--) {","        args[index] = arguments[index];","      }","      if (isCurried) {","        var placeholder = getHolder(wrapper),","            holdersCount = countHolders(args, placeholder);","      }","      if (partials) {","        args = composeArgs(args, partials, holders, isCurried);","      }","      if (partialsRight) {","        args = composeArgsRight(args, partialsRight, holdersRight, isCurried);","      }","      length -= holdersCount;","      if (isCurried && length < arity) {","        var newHolders = replaceHolders(args, placeholder);","        return createRecurry(","          func, bitmask, createHybrid, wrapper.placeholder, thisArg,","          args, newHolders, argPos, ary, arity - length","        );","      }","      var thisBinding = isBind ? thisArg : this,","          fn = isBindKey ? thisBinding[func] : func;","","      length = args.length;","      if (argPos) {","        args = reorder(args, argPos);","      } else if (isFlip && length > 1) {","        args.reverse();","      }","      if (isAry && ary < length) {","        args.length = ary;","      }","      if (this && this !== root && this instanceof wrapper) {","        fn = Ctor || createCtor(fn);","      }","      return fn.apply(thisBinding, args);","    }","    return wrapper;","  }","","  return createHybrid;","});",""],"l":{"1":1,"4":0,"7":0,"33":1,"34":0,"41":1,"42":0,"46":0,"47":0,"49":0,"50":0,"53":0,"54":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"67":0,"70":0,"71":0,"72":0,"73":0,"74":0,"76":0,"77":0,"79":0,"80":0,"82":0,"84":0,"87":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createInverter.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createInverter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":28},"end":{"line":1,"column":51}}},"2":{"name":"createInverter","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":46}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":18,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":15,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":14,"column":6}},"4":{"start":{"line":13,"column":6},"end":{"line":13,"column":68}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":24}}},"branchMap":{},"code":["define(['./_baseInverter'], function(baseInverter) {","","  /**","   * Creates a function like `_.invertBy`.","   *","   * @private","   * @param {Function} setter The function to set accumulator values.","   * @param {Function} toIteratee The function to resolve iteratees.","   * @returns {Function} Returns the new inverter function.","   */","  function createInverter(setter, toIteratee) {","    return function(object, iteratee) {","      return baseInverter(object, setter, toIteratee(iteratee), {});","    };","  }","","  return createInverter;","});",""],"l":{"1":1,"11":1,"12":0,"13":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/create.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/create.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":43},"end":{"line":1,"column":76}}},"2":{"name":"create","line":37,"loc":{"start":{"line":37,"column":2},"end":{"line":37,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":43,"column":3}},"2":{"start":{"line":37,"column":2},"end":{"line":40,"column":3}},"3":{"start":{"line":38,"column":4},"end":{"line":38,"column":39}},"4":{"start":{"line":39,"column":4},"end":{"line":39,"column":64}},"5":{"start":{"line":42,"column":2},"end":{"line":42,"column":16}}},"branchMap":{"1":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":24},"end":{"line":39,"column":54}},{"start":{"line":39,"column":57},"end":{"line":39,"column":63}}]}},"code":["define(['./_baseAssign', './_baseCreate'], function(baseAssign, baseCreate) {","","  /**","   * Creates an object that inherits from the `prototype` object. If a","   * `properties` object is given, its own enumerable string keyed properties","   * are assigned to the created object.","   *","   * @static","   * @memberOf _","   * @since 2.3.0","   * @category Object","   * @param {Object} prototype The object to inherit from.","   * @param {Object} [properties] The properties to assign to the object.","   * @returns {Object} Returns the new object.","   * @example","   *","   * function Shape() {","   *   this.x = 0;","   *   this.y = 0;","   * }","   *","   * function Circle() {","   *   Shape.call(this);","   * }","   *","   * Circle.prototype = _.create(Shape.prototype, {","   *   'constructor': Circle","   * });","   *","   * var circle = new Circle;","   * circle instanceof Circle;","   * // => true","   *","   * circle instanceof Shape;","   * // => true","   */","  function create(prototype, properties) {","    var result = baseCreate(prototype);","    return properties ? baseAssign(result, properties) : result;","  }","","  return create;","});",""],"l":{"1":1,"37":1,"38":0,"39":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createMathOperation.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createMathOperation.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":47},"end":{"line":1,"column":84}}},"2":{"name":"createMathOperation","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":55}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":11},"end":{"line":15,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":41,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":14,"column":2},"end":{"line":38,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":37,"column":6}},"5":{"start":{"line":16,"column":6},"end":{"line":16,"column":17}},"6":{"start":{"line":17,"column":6},"end":{"line":19,"column":7}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":28}},"8":{"start":{"line":20,"column":6},"end":{"line":22,"column":7}},"9":{"start":{"line":21,"column":8},"end":{"line":21,"column":23}},"10":{"start":{"line":23,"column":6},"end":{"line":35,"column":7}},"11":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"12":{"start":{"line":25,"column":10},"end":{"line":25,"column":23}},"13":{"start":{"line":27,"column":8},"end":{"line":33,"column":9}},"14":{"start":{"line":28,"column":10},"end":{"line":28,"column":38}},"15":{"start":{"line":29,"column":10},"end":{"line":29,"column":38}},"16":{"start":{"line":31,"column":10},"end":{"line":31,"column":38}},"17":{"start":{"line":32,"column":10},"end":{"line":32,"column":38}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":40}},"19":{"start":{"line":36,"column":6},"end":{"line":36,"column":20}},"20":{"start":{"line":40,"column":2},"end":{"line":40,"column":29}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":6}},{"start":{"line":17,"column":6},"end":{"line":17,"column":6}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":10},"end":{"line":17,"column":29}},{"start":{"line":17,"column":33},"end":{"line":17,"column":52}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"4":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":6}},{"start":{"line":23,"column":6},"end":{"line":23,"column":6}}]},"5":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"6":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"7":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":36}},{"start":{"line":27,"column":40},"end":{"line":27,"column":64}}]}},"code":["define(['./_baseToNumber', './_baseToString'], function(baseToNumber, baseToString) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * Creates a function that performs a mathematical operation on two values.","   *","   * @private","   * @param {Function} operator The function to perform the operation.","   * @param {number} [defaultValue] The value used for `undefined` arguments.","   * @returns {Function} Returns the new mathematical operation function.","   */","  function createMathOperation(operator, defaultValue) {","    return function(value, other) {","      var result;","      if (value === undefined && other === undefined) {","        return defaultValue;","      }","      if (value !== undefined) {","        result = value;","      }","      if (other !== undefined) {","        if (result === undefined) {","          return other;","        }","        if (typeof value == 'string' || typeof other == 'string') {","          value = baseToString(value);","          other = baseToString(other);","        } else {","          value = baseToNumber(value);","          other = baseToNumber(other);","        }","        result = operator(value, other);","      }","      return result;","    };","  }","","  return createMathOperation;","});",""],"l":{"1":1,"4":0,"14":1,"15":0,"16":0,"17":0,"18":0,"20":0,"21":0,"23":0,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0,"36":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createOver.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createOver.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":101},"end":{"line":1,"column":172}}},"2":{"name":"createOver","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":33}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":20},"end":{"line":11,"column":40}}},"4":{"name":"(anonymous_4)","line":13,"loc":{"start":{"line":13,"column":22},"end":{"line":13,"column":37}}},"5":{"name":"(anonymous_5)","line":15,"loc":{"start":{"line":15,"column":36},"end":{"line":15,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":20,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":19,"column":7}},"4":{"start":{"line":12,"column":6},"end":{"line":12,"column":63}},"5":{"start":{"line":13,"column":6},"end":{"line":18,"column":9}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":27}},"7":{"start":{"line":15,"column":8},"end":{"line":17,"column":11}},"8":{"start":{"line":16,"column":10},"end":{"line":16,"column":48}},"9":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}}},"branchMap":{},"code":["define(['./_apply', './_arrayMap', './_baseIteratee', './_baseRest', './_baseUnary', './_flatRest'], function(apply, arrayMap, baseIteratee, baseRest, baseUnary, flatRest) {","","  /**","   * Creates a function like `_.over`.","   *","   * @private","   * @param {Function} arrayFunc The function to iterate over iteratees.","   * @returns {Function} Returns the new over function.","   */","  function createOver(arrayFunc) {","    return flatRest(function(iteratees) {","      iteratees = arrayMap(iteratees, baseUnary(baseIteratee));","      return baseRest(function(args) {","        var thisArg = this;","        return arrayFunc(iteratees, function(iteratee) {","          return apply(iteratee, thisArg, args);","        });","      });","    });","  }","","  return createOver;","});",""],"l":{"1":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createPadding.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createPadding.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":115},"end":{"line":1,"column":200}}},"2":{"name":"createPadding","line":18,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":32,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":29}},"4":{"start":{"line":18,"column":2},"end":{"line":29,"column":3}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":60}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":35}},"7":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"8":{"start":{"line":23,"column":6},"end":{"line":23,"column":61}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":75}},"10":{"start":{"line":26,"column":4},"end":{"line":28,"column":32}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":23}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":34},"end":{"line":19,"column":37}},{"start":{"line":19,"column":40},"end":{"line":19,"column":59}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"3":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":27},"end":{"line":23,"column":52}},{"start":{"line":23,"column":55},"end":{"line":23,"column":60}}]},"4":{"line":26,"type":"cond-expr","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":60}},{"start":{"line":28,"column":8},"end":{"line":28,"column":31}}]}},"code":["define(['./_baseRepeat', './_baseToString', './_castSlice', './_hasUnicode', './_stringSize', './_stringToArray'], function(baseRepeat, baseToString, castSlice, hasUnicode, stringSize, stringToArray) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /* Built-in method references for those with the same name as other `lodash` methods. */","  var nativeCeil = Math.ceil;","","  /**","   * Creates the padding for `string` based on `length`. The `chars` string","   * is truncated if the number of characters exceeds `length`.","   *","   * @private","   * @param {number} length The padding length.","   * @param {string} [chars=' '] The string used as padding.","   * @returns {string} Returns the padding for `string`.","   */","  function createPadding(length, chars) {","    chars = chars === undefined ? ' ' : baseToString(chars);","","    var charsLength = chars.length;","    if (charsLength < 2) {","      return charsLength ? baseRepeat(chars, length) : chars;","    }","    var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));","    return hasUnicode(chars)","      ? castSlice(stringToArray(result), 0, length).join('')","      : result.slice(0, length);","  }","","  return createPadding;","});",""],"l":{"1":1,"4":0,"7":0,"18":1,"19":0,"21":0,"22":0,"23":0,"25":0,"26":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createPartial.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createPartial.js","s":{"1":1,"2":0,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":49},"end":{"line":1,"column":83}}},"2":{"name":"createPartial","line":18,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":59}}},"3":{"name":"wrapper","line":22,"loc":{"start":{"line":22,"column":4},"end":{"line":22,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":42,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":20}},"3":{"start":{"line":18,"column":2},"end":{"line":39,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":20,"column":32}},"5":{"start":{"line":22,"column":4},"end":{"line":37,"column":5}},"6":{"start":{"line":23,"column":6},"end":{"line":28,"column":80}},"7":{"start":{"line":30,"column":6},"end":{"line":32,"column":7}},"8":{"start":{"line":31,"column":8},"end":{"line":31,"column":46}},"9":{"start":{"line":33,"column":6},"end":{"line":35,"column":7}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":51}},"11":{"start":{"line":36,"column":6},"end":{"line":36,"column":54}},"12":{"start":{"line":38,"column":4},"end":{"line":38,"column":19}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":23}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":68},"end":{"line":28,"column":72}},{"start":{"line":28,"column":75},"end":{"line":28,"column":79}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":16},"end":{"line":28,"column":20}},{"start":{"line":28,"column":24},"end":{"line":28,"column":37}},{"start":{"line":28,"column":41},"end":{"line":28,"column":64}}]},"3":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":32},"end":{"line":36,"column":39}},{"start":{"line":36,"column":42},"end":{"line":36,"column":46}}]}},"code":["define(['./_apply', './_createCtor', './_root'], function(apply, createCtor, root) {","","  /** Used to compose bitmasks for function metadata. */","  var BIND_FLAG = 1;","","  /**","   * Creates a function that wraps `func` to invoke it with the `this` binding","   * of `thisArg` and `partials` prepended to the arguments it receives.","   *","   * @private","   * @param {Function} func The function to wrap.","   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.","   * @param {*} thisArg The `this` binding of `func`.","   * @param {Array} partials The arguments to prepend to those provided to","   *  the new function.","   * @returns {Function} Returns the new wrapped function.","   */","  function createPartial(func, bitmask, thisArg, partials) {","    var isBind = bitmask & BIND_FLAG,","        Ctor = createCtor(func);","","    function wrapper() {","      var argsIndex = -1,","          argsLength = arguments.length,","          leftIndex = -1,","          leftLength = partials.length,","          args = Array(leftLength + argsLength),","          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;","","      while (++leftIndex < leftLength) {","        args[leftIndex] = partials[leftIndex];","      }","      while (argsLength--) {","        args[leftIndex++] = arguments[++argsIndex];","      }","      return apply(fn, isBind ? thisArg : this, args);","    }","    return wrapper;","  }","","  return createPartial;","});",""],"l":{"1":1,"4":0,"18":1,"19":0,"22":1,"23":0,"30":0,"31":0,"33":0,"34":0,"36":0,"38":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createRange.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createRange.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":60},"end":{"line":1,"column":106}}},"2":{"name":"createRange","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":34}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":32,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":13,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":28,"column":6}},"5":{"start":{"line":15,"column":6},"end":{"line":17,"column":7}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":31}},"7":{"start":{"line":19,"column":6},"end":{"line":19,"column":30}},"8":{"start":{"line":20,"column":6},"end":{"line":25,"column":7}},"9":{"start":{"line":21,"column":8},"end":{"line":21,"column":20}},"10":{"start":{"line":22,"column":8},"end":{"line":22,"column":18}},"11":{"start":{"line":24,"column":8},"end":{"line":24,"column":28}},"12":{"start":{"line":26,"column":6},"end":{"line":26,"column":74}},"13":{"start":{"line":27,"column":6},"end":{"line":27,"column":52}},"14":{"start":{"line":31,"column":2},"end":{"line":31,"column":21}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":6}},{"start":{"line":15,"column":6},"end":{"line":15,"column":6}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":10},"end":{"line":15,"column":14}},{"start":{"line":15,"column":18},"end":{"line":15,"column":41}},{"start":{"line":15,"column":45},"end":{"line":15,"column":77}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"4":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":35},"end":{"line":26,"column":55}},{"start":{"line":26,"column":59},"end":{"line":26,"column":73}}]},"5":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":49},"end":{"line":26,"column":50}},{"start":{"line":26,"column":53},"end":{"line":26,"column":55}}]}},"code":["define(['./_baseRange', './_isIterateeCall', './toFinite'], function(baseRange, isIterateeCall, toFinite) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /**","   * Creates a `_.range` or `_.rangeRight` function.","   *","   * @private","   * @param {boolean} [fromRight] Specify iterating from right to left.","   * @returns {Function} Returns the new range function.","   */","  function createRange(fromRight) {","    return function(start, end, step) {","      if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {","        end = step = undefined;","      }","      // Ensure the sign of `-0` is preserved.","      start = toFinite(start);","      if (end === undefined) {","        end = start;","        start = 0;","      } else {","        end = toFinite(end);","      }","      step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);","      return baseRange(start, end, step, fromRight);","    };","  }","","  return createRange;","});",""],"l":{"1":1,"4":0,"13":1,"14":0,"15":0,"16":0,"19":0,"20":0,"21":0,"22":0,"24":0,"26":0,"27":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createRecurry.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createRecurry.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":62},"end":{"line":1,"column":109}}},"2":{"name":"createRecurry","line":31,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":111}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":58,"column":3}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":16}},"3":{"start":{"line":7,"column":2},"end":{"line":12,"column":30}},"4":{"start":{"line":31,"column":2},"end":{"line":55,"column":3}},"5":{"start":{"line":32,"column":4},"end":{"line":36,"column":58}},"6":{"start":{"line":38,"column":4},"end":{"line":38,"column":61}},"7":{"start":{"line":39,"column":4},"end":{"line":39,"column":62}},"8":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"9":{"start":{"line":42,"column":6},"end":{"line":42,"column":46}},"10":{"start":{"line":44,"column":4},"end":{"line":47,"column":6}},"11":{"start":{"line":49,"column":4},"end":{"line":49,"column":52}},"12":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"13":{"start":{"line":51,"column":6},"end":{"line":51,"column":31}},"14":{"start":{"line":53,"column":4},"end":{"line":53,"column":37}},"15":{"start":{"line":54,"column":4},"end":{"line":54,"column":50}},"16":{"start":{"line":57,"column":2},"end":{"line":57,"column":23}}},"branchMap":{"1":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":31},"end":{"line":33,"column":38}},{"start":{"line":33,"column":41},"end":{"line":33,"column":50}}]},"2":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":36},"end":{"line":34,"column":45}},{"start":{"line":34,"column":48},"end":{"line":34,"column":55}}]},"3":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":32},"end":{"line":35,"column":40}},{"start":{"line":35,"column":43},"end":{"line":35,"column":52}}]},"4":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":37},"end":{"line":36,"column":46}},{"start":{"line":36,"column":49},"end":{"line":36,"column":57}}]},"5":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":26},"end":{"line":38,"column":38}},{"start":{"line":38,"column":41},"end":{"line":38,"column":59}}]},"6":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":27},"end":{"line":39,"column":45}},{"start":{"line":39,"column":48},"end":{"line":39,"column":60}}]},"7":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"8":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]}},"code":["define(['./_isLaziable', './_setData', './_setWrapToString'], function(isLaziable, setData, setWrapToString) {","","  /** Used as a safe reference for `undefined` in pre-ES5 environments. */","  var undefined;","","  /** Used to compose bitmasks for function metadata. */","  var BIND_FLAG = 1,","      BIND_KEY_FLAG = 2,","      CURRY_BOUND_FLAG = 4,","      CURRY_FLAG = 8,","      PARTIAL_FLAG = 32,","      PARTIAL_RIGHT_FLAG = 64;","","  /**","   * Creates a function that wraps `func` to continue currying.","   *","   * @private","   * @param {Function} func The function to wrap.","   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.","   * @param {Function} wrapFunc The function to create the `func` wrapper.","   * @param {*} placeholder The placeholder value.","   * @param {*} [thisArg] The `this` binding of `func`.","   * @param {Array} [partials] The arguments to prepend to those provided to","   *  the new function.","   * @param {Array} [holders] The `partials` placeholder indexes.","   * @param {Array} [argPos] The argument positions of the new function.","   * @param {number} [ary] The arity cap of `func`.","   * @param {number} [arity] The arity of `func`.","   * @returns {Function} Returns the new wrapped function.","   */","  function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {","    var isCurry = bitmask & CURRY_FLAG,","        newHolders = isCurry ? holders : undefined,","        newHoldersRight = isCurry ? undefined : holders,","        newPartials = isCurry ? partials : undefined,","        newPartialsRight = isCurry ? undefined : partials;","","    bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);","    bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);","","    if (!(bitmask & CURRY_BOUND_FLAG)) {","      bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);","    }","    var newData = [","      func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,","      newHoldersRight, argPos, ary, arity","    ];","","    var result = wrapFunc.apply(undefined, newData);","    if (isLaziable(func)) {","      setData(result, newData);","    }","    result.placeholder = placeholder;","    return setWrapToString(result, func, bitmask);","  }","","  return createRecurry;","});",""],"l":{"1":1,"4":0,"7":0,"31":1,"32":0,"38":0,"39":0,"41":0,"42":0,"44":0,"49":0,"50":0,"51":0,"53":0,"54":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createRelationalOperation.js":{"path":"/home/travis/build/npmtest/node-npmtest-intern/node_modules/intern/browser_modules/lodash-amd/_createRelationalOperation.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":23},"end":{"line":1,"column":42}}},"2":{"name":"createRelationalOperation","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":47}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":11},"end":{"line":11,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":3}},"2":{"start":{"line":10,"column":2},"end":{"line":18,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":17,"column":6}},"4":{"start":{"line":12,"column":6},"end":{"line":15,"column":7}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":32}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":32}},"7":{"start":{"line":16,"column":6},"end":{"line":16,"column":36}},"8":{"start":{"line":20,"column":2},"end":{"line":20,"column":35}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":6}},{"start":{"line":12,"column":6},"end":{"line":12,"column":6}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":36}},{"start":{"line":12,"column":40},"end":{"line":12,"column":64}}]}},"code":["define(['./toNumber'], function(toNumber) {","","  /**","   * Creates a function that performs a relational operation on two values.","   *","   * @private","   * @param {Function} operator The function to perform the operation.","   * @returns {Function} Returns the new relational operation function.","   */","  function createRelationalOperation(operator) {","    return function(value, other) {","      if (!(typeof value == 'string' && typeof other == 'string')) {","        value = toNumber(value);","        other = toNumber(other);","      }","      return operator(value, other);","    };","  }","","  return createRelationalOperation;","});",""],"l":{"1":1,"10":1,"11":0,"12":0,"13":0,"14":0,"16":0,"20":0}}}